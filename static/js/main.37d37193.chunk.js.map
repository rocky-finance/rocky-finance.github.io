{"version":3,"sources":["i18n.ts","utils/googleAnalytics.ts","constants/index.ts","assets/icons/logo.svg","assets/icons/dai.svg","assets/icons/usdc.svg","utils/parseStringToBigNumber.ts","utils/numberInputState.ts","state/user.ts","utils/index.ts","connectors/index.ts","hooks/index.ts","hooks/useContract.ts","hooks/usePoolData.ts","components/ConfirmTransaction.tsx","components/DeadlineField.tsx","components/GasField.tsx","components/CheckboxInput.tsx","components/ToolTip.tsx","components/InfiniteApprovalField.tsx","components/LPStakingBanner.tsx","components/Modal.tsx","components/MyActivityCard.tsx","components/MyShareCard.tsx","components/PoolInfoCard.tsx","components/Button.tsx","components/HighPriceImpactConfirmation.tsx","utils/gas.ts","utils/slippage.ts","utils/priceImpact.ts","components/ReviewDeposit.tsx","components/SlippageField.tsx","components/TokenInput.tsx","components/ThemeChanger.tsx","assets/icons/coinbasewallet.svg","assets/icons/metamask.svg","assets/icons/walletconnect.svg","components/ConnectWallet.tsx","assets/icons/profile.svg","components/Web3Status.tsx","components/TopMenu.tsx","components/DepositPage.tsx","utils/checkAndApproveTokenForTrade.ts","utils/dateTime.ts","state/application.ts","assets/icons/iconCancelCircle.svg","assets/icons/iconCheckCircle.svg","assets/icons/iconWaitingCircle.svg","components/Toast.tsx","components/ToastsContainer.tsx","providers/ToastsProvider.tsx","hooks/useToast.ts","hooks/usePoller.ts","state/wallet/hooks.ts","pages/DepositStable.tsx","hooks/useApproveAndDeposit.ts","hooks/useTokenFormState.ts","pages/Risk.tsx","components/StakePoolCard.tsx","components/StakePage.tsx","hooks/useHarvest.ts","hooks/useApproveAndStake.ts","hooks/useUnstake.ts","pages/Stake.tsx","assets/icons/icon_down.svg","components/ReviewSwap.tsx","components/SwapForm.tsx","components/SwapPage.tsx","pages/SwapStable.tsx","hooks/useApproveAndSwap.ts","components/Web3ReactManager/index.tsx","assets/deposit_graph.svg","components/NoShareContent.tsx","components/RadioButton.tsx","components/ReviewWithdraw.tsx","components/WithdrawPage.tsx","hooks/useApproveAndWithdraw.ts","hooks/useWithdrawFormState.ts","pages/WithdrawStable.tsx","utils/updateGasPrices.ts","pages/App.tsx","utils/updateTokenPrices.ts","theme/index.ts","theme/components/index.ts","theme/components/button.ts","utils/getLibrary.ts","reportWebVitals.ts","state/index.ts","index.tsx"],"names":["i18next","use","Fetch","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","logEvent","name","params","window","gtag","console","debug","ChainId","NetworkContextName","STABLECOIN_POOL_NAME","REFS","Token","addresses","decimals","symbol","geckoId","icon","this","BLOCK_TIME","ROCKY_MASTERCHEF_ADDRESSES","ROPSTEN","HARDHAT","STABLECOIN_SWAP_ADDRESSES","STABLECOIN_SWAP_TOKEN","daiLogo","ROCKY_TOKEN","appLogo","WXDAI","USDC","usdcLogo","BSC_DAI","BSC_USDC","STABLECOIN_POOL_TOKENS","TOKENS_MAP","concat","reduce","acc","token","POOLS_MAP","MASTERCHEF_POOLS","contract_pid","TRANSACTION_TYPES","parseStringToBigNumber","valueRaw","precision","fallback","valueSafe","isFallback","parseUnits","BigNumber","from","value","numberInputStateCreator","inputValue","isBigNumber","isEmpty","isValid","formatUnits","toString","GasPrices","Slippages","Deadlines","initialState","userSwapAdvancedMode","userPoolAdvancedMode","userDarkMode","gasPriceSelected","Standard","slippageSelected","OneTenth","infiniteApproval","transactionDeadlineSelected","Ten","gasCustomStateCreator","slippageCustomStateCreator","pow","mul","userSlice","createSlice","reducers","updateSwapAdvancedMode","state","action","payload","updatePoolAdvancedMode","updateDarkMode","updateGasPriceCustom","gasCustom","updateGasPriceSelected","Custom","updateSlippageSelected","slippageCustom","updateSlippageCustom","updateInfiniteApproval","updateTransactionDeadlineSelected","transactionDeadlineCustom","updateTransactionDeadlineCustom","actions","getContract","address","ABI","library","account","getAddress","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","formatBNToString","bn","nativePrecison","decimalPlaces","fullPrecision","decimalIdx","indexOf","undefined","slice","formatBNToPercentString","formatDeadlineToNumber","deadlineSelected","deadlineCustom","Thirty","NETWORK_URL","process","NETWORK_CHAIN_ID","parseInt","network","NetworkConnector","urls","getProvider","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","walletlink","WalletLinkConnector","url","appName","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","useContract","withSignerIfPossible","useMemo","error","useRockyMasterChefContract","chainId","ROCKY_MASTERCHEF_ABI","useTokenContract","t","ERC20_ABI","useSwapContract","poolName","stablecoinSwapContract","SWAP_ABI","useAllContracts","wxdaiContract","usdcContract","bscDaiContract","bscUSDCContract","rockyTokenContract","stablecoinSwapTokenContract","some","Boolean","usePoolData","swapContract","tokenContracts","useState","poolData","setPoolData","useSelector","application","tokenPricesUSD","lastTransactionTimes","lastDepositTime","lastWithdrawTime","lastSwapTime","useEffect","a","POOL_TOKENS","Promise","all","calculateCurrentWithdrawFee","swapStorage","userCurrentWithdrawFee","adminFee","lpTokenAddress","lpToken","swapFee","LPTOKEN_ABI","balanceOf","mintedAmounts","totalSupply","userLpTokenBalance","userLpTokenMinted","totalLpTokenBalance","isZero","getVirtualPrice","virtualPrice","map","i","getTokenBalance","balance","tokenBalances","tokenBalancesSum","sum","b","add","tokenBalancesUSD","String","div","tokenBalancesUSDSum","lpTokenPriceUSD","comparisonPoolToken","keepAPRNumerator","KEEP","keepAPRDenominator","keepApr","userShare","userPoolTokenBalances","userPoolTokenBalancesSum","userPoolTokenBalancesUSD","userPoolTokenBalancesUSDSum","poolTokens","percent","userPoolTokens","tokens","reserve","totalLocked","volume","utilization","apy","poolAPY","rewardAPY","totalAPY","share","usdBalance","avgBalance","currentWithdrawFee","lpTokenBalance","lpTokenMinted","getSwapData","ConfirmTransaction","useTranslation","className","width","height","viewBox","fill","xmlns","d","split","line","key","DeadlineField","dispatch","useDispatch","user","classNames","selected","onClick","type","placeholder","onChange","e","target","isNaN","GasField","gasStandard","gasFast","gasInstant","Fast","Instant","gasPriceConst","priceValue","text","CheckboxInput","checked","aria-hidden","focusable","strokeWidth","ToolTip","content","children","InfiniteApprovalField","LPStakingBanner","href","rel","Modal","isOpen","onClose","currentTarget","stopPropagation","MyActivityCard","historicalPoolData","historicalFormattedData","totalDepositsBTC","commify","totalWithdrawalsBTC","totalProfitBTC","totalDepositsUSD","totalWithdrawalsUSD","totalProfitUSD","MyShareCard","data","formattedData","coin","PoolInfoCard","index","alt","src","Button","props","kind","size","buttonProps","HighPriceImpactConfirmation","onCheck","formatGasToString","gasPricesGwei","gasSelected","gasPrice","_applySlippage","numerator","denominator","sub","addSlippage","subtractSlippage","formatSlippageToString","One","isHighPriceImpact","priceImpact","negOne","lte","calculatePriceImpact","tokenInputAmount","tokenOutputAmount","gt","ReviewDeposit","onConfirm","transactionData","hasConfirmedHighPriceImpact","setHasConfirmedHighPriceImpact","isHighPriceImpactTxn","deadline","items","amount","totalAmount","style","to","item","shareOfPool","singleTokenPriceUSD","prevState","disabled","SlippageField","TokenInput","max","disableSymbol","hasMaxButton","parsedValue","parseFloat","periodIndex","isValidInput","isValidPrecision","length","onFocus","select","preventDefault","ThemeChanger","useColorMode","colorMode","toggleColorMode","document","body","classList","remove","wallets","metamaskIcon","connector","walletconnectIcon","coinbasewalletIcon","ConnectWallet","activate","useWeb3React","wallet","catch","UnsupportedChainIdError","Web3Status","modalOpen","setModalOpen","substring","profile","TopMenu","activeTab","logo","DepositPage","exceedsWallet","myShareData","onChangeTokenInputValue","onConfirmTransaction","currentModal","setCurrentModal","advanced","validDepositAmount","TRANSACTION_INFO","gte","upsideDown","fillRule","clipRule","show","py","variant","display","pool","checkAndApproveTokenForTrade","srcTokenContract","swapAddress","spenderAddress","spendingValue","approve","cleanupOnStart","callbacks","onTransactionStart","call","approvalTransaction","wait","confirmedTransaction","onTransactionSuccess","onTransactionError","eq","tokenName","allowance","existingAllowance","MaxUint256","getFormattedTimeString","Date","toLocaleTimeString","applicationSlice","updateGasPrices","updateTokensPricesUSD","updateLastTransactionTimes","getIconForType","iconCancelCircle","iconCheckCircle","iconWaitingCircle","Toast","title","ToastsContainer","ToastsContext","React","createContext","addToast","clearToasts","ToastsProvider","toasts","setToasts","useCallback","timeoutHandle","options","autoDismiss","toastId","nanoid","removeToast","prevToasts","filter","id","setTimeout","toast","clearTimeout","contextValue","Provider","createPortal","useToast","useContext","usePoller","fn","delay","savedCallback","useRef","current","setInterval","clearInterval","useTokenBalance","setBalance","tokenContract","newBalance","pollBalance","DepositStable","approveAndDeposit","approveSingleToken","every","bal","minToMint","calculateTokenAmount","clearMessage","addLiquidity","Math","round","getTime","spendTransaction","now","resolve","useApproveAndDeposit","userShareData","tokenInputStateCreators","tokenFormState","setTokenFormState","newState","convertedNewState","Object","keys","useTokenFormState","updateTokenFormState","Zero","estDepositLPTokenAmount","setEstDepositLPTokenAmount","setPriceImpact","tokenInputSum","toFixed","depositLPTokenAmount","calculateMaxDeposits","lt","depositTransaction","totalValueUSD","TOTAL_AMOUNT_DECIMALS","forEach","usdPriceBN","valueUSD","push","shiftAmount","shiftBNDecimals","toTotalValueUSD","buildTransactionData","Risk","CONTRACT_INFO","AUDITS_INFO","StakePool","depositAmount","setDepositAmount","withdrawAmount","setWithdrawAmount","onHarvest","onDeposit","onWithdraw","pools","StakePage","harvest","masterChefContract","pid","pendingRocky","withdraw","useHarvest","approveAndStake","args","POOL_TOKEN","stakingValue","deposit","useApproveAndStake","unstake","unstakingValue","userInfo","useUnstake","log","Stake","ReviewSwap","fromToken","toToken","exchangeRateInfo","iconDown","pair","exchangeRate","SwapForm","isSwapFrom","onChangeSelected","onChangeAmount","autoComplete","autoCorrect","spellCheck","readOnly","find","formattedShortBalance","formattedLongBalance","SwapPage","fromState","toState","onChangeFromToken","onChangeFromAmount","onChangeToToken","onClickReverseExchangeDirection","formattedPriceImpact","formattedExchangeRate","rate","showError","SwapStable","approveAndSwap","fromTokenSymbol","fromAmount","toAmount","indexFrom","findIndex","indexTo","toTokenSymbol","swap","swapTransaction","useApproveAndSwap","tbtcTokenBalance","wtcTokenBalance","renbtcTokenBalance","sbtcTokenBalance","btcPoolTokenBalances","usePoolTokenBalances","formState","setFormState","calculateSwapAmount","debounce","formStateArg","cleanedFormFromValue","replace","tokenIndexFrom","tokenIndexTo","amountToGive","amountToReceive","calculateSwap","tokenTo","tokenFrom","amountFrom","tokenPrecisionFrom","amountTo","tokenPrecisionTo","handleReverseExchangeDirection","nextState","Web3ReactManager","networkActive","networkError","activateNetwork","triedEager","tried","setTried","isAuthorized","then","isMobile","ethereum","useEagerConnect","suppress","on","handleChainChanged","handleAccountsChanged","accounts","removeListener","useInactiveListener","showLoader","setShowLoader","timeout","NoShareContent","depositGraph","RadioButton","label","ReviewWithdraw","isHighSlippageTxn","rates","WithdrawPage","tokensData","onFormChange","formStateData","reviewData","noShare","fieldName","percentage","message","withdrawType","tokenSymbol","lpTokenAmountToSpend","gas","useApproveAndWithdraw","lpTokenContract","setLPTokenAddress","useLPTokenContract","allowanceAmount","removeLiquidity","removeLiquidityImbalance","removeLiquidityOneToken","IMBALANCE","ALL","WithdrawStable","tokenInputsEmptyState","formEmptyState","tokenInputs","calculateAndUpdateDynamicFields","percentageRaw","effectiveUserLPTokenBalance","inputCalculatedLPTokenAmount","field","calculateRemoveLiquidity","tokenAmounts","tokenIndex","calculateRemoveLiquidityOneToken","tokenAmount","tokenSymbolInput","valueInput","newTokenInputs","activeInputTokens","finalState","pendingTokenInput","stateValue","useWithdrawFormState","withdrawFormState","updateWithdrawFormState","approveAndWithdraw","estWithdrawBonus","setEstWithdrawBonus","withdrawLPTokenAmount","calculateWithdrawBonus","reviewWithdrawData","slippage","fetchGasPriceGasNow","fetch","GAS_FETCH","res","json","code","rapid","fast","standard","retry","gasPrices","retries","App","fetchAndUpdateGasPrice","fetchGasPrices","fetchAndUpdateTokensPrice","tokenIds","encodeURIComponent","join","result","usd","ETH","BTC","bitcoin","fetchTokenPricesUSD","exact","path","component","overrides","config","initialColorMode","useSystemColorMode","colors","button","500","red","50","100","200","300","400","600","700","800","900","teal","purple","gold","fonts","heading","mono","components","variants","primary","opacity","color","transparentize","theme","bg","_hover","_disabled","_active","extendTheme","getLibrary","provider","Web3Provider","pollingInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","PERSISTED_KEYS","stateFromStorage","load","states","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","save","preloadedState","merge","userInitialState","Web3ProviderNetwork","createWeb3ReactRoot","autoRefreshOnNetworkChange","addEventListener","description","filename","lineno","colno","fatal","ReactDOM","render","chakraTheme","StrictMode","getElementById","delta","web_vitals_metric_id","web_vitals_metric_value"],"mappings":"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","file":"static/js/main.37d37193.chunk.js","sourcesContent":["import Fetch from \"i18next-fetch-backend\"\nimport LanguageDetector from \"i18next-browser-languagedetector\"\nimport i18next from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n\nvoid i18next\n  .use(Fetch)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `./locales/{{lng}}.json`,\n    },\n    react: {\n      useSuspense: true,\n    },\n    fallbackLng: \"en\",\n    preload: [\"en\"],\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n  })\n\nexport default i18next\n","import { Metric } from \"web-vitals\"\n\nexport function logEvent(name: string, params: Record<string, unknown>): void {\n  // gtag is only loaded in index.html when NODE_ENV is set to production, so check if it's a function\n  if (typeof window.gtag === \"function\") {\n    window.gtag(\"event\", name, params)\n  } else {\n    console.debug(`Logging event ${name} with parameters:`, params)\n  }\n}\n\nexport function logError(error: ErrorEvent): void {\n  logEvent(\"exception\", {\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true,\n  })\n}\n\n// See: https://github.com/GoogleChrome/web-vitals#using-gtagjs-google-analytics-4\nexport function sendWebVitalsToGA({ name, delta, value, id }: Metric): void {\n  logEvent(name, {\n    // Use the metric delta as the event's value parameter.\n    value: delta,\n    // Everything below is a custom event parameter.\n    web_vitals_metric_id: id, // Needed to aggregate events.\n    web_vitals_metric_value: value, // Optional\n    // Any additional params or metadata (e.g. debug information) can be\n    // set here as well, within the following limitations:\n    // https://support.google.com/analytics/answer/9267744\n  })\n}\n","import appLogo from \"../assets/icons/logo.svg\"\nimport daiLogo from \"../assets/icons/dai.svg\"\nimport usdcLogo from \"../assets/icons/usdc.svg\"\n\nexport const NetworkContextName = \"NETWORK\"\nexport const BTC_POOL_NAME = \"BTC Pool\"\nexport const STABLECOIN_POOL_NAME = \"Stablecoin Pool\"\nexport type PoolName = typeof BTC_POOL_NAME | typeof STABLECOIN_POOL_NAME\n\nexport enum ChainId {\n  // MAINNET = 1,\n  ROPSTEN = 3,\n  // RINKEBY = 4,\n  // GÖRLI = 5,\n  // KOVAN = 42,\n  HARDHAT = 31337,\n}\n\nexport class Token {\n  readonly addresses: { [chainId in ChainId]: string }\n  readonly decimals: number\n  readonly symbol: string\n  readonly name: string\n  readonly icon: string\n  readonly geckoId: string\n\n  constructor(\n    addresses: { [chainId in ChainId]: string },\n    decimals: number,\n    symbol: string,\n    geckoId: string,\n    name: string,\n    icon: string,\n  ) {\n    this.addresses = addresses\n    this.decimals = decimals\n    this.symbol = symbol\n    this.geckoId = geckoId\n    this.name = name\n    this.icon = icon\n  }\n}\n\nexport const BLOCK_TIME = 15000\n\nexport const ROCKY_MASTERCHEF_ADDRESSES: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"0x1f4019cfa2751dc69393153Ef35216329A63773d\",\n  [ChainId.HARDHAT]: \"TODO\",\n}\nexport const STABLECOIN_SWAP_ADDRESSES: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"0x7603B0774d89DD1FdCbC9d5e6b68EBe9314B5c09\",\n  [ChainId.HARDHAT]: \"0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8\",\n}\n\nexport const STABLECOIN_SWAP_TOKEN_CONTRACT_ADDRESSES: {\n  [chainId in ChainId]: string\n} = {\n  [ChainId.ROPSTEN]: \"0x07f1cf8a575a4ee4e537c3548b51f46f6792cd3f\",\n  [ChainId.HARDHAT]: \"0xB955b6c65Ff69bfe07A557aa385055282b8a5eA3\",\n}\n\nexport const STABLECOIN_SWAP_TOKEN = new Token(\n  STABLECOIN_SWAP_TOKEN_CONTRACT_ADDRESSES,\n  18,\n  \"rUSDp\",\n  \"rusdp\",\n  \"Rocky USD primo\",\n  daiLogo,\n)\n\nexport const ROCKY_TOKEN_CONTRACT_ADDRESSES: {\n  [chainId in ChainId]: string\n} = {\n  [ChainId.ROPSTEN]: \"0x87470df63d3c2Fa95143626e861AB2471aaf0dCb\",\n  [ChainId.HARDHAT]: \"TODO\",\n}\n\nexport const ROCKY_TOKEN = new Token(\n  ROCKY_TOKEN_CONTRACT_ADDRESSES,\n  18,\n  \"ROCKY\",\n  \"\",\n  \"ROCKY\",\n  appLogo,\n)\n\n// Stablecoins\nconst WXDAI_CONTRACT_ADDRESSES: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"0x0a2A3efF28b22d843837a9c1Dc207434E815ebA2\",\n  [ChainId.HARDHAT]: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\n}\nexport const WXDAI = new Token(\n  WXDAI_CONTRACT_ADDRESSES,\n  18,\n  \"WXDAI\",\n  \"dai\",\n  \"WXDAI\",\n  daiLogo,\n)\n\nconst USDC_CONTRACT_ADDRESSES: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"0xC672c09C556637b5e6A2D45C5342a9E740cCD193\",\n  [ChainId.HARDHAT]: \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\",\n}\nexport const USDC = new Token(\n  USDC_CONTRACT_ADDRESSES,\n  6,\n  \"USDC\",\n  \"usd-coin\",\n  \"USDC\",\n  usdcLogo,\n)\n\nconst BSC_DAI_CONTRACT_ADDRESSES: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"0x1BD323D9210E49060C3d02CA4063b7c8fDC68140\",\n  [ChainId.HARDHAT]: \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\",\n}\nexport const BSC_DAI = new Token(\n  BSC_DAI_CONTRACT_ADDRESSES,\n  18,\n  \"bscDAI\",\n  \"dai\",\n  \"DAI (BSC)\",\n  daiLogo,\n)\n\nconst BSC_USDC_CONTRACT_ADDRESSES: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"0xE4301652D7efA890B671A96f399FbA36198cA27a\",\n  [ChainId.HARDHAT]: \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\",\n}\nexport const BSC_USDC = new Token(\n  BSC_USDC_CONTRACT_ADDRESSES,\n  18,\n  \"bscUSDC\",\n  \"usd-coin\",\n  \"USDC (BSC)\",\n  usdcLogo,\n)\n\nexport const STABLECOIN_POOL_TOKENS = [WXDAI, USDC, BSC_DAI, BSC_USDC]\n\n// maps a symbol string to a token object\nexport const TOKENS_MAP: {\n  [symbol: string]: Token\n} = STABLECOIN_POOL_TOKENS.concat([ROCKY_TOKEN, STABLECOIN_SWAP_TOKEN]).reduce(\n  (acc, token) => ({ ...acc, [token.symbol]: token }),\n  {},\n)\n\nexport const POOLS_MAP: {\n  [poolName: string]: Token[]\n} = {\n  [STABLECOIN_POOL_NAME]: STABLECOIN_POOL_TOKENS,\n}\n\nexport const MASTERCHEF_POOLS: Array<{ token: Token; contract_pid: number }> = [\n  {\n    token: STABLECOIN_SWAP_TOKEN,\n    contract_pid: 1,\n  },\n  {\n    token: ROCKY_TOKEN,\n    contract_pid: 0,\n  },\n]\n\nexport const TRANSACTION_TYPES = {\n  DEPOSIT: \"DEPOSIT\",\n  WITHDRAW: \"WITHDRAW\",\n  SWAP: \"SWAP\",\n}\n\nexport const POOL_FEE_PRECISION = 10\n\nexport const DEPLOYED_BLOCK: { [chainId in ChainId]: number } = {\n  [ChainId.ROPSTEN]: 9788429,\n  [ChainId.HARDHAT]: 0,\n}\n\nexport const POOL_STATS_URL: { [chainId in ChainId]: string } = {\n  [ChainId.ROPSTEN]: \"https://ipfs.saddle.exchange/pool-stats.json\",\n  [ChainId.HARDHAT]:\n    \"https://mehmeta-team-bucket.storage.fleek.co/pool-stats-dev.json\",\n}\n\nexport enum REFS {\n  TRANSACTION_INFO = \"https://docs.saddle.finance/faq#what-are-saddles-liquidity-provider-rewards\",\n  CONTRACT_INFO = \"https://github.com/saddle-finance/saddle-contract\",\n  AUDITS_INFO = \"https://github.com/saddle-finance/saddle-audits\",\n  GAS_FETCH = \"https://www.gasnow.org/api/v3/gas/price?utm_source=saddle\",\n}\n","export default __webpack_public_path__ + \"static/media/logo.2a5e02f4.svg\";","export default __webpack_public_path__ + \"static/media/dai.ae64f1f6.svg\";","export default __webpack_public_path__ + \"static/media/usdc.c8494593.svg\";","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { TOKENS_MAP } from \"../constants\"\nimport { parseUnits } from \"@ethersproject/units\"\n\n/**\n * Parses a user input string into a BigNumber.\n * Uses the native precision of the token if a tokenSymbol is provided\n * Defaults to a value of 0 if string cannot be parsed\n *\n * @param {string} valueRaw\n * @param {number} precision\n * @param {BigNumber} fallback\n * @return {Object} result\n * @return {BigNumber} result.value\n * @return {boolean} result.isFallback\n * }\n */\nexport default function parseStringToBigNumber(\n  valueRaw: string,\n  precision: number,\n  fallback?: BigNumber,\n): { value: BigNumber; isFallback: boolean } {\n  let valueSafe: BigNumber\n  let isFallback: boolean\n  try {\n    // attempt to parse string. Use fallback value if library error is thrown\n    valueSafe = parseUnits(valueRaw, precision)\n    isFallback = false\n  } catch {\n    valueSafe = fallback ?? BigNumber.from(\"0\")\n    isFallback = true\n  }\n  return { value: valueSafe, isFallback }\n}\n\n/**\n * Parses a user input string into a BigNumber.\n * Uses the native precision of the token if a tokenSymbol is provided\n * Defaults to a value of 0 if string cannot be parsed\n * @param {string} value\n * @param {string} tokenSymbol\n * @return {Object} result\n * @return {BigNumber} result.value\n * @return {boolean} result.isFallback */\nexport function parseStringAndTokenToBigNumber(\n  value: string,\n  tokenSymbol?: string,\n): { value: BigNumber; isFallback: boolean } {\n  return parseStringToBigNumber(\n    value,\n    tokenSymbol ? TOKENS_MAP[tokenSymbol]?.decimals : 18,\n    BigNumber.from(\"0\"),\n  )\n}\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport parseStringToBigNumber from \"../utils/parseStringToBigNumber\"\n\nexport interface NumberInputState {\n  isEmpty: boolean\n  isValid: boolean\n  precision: number\n  valueRaw: string\n  valueSafe: string // represents a BigNumber\n}\n\n/**\n * A curried function for representing user inputted number values.\n * Can be used to show errors in the UI, as well as safely interacting with the blockchain\n * @param {number} precision\n * @param {BigNumber} fallback\n * @return {function}\n */\nexport function numberInputStateCreator(\n  precision: number,\n  fallback: BigNumber,\n) {\n  /**\n   * Transforms a user inputted string into a more verbose format including BigNumber representation\n   * @param {string} inputValue\n   * @return {NumberInputState}\n   */\n  return function createNumberInputState(\n    inputValue: string | BigNumber,\n  ): NumberInputState {\n    if (BigNumber.isBigNumber(inputValue)) {\n      return {\n        isEmpty: false,\n        isValid: true,\n        precision,\n        valueRaw: formatUnits(inputValue, precision),\n        valueSafe: inputValue.toString(),\n      }\n    } else {\n      const { value: valueSafe, isFallback } = parseStringToBigNumber(\n        inputValue,\n        precision,\n        fallback,\n      )\n      return {\n        isEmpty: inputValue === \"\",\n        isValid: !isFallback,\n        precision,\n        valueRaw: inputValue,\n        valueSafe: valueSafe.toString(),\n      }\n    }\n  }\n}\n","import {\n  NumberInputState,\n  numberInputStateCreator,\n} from \"../utils/numberInputState\"\nimport { PayloadAction, createSlice } from \"@reduxjs/toolkit\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\n\nexport enum GasPrices {\n  Standard = \"STANDARD\",\n  Fast = \"FAST\",\n  Instant = \"INSTANT\",\n  Custom = \"CUSTOM\",\n}\n\nexport enum Slippages {\n  One = \"ONE\",\n  OneTenth = \"ONE_TENTH\",\n  Custom = \"CUSTOM\",\n}\n\nexport enum Deadlines {\n  Ten = \"TEN\",\n  Thirty = \"THIRTY\",\n  Custom = \"CUSTOM\",\n}\n\ninterface UserState {\n  userSwapAdvancedMode: boolean\n  userPoolAdvancedMode: boolean\n  userDarkMode: boolean\n  gasCustom?: NumberInputState\n  gasPriceSelected: GasPrices\n  slippageCustom?: NumberInputState\n  slippageSelected: Slippages\n  infiniteApproval: boolean\n  transactionDeadlineSelected: Deadlines\n  transactionDeadlineCustom?: string\n}\n\nexport const initialState: UserState = {\n  userSwapAdvancedMode: false,\n  userPoolAdvancedMode: false,\n  userDarkMode: false,\n  gasPriceSelected: GasPrices.Standard,\n  slippageSelected: Slippages.OneTenth,\n  infiniteApproval: false,\n  transactionDeadlineSelected: Deadlines.Ten,\n}\n\nconst gasCustomStateCreator = numberInputStateCreator(\n  0, // gas is in wei\n  BigNumber.from(0),\n)\nconst slippageCustomStateCreator = numberInputStateCreator(\n  4,\n  BigNumber.from(10).pow(4).mul(1),\n)\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    updateSwapAdvancedMode(\n      state: UserState,\n      action: PayloadAction<boolean>,\n    ): void {\n      state.userSwapAdvancedMode = action.payload\n    },\n    updatePoolAdvancedMode(\n      state: UserState,\n      action: PayloadAction<boolean>,\n    ): void {\n      state.userPoolAdvancedMode = action.payload\n    },\n    updateDarkMode(state: UserState, action: PayloadAction<boolean>): void {\n      // this will be phased out in favor of chakra's colorMode\n      state.userDarkMode = action.payload\n    },\n    updateGasPriceCustom(\n      state: UserState,\n      action: PayloadAction<string>,\n    ): void {\n      state.gasCustom = gasCustomStateCreator(action.payload)\n    },\n    updateGasPriceSelected(\n      state: UserState,\n      action: PayloadAction<GasPrices>,\n    ): void {\n      state.gasPriceSelected = action.payload\n      if (action.payload !== GasPrices.Custom) {\n        // clear custom value when standard option selected\n        state.gasCustom = gasCustomStateCreator(\"\")\n      }\n    },\n    updateSlippageSelected(\n      state: UserState,\n      action: PayloadAction<Slippages>,\n    ): void {\n      state.slippageSelected = action.payload\n      if (action.payload !== Slippages.Custom) {\n        // clear custom value when standard option selected\n        state.slippageCustom = slippageCustomStateCreator(\"\")\n      }\n    },\n    updateSlippageCustom(\n      state: UserState,\n      action: PayloadAction<string>,\n    ): void {\n      state.slippageCustom = slippageCustomStateCreator(action.payload)\n    },\n    updateInfiniteApproval(\n      state: UserState,\n      action: PayloadAction<boolean>,\n    ): void {\n      state.infiniteApproval = action.payload\n    },\n    updateTransactionDeadlineSelected(\n      state: UserState,\n      action: PayloadAction<Deadlines>,\n    ): void {\n      state.transactionDeadlineSelected = action.payload\n      // clear custom value when standard option selected\n      if (action.payload !== Deadlines.Custom) {\n        state.transactionDeadlineCustom = \"\"\n      }\n    },\n    updateTransactionDeadlineCustom(\n      state: UserState,\n      action: PayloadAction<string>,\n    ): void {\n      state.transactionDeadlineCustom = action.payload\n    },\n  },\n})\n\nexport const {\n  updateSwapAdvancedMode,\n  updatePoolAdvancedMode,\n  updateDarkMode,\n  updateGasPriceCustom,\n  updateGasPriceSelected,\n  updateSlippageCustom,\n  updateSlippageSelected,\n  updateInfiniteApproval,\n  updateTransactionDeadlineSelected,\n  updateTransactionDeadlineCustom,\n} = userSlice.actions\n\nexport default userSlice.reducer\n","import { JsonRpcSigner, Web3Provider } from \"@ethersproject/providers\"\n\nimport { AddressZero } from \"@ethersproject/constants\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Contract } from \"@ethersproject/contracts\"\nimport { ContractInterface } from \"ethers\"\nimport { Deadlines } from \"../state/user\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { getAddress } from \"@ethersproject/address\"\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: string): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\n// account is not optional\nexport function getSigner(\n  library: Web3Provider,\n  account: string,\n): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(\n  library: Web3Provider,\n  account?: string,\n): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(\n  address: string,\n  ABI: ContractInterface,\n  library: Web3Provider,\n  account?: string,\n): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account))\n}\n\nexport function formatBNToString(\n  bn: BigNumber,\n  nativePrecison: number,\n  decimalPlaces?: number,\n): string {\n  const fullPrecision = formatUnits(bn, nativePrecison)\n  const decimalIdx = fullPrecision.indexOf(\".\")\n  return decimalPlaces === undefined || decimalIdx === -1\n    ? fullPrecision\n    : fullPrecision.slice(\n        0,\n        decimalIdx + (decimalPlaces > 0 ? decimalPlaces + 1 : 0), // don't include decimal point if places = 0\n      )\n}\n\nexport function formatBNToPercentString(\n  bn: BigNumber,\n  nativePrecison: number,\n  decimalPlaces = 2,\n): string {\n  return `${formatBNToString(bn, nativePrecison - 2, decimalPlaces)}%`\n}\n\nexport function shiftBNDecimals(bn: BigNumber, shiftAmount: number): BigNumber {\n  if (shiftAmount < 0) throw new Error(\"shiftAmount must be positive\")\n  return bn.mul(BigNumber.from(10).pow(shiftAmount))\n}\n\nexport function calculateExchangeRate(\n  amountFrom: BigNumber,\n  tokenPrecisionFrom: number,\n  amountTo: BigNumber,\n  tokenPrecisionTo: number,\n): BigNumber {\n  return amountFrom.gt(\"0\")\n    ? amountTo\n        .mul(BigNumber.from(10).pow(36 - tokenPrecisionTo)) // convert to standard 1e18 precision\n        .div(amountFrom.mul(BigNumber.from(10).pow(18 - tokenPrecisionFrom)))\n    : BigNumber.from(\"0\")\n}\n\nexport function formatDeadlineToNumber(\n  deadlineSelected: Deadlines,\n  deadlineCustom?: string,\n): number {\n  let deadline\n  if (deadlineSelected === Deadlines.Thirty) {\n    deadline = 30\n  } else if (deadlineSelected === Deadlines.Custom) {\n    deadline = +(deadlineCustom || 10)\n  } else {\n    deadline = 10\n  }\n  return deadline\n}\n","import { InjectedConnector } from \"@web3-react/injected-connector\"\nimport { NetworkConnector } from \"@web3-react/network-connector\"\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\"\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\"\nimport { Web3Provider } from \"@ethersproject/providers\"\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\nexport const NETWORK_CHAIN_ID: number = parseInt(\n  process.env.REACT_APP_CHAIN_ID ?? \"1\",\n)\n\nif (typeof NETWORK_URL === \"undefined\") {\n  throw new Error(\n    `REACT_APP_NETWORK_URL must be a defined environment variable`,\n  )\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst { getProvider } = network\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary = networkLibrary ?? new Web3Provider(getProvider))\n}\n\nexport const injected = new InjectedConnector({\n  // mainnet, ropsten, rinkeby, goerli, kovan, local buidler\n  // see: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md\n  supportedChainIds: [1, 3, 4, 5, 42, 31337],\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcode: true,\n  // pollingInterval: POLLING_INTERVAL / 12000\n})\n\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: \"Rocky\",\n})\n","import { ChainId, NetworkContextName } from \"../constants\"\nimport { useEffect, useState } from \"react\"\n\nimport { Web3Provider } from \"@ethersproject/providers\"\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\"\nimport { injected } from \"../connectors\"\nimport { isMobile } from \"react-device-detect\"\nimport { useWeb3React as useWeb3ReactCore } from \"@web3-react/core\"\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & {\n  chainId?: ChainId\n} {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect(): boolean {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    void injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n * @param {boolean} suppress Suppress useEffect behaviour\n */\nexport function useInactiveListener(suppress = false): void {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = (): void => {\n        // eat errors\n        activate(injected, undefined, true).catch((error) => {\n          console.error(\"Failed to activate after chain changed\", error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]): void => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((error) => {\n            console.error(\"Failed to activate after accounts changed\", error)\n          })\n        }\n      }\n\n      ethereum.on(\"chainChanged\", handleChainChanged)\n      ethereum.on(\"accountsChanged\", handleAccountsChanged)\n\n      return (): void => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener(\"chainChanged\", handleChainChanged)\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","import {\n  BSC_DAI,\n  BSC_USDC,\n  PoolName,\n  ROCKY_MASTERCHEF_ADDRESSES,\n  ROCKY_TOKEN,\n  STABLECOIN_POOL_NAME,\n  STABLECOIN_SWAP_ADDRESSES,\n  STABLECOIN_SWAP_TOKEN,\n  Token,\n  USDC,\n  WXDAI,\n} from \"../constants\"\nimport { useMemo, useState } from \"react\"\n\nimport { Contract } from \"@ethersproject/contracts\"\nimport ERC20_ABI from \"../constants/abis/erc20.json\"\nimport { Erc20 } from \"../../types/ethers-contracts/Erc20\"\nimport LPTOKEN_ABI from \"../constants/abis/lpToken.json\"\nimport { LpToken } from \"../../types/ethers-contracts/LpToken\"\nimport ROCKY_MASTERCHEF_ABI from \"../constants/abis/rockyMasterChef.json\"\nimport { RockyMasterChef } from \"../../types/ethers-contracts/RockyMasterChef\"\nimport SWAP_ABI from \"../constants/abis/swap.json\"\nimport { Swap } from \"../../types/ethers-contracts/Swap\"\nimport { getContract } from \"../utils\"\nimport { useActiveWeb3React } from \"./index\"\n\n// returns null on errors\nfunction useContract(\n  address: string | undefined,\n  ABI: any, // eslint-disable-line @typescript-eslint/no-explicit-any\n  withSignerIfPossible = true,\n): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined,\n      )\n    } catch (error) {\n      console.error(\"Failed to get contract\", error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useRockyMasterChefContract(): RockyMasterChef | null {\n  const withSignerIfPossible = true\n  const { chainId } = useActiveWeb3React()\n  const masterChefContract = useContract(\n    chainId ? ROCKY_MASTERCHEF_ADDRESSES[chainId] : undefined,\n    ROCKY_MASTERCHEF_ABI,\n    withSignerIfPossible,\n  )\n  return masterChefContract as RockyMasterChef\n}\n\nexport function useTokenContract(\n  t: Token,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  const tokenAddress = chainId ? t.addresses[chainId] : undefined\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useSwapContract(poolName: PoolName): Swap | null {\n  const withSignerIfPossible = true\n  const { chainId } = useActiveWeb3React()\n  const stablecoinSwapContract = useContract(\n    chainId ? STABLECOIN_SWAP_ADDRESSES[chainId] : undefined,\n    SWAP_ABI,\n    withSignerIfPossible,\n  )\n  return useMemo(() => {\n    if (poolName === STABLECOIN_POOL_NAME) {\n      return stablecoinSwapContract as Swap\n    } else {\n      return stablecoinSwapContract as Swap\n    }\n  }, [stablecoinSwapContract, poolName])\n}\n\nexport function useLPTokenContract(poolName: PoolName): LpToken | null {\n  const swapContract = useSwapContract(poolName)\n  const [lpTokenAddress, setLPTokenAddress] = useState(\"\")\n  void swapContract\n    ?.swapStorage()\n    .then(({ lpToken }: { lpToken: string }) => setLPTokenAddress(lpToken))\n  return useContract(lpTokenAddress, LPTOKEN_ABI) as LpToken\n}\n\ninterface AllContractsObject {\n  [x: string]: Swap | Erc20 | null\n}\nexport function useAllContracts(): AllContractsObject | null {\n  const wxdaiContract = useTokenContract(WXDAI) as Erc20\n  const usdcContract = useTokenContract(USDC) as Erc20\n  const bscDaiContract = useTokenContract(BSC_DAI) as Erc20\n  const bscUSDCContract = useTokenContract(BSC_USDC) as Erc20\n  const rockyTokenContract = useTokenContract(ROCKY_TOKEN) as Erc20\n  const stablecoinSwapTokenContract = useTokenContract(\n    STABLECOIN_SWAP_TOKEN,\n  ) as Swap\n\n  return useMemo(() => {\n    if (\n      ![\n        wxdaiContract,\n        usdcContract,\n        bscDaiContract,\n        bscUSDCContract,\n        rockyTokenContract,\n        stablecoinSwapTokenContract,\n      ].some(Boolean)\n    )\n      return null\n    return {\n      [WXDAI.symbol]: wxdaiContract,\n      [USDC.symbol]: usdcContract,\n      [BSC_DAI.symbol]: bscDaiContract,\n      [BSC_USDC.symbol]: bscUSDCContract,\n      [ROCKY_TOKEN.symbol]: rockyTokenContract,\n      [STABLECOIN_SWAP_TOKEN.symbol]: stablecoinSwapTokenContract,\n    }\n  }, [\n    wxdaiContract,\n    usdcContract,\n    bscDaiContract,\n    bscUSDCContract,\n    rockyTokenContract,\n    stablecoinSwapTokenContract,\n  ])\n}\n","import { POOLS_MAP, PoolName, TRANSACTION_TYPES } from \"../constants\"\nimport { formatBNToPercentString, getContract } from \"../utils\"\nimport { useAllContracts, useSwapContract } from \"./useContract\"\nimport { useEffect, useState } from \"react\"\n\nimport { AddressZero } from \"@ethersproject/constants\"\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport LPTOKEN_ABI from \"../constants/abis/lpToken.json\"\nimport { LpToken } from \"../../types/ethers-contracts/LpToken\"\nimport { parseUnits } from \"@ethersproject/units\"\nimport { useActiveWeb3React } from \".\"\nimport { useSelector } from \"react-redux\"\n\ninterface TokenShareType {\n  percent: string\n  symbol: string\n  value: BigNumber\n}\n\nexport interface PoolDataType {\n  adminFee: BigNumber\n  apy: string // TODO: calculate\n  name: string\n  reserve: BigNumber\n  swapFee: BigNumber\n  tokens: TokenShareType[]\n  totalLocked: BigNumber\n  utilization: string // TODO: calculate\n  virtualPrice: BigNumber\n  volume: string // TODO: calculate\n  keepApr: BigNumber\n  lpTokenPriceUSD: BigNumber\n  poolAPY: BigNumber | null\n  rewardAPY: BigNumber | null\n  totalAPY: BigNumber | null\n}\n\nexport interface UserShareType {\n  avgBalance: BigNumber\n  currentWithdrawFee: BigNumber\n  lpTokenBalance: BigNumber\n  lpTokenMinted: BigNumber\n  name: string // TODO: does this need to be on user share?\n  share: BigNumber\n  tokens: TokenShareType[]\n  usdBalance: BigNumber\n  value: BigNumber\n}\n\nexport type PoolDataHookReturnType = [PoolDataType | null, UserShareType | null]\n\nexport default function usePoolData(\n  poolName: PoolName,\n): PoolDataHookReturnType {\n  const { account, library } = useActiveWeb3React()\n  const swapContract = useSwapContract(poolName)\n  const tokenContracts = useAllContracts()\n  const [poolData, setPoolData] = useState<PoolDataHookReturnType>([null, null])\n  const { tokenPricesUSD, lastTransactionTimes } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const lastDepositTime = lastTransactionTimes[TRANSACTION_TYPES.DEPOSIT]\n  const lastWithdrawTime = lastTransactionTimes[TRANSACTION_TYPES.WITHDRAW]\n  const lastSwapTime = lastTransactionTimes[TRANSACTION_TYPES.SWAP]\n\n  useEffect(() => {\n    async function getSwapData(): Promise<void> {\n      if (\n        poolName == null ||\n        swapContract == null ||\n        tokenContracts == null ||\n        tokenPricesUSD == null ||\n        library == null ||\n        account == null\n      )\n        return\n\n      const POOL_TOKENS = POOLS_MAP[poolName]\n\n      // Swap fees, price, and LP Token data\n      const [userCurrentWithdrawFee, swapStorage] = await Promise.all([\n        swapContract.calculateCurrentWithdrawFee(account || AddressZero),\n        swapContract.swapStorage(),\n      ])\n      const { adminFee, lpToken: lpTokenAddress, swapFee } = swapStorage\n      const lpToken = getContract(\n        lpTokenAddress,\n        LPTOKEN_ABI,\n        library,\n        account ?? undefined,\n      ) as LpToken\n      const [\n        userLpTokenBalance,\n        userLpTokenMinted,\n        totalLpTokenBalance,\n      ] = await Promise.all([\n        lpToken.balanceOf(account || AddressZero),\n        lpToken.mintedAmounts(account || AddressZero),\n        lpToken.totalSupply(),\n      ])\n\n      const virtualPrice = totalLpTokenBalance.isZero()\n        ? BigNumber.from(10).pow(18)\n        : await swapContract.getVirtualPrice()\n\n      // Pool token data\n      const tokenBalances: BigNumber[] = await Promise.all(\n        POOL_TOKENS.map(async (token, i) => {\n          const balance = await swapContract.getTokenBalance(i)\n          return BigNumber.from(10)\n            .pow(18 - token.decimals) // cast all to 18 decimals\n            .mul(balance)\n        }),\n      )\n      const tokenBalancesSum: BigNumber = tokenBalances.reduce((sum, b) =>\n        sum.add(b),\n      )\n      const tokenBalancesUSD = POOL_TOKENS.map((token, i) => {\n        const balance = tokenBalances[i]\n        return balance\n          .mul(parseUnits(String(tokenPricesUSD[token.symbol]), 18))\n          .div(BigNumber.from(10).pow(18))\n      })\n      const tokenBalancesUSDSum: BigNumber = tokenBalancesUSD.reduce((sum, b) =>\n        sum.add(b),\n      )\n      const lpTokenPriceUSD = tokenBalancesSum.isZero()\n        ? BigNumber.from(0)\n        : tokenBalancesUSDSum\n            .mul(BigNumber.from(10).pow(18))\n            .div(tokenBalancesSum)\n\n      // (weeksPerYear * KEEPPerWeek * KEEPPrice) / (BTCPrice * BTCInPool)\n      const comparisonPoolToken = POOL_TOKENS[0]\n      const keepAPRNumerator = BigNumber.from(52 * 250000)\n        .mul(BigNumber.from(10).pow(18))\n        .mul(parseUnits(String(tokenPricesUSD.KEEP), 18))\n      const keepAPRDenominator = totalLpTokenBalance\n        .mul(parseUnits(String(tokenPricesUSD[comparisonPoolToken.symbol]), 6))\n        .div(1e6)\n\n      const keepApr = totalLpTokenBalance.isZero()\n        ? keepAPRNumerator\n        : keepAPRNumerator.div(keepAPRDenominator)\n\n      // User share data\n      const userShare = userLpTokenBalance\n        .mul(BigNumber.from(10).pow(18))\n        .div(\n          totalLpTokenBalance.isZero()\n            ? BigNumber.from(\"1\")\n            : totalLpTokenBalance,\n        )\n      const userPoolTokenBalances = tokenBalances.map((balance) => {\n        return userShare.mul(balance).div(BigNumber.from(10).pow(18))\n      })\n      const userPoolTokenBalancesSum: BigNumber = userPoolTokenBalances.reduce(\n        (sum, b) => sum.add(b),\n      )\n      const userPoolTokenBalancesUSD = tokenBalancesUSD.map((balance) => {\n        return userShare.mul(balance).div(BigNumber.from(10).pow(18))\n      })\n      const userPoolTokenBalancesUSDSum: BigNumber = userPoolTokenBalancesUSD.reduce(\n        (sum, b) => sum.add(b),\n      )\n\n      const poolTokens = POOL_TOKENS.map((token, i) => ({\n        symbol: token.symbol,\n        percent: formatBNToPercentString(\n          tokenBalances[i]\n            .mul(10 ** 5)\n            .div(\n              totalLpTokenBalance.isZero()\n                ? BigNumber.from(\"1\")\n                : tokenBalancesSum,\n            ),\n          5,\n        ),\n        value: tokenBalances[i],\n      }))\n      const userPoolTokens = POOL_TOKENS.map((token, i) => ({\n        symbol: token.symbol,\n        percent: formatBNToPercentString(\n          tokenBalances[i]\n            .mul(10 ** 5)\n            .div(\n              totalLpTokenBalance.isZero()\n                ? BigNumber.from(\"1\")\n                : tokenBalancesSum,\n            ),\n          5,\n        ),\n        value: userPoolTokenBalances[i],\n      }))\n      const poolData = {\n        name: poolName,\n        tokens: poolTokens,\n        reserve: tokenBalancesUSDSum,\n        totalLocked: totalLpTokenBalance,\n        virtualPrice: virtualPrice,\n        adminFee: adminFee,\n        swapFee: swapFee,\n        volume: \"XXX\", // TODO\n        utilization: \"XXX\", // TODO\n        apy: \"XXX\", // obsolete\n        keepApr, // obsolete\n        lpTokenPriceUSD,\n        poolAPY: null,\n        rewardAPY: null,\n        totalAPY: null,\n      }\n      const userShareData = account\n        ? {\n            name: poolName,\n            share: userShare,\n            value: userPoolTokenBalancesSum,\n            usdBalance: userPoolTokenBalancesUSDSum,\n            avgBalance: userPoolTokenBalancesSum,\n            tokens: userPoolTokens,\n            currentWithdrawFee: userCurrentWithdrawFee,\n            lpTokenBalance: userLpTokenBalance,\n            lpTokenMinted: userLpTokenMinted,\n          }\n        : null\n      setPoolData([poolData, userShareData])\n    }\n    void getSwapData()\n  }, [\n    lastDepositTime,\n    lastWithdrawTime,\n    lastSwapTime,\n    poolName,\n    swapContract,\n    tokenContracts,\n    tokenPricesUSD,\n    account,\n    library,\n  ])\n\n  return poolData\n}\n","import \"./ConfirmTransaction.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport { useTranslation } from \"react-i18next\"\n\nfunction ConfirmTransaction(): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"confirmTransaction\">\n      <svg\n        width=\"240\"\n        height=\"240\"\n        viewBox=\"0 0 240 240\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M168.509 74.1549C168.509 74.1549 175.015 58.0033 174.173 54.3019C173.388 50.7126 173.332 49.591 167.444 45.2166C165.088 46.2821 160.882 47.7963 157.461 47.1234C152.414 46.17 149.834 44.4314 147.422 42.3003C145.011 40.1692 143.721 37.0286 143.497 35.1779C143.44 34.7292 143.945 34.3927 144.338 34.6732C146.413 36.1874 148.095 38.9354 153.984 40.8983C157.349 42.0199 160.097 41.6834 161.779 41.1226C154.32 35.963 143.497 28.8967 137.047 26.7656C128.803 24.0737 125.102 29.3454 125.102 29.3454L117.362 41.5712C117.362 41.5712 130.373 43.478 143.665 50.9369C156.9 58.3398 168.509 74.1549 168.509 74.1549Z\"\n          fill=\"#none\"\n        />\n        <path\n          d=\"M189.259 92.4937C187.633 92.7181 185.165 92.7181 181.857 91.8768C168.902 88.2315 160.938 66.8643 138.505 53.4046C102.669 34.8975 83.4327 51.61 83.4327 51.61C80.9651 53.2924 83.4888 54.358 83.4888 54.358L95.266 60.3027L100.818 63.2189C100.818 63.2189 97.285 67.7616 90.1065 64.2845C87.751 63.275 83.0402 62.9946 79.3948 66.2474C75.413 68.4346 77.1515 74.7718 74.2353 78.8097C71.3751 82.8476 65.6547 82.1747 65.0378 88.0072C64.5331 93.9519 69.244 95.0735 69.3561 99.504C69.4683 103.934 67.8419 106.458 67.3933 107.636C67.225 108.141 67.1129 108.758 67.1129 109.374C67.1689 110.216 67.5615 111.057 68.1223 111.73C68.571 112.235 68.9636 112.571 69.4122 112.852C71.319 114.141 72.9454 115.824 74.011 117.843C74.1792 118.179 74.3474 118.516 74.5718 118.852C74.74 119.133 74.9083 119.469 75.1326 119.862C76.3664 122.049 76.8711 124.629 76.4225 127.152C76.3103 127.825 76.3664 128.611 76.5907 129.34C77.0394 130.686 78.2171 131.695 79.6192 132.088C81.6942 132.592 83.4888 133.826 84.7226 135.565C84.8348 135.677 84.8909 135.845 85.003 135.957C86.6855 138.313 86.349 142.014 87.022 144.706C87.695 147.398 89.9382 148.239 93.191 150.09C96.4438 151.941 97.1167 154.857 95.7708 156.259C94.4248 157.661 86.4612 154.24 83.2645 158.054C80.909 160.241 81.9185 161.643 80.7408 165.793C79.5631 169.999 75.9738 166.915 74.067 169.831C72.1602 172.747 71.8798 175.888 72.8332 182.113C73.7866 188.338 79.8435 196.918 79.8435 196.918C79.8435 196.918 76.5907 185.59 83.6571 175.888C89.6578 168.821 94.2566 167.868 101.042 167.756C107.884 167.588 117.979 173.757 120.054 185.87C121.12 193.89 116.745 198.545 116.409 198.993C115.624 199.891 109.174 207.013 100.594 202.246C98.2384 200.62 96.1633 198.937 94.7613 195.685C93.7518 192.712 93.4714 188.73 95.1539 186.039C96.5559 183.795 98.7992 183.122 99.4722 183.066C100.482 182.954 102.669 183.01 104.071 184.076C105.473 185.141 106.987 186.712 106.707 189.403C106.426 192.095 103.622 192.881 102.557 192.656C101.659 192.488 102.276 192.6 102.501 192.656C100.762 192.544 99.9769 191.198 99.6404 190.245C99.5843 190.02 99.2479 190.076 99.1918 190.301C98.687 194.002 101.491 196.358 103.174 196.75C105.024 197.143 107.772 197.087 110.016 194.787C111.978 192.824 113.044 191.142 113.044 186.824C113.044 183.291 111.586 180.823 109.174 178.692C106.034 175.776 101.884 174.654 99.0235 174.878C96.3316 175.103 91.6207 176.224 88.5362 181.103C85.676 185.59 84.4422 191.759 86.8537 198.657L86.9659 198.881C92.4619 211.724 105.305 214.977 114.166 214.977C115.96 214.977 117.587 214.865 118.933 214.64C119.213 214.584 125.55 213.631 131.719 209.817C139.346 204.77 143.889 197.479 143.889 186.207C143.889 171.233 137.328 161.25 123.868 145.659C121.288 142.463 110.801 129.508 108.894 126.984C99.5283 114.87 89.0409 100.626 94.2566 89.8018C94.4248 89.4653 94.5931 89.1849 94.7613 88.8484C102.557 74.5475 124.541 78.0807 119.718 78.978C111.362 80.38 106.37 84.0814 104.856 85.7078C103.342 87.3342 102.501 88.7363 101.491 91.3721C99.7526 95.6904 101.155 102.364 104.856 108.197C120.952 131.022 144.73 159.456 147.647 166.298C151.404 174.934 151.965 181.776 151.909 185.982C151.853 190.189 150.843 196.918 150.843 196.918C150.843 196.918 156.395 192.488 159.031 187.104C161.667 181.72 162.116 179.14 161.331 177.121C160.489 175.103 158.414 175.046 157.573 171.738C156.732 168.429 159.087 165.513 156.62 160.241C155.554 157.941 149.89 154.577 146.974 150.875C144.057 147.174 138.73 140.556 134.748 135.228C127.569 125.694 125.214 122.442 121.064 117.058C125.55 118.404 131.159 120.254 144.057 114.254C156.003 120.367 164.191 120.03 167.051 119.862C169.911 119.694 172.603 118.404 174.678 116.777C176.024 115.712 177.034 113.581 177.651 112.179C177.875 111.674 177.37 111.225 176.865 111.393C166.827 115.543 157.573 112.179 146.188 105.841L144.17 104.72L142.151 105.785C130.205 112.179 117.643 107.187 116.521 106.739C116.072 106.514 112.651 104.72 111.137 101.691C109.623 98.6628 109.287 95.4661 110.408 92.7742C111.305 90.587 113.437 89.1288 116.914 88.3998C119.774 88.0633 123.475 89.1288 126.448 90.3065C127.121 90.587 127.738 89.914 127.457 89.2971C127.121 88.3998 126.896 87.4464 126.896 86.4369C126.896 84.7544 127.457 83.2402 128.354 82.0064L132.336 83.8571C131.663 84.5301 131.271 85.5396 131.383 86.6612C131.551 88.1194 132.785 89.3532 134.243 89.5214C136.206 89.8018 137.832 88.3437 138.001 86.493L141.758 88.2315C141.085 90.9795 138.954 93.1107 136.206 93.7836C135.645 93.8958 135.589 94.6249 136.15 94.7931C141.253 97.2046 156.171 104.159 156.171 104.159C156.171 104.159 164.808 108.982 172.379 108.028C179.669 107.636 182.922 101.859 178.604 102.42C174.286 102.981 164.079 98.5506 164.079 98.5506L157.237 95.3539L160.097 90.9235C160.097 90.9235 169.855 96.4756 178.492 98.3824C184.212 99.6162 188.082 96.3634 190.045 94.008C190.662 93.3911 190.101 92.3816 189.259 92.4937ZM109.399 73.0333C105.753 73.4819 100.201 75.1644 97.0607 76.6786C95.8829 77.2394 94.8735 77.8003 94.0322 78.305C91.2842 80.0996 88.8166 82.7916 86.8537 86.493C79.1705 101.411 93.2471 119.694 104.576 134.387C106.482 136.855 108.221 139.154 109.791 141.285C112.203 144.594 114.839 147.847 117.418 150.931C124.036 159.063 131.327 167.7 134.467 177.29C135.309 180.655 135.421 183.795 135.028 186.319C133.682 194.17 126.84 196.862 126.84 196.862C127.85 193.61 128.411 189.403 127.794 184.58V184.468C125.719 173.196 116.577 163.213 116.577 163.213C114.39 160.297 112.035 157.268 110.128 154.801C90.8916 130.069 88.9848 127.265 84.4422 119.021L84.3861 118.908C84.274 118.684 84.1057 118.404 83.9375 118.123C81.3016 113.693 74.2353 101.859 77.3198 89.4653C78.0489 86.6051 79.3387 84.0254 81.1894 81.7821C92.4619 67.1447 114.054 72.136 109.399 73.0333Z\"\n          fill=\"#none\"\n        />\n      </svg>\n\n      <h3>\n        {t(\"confirmTransaction\")\n          .split(\"\\n\")\n          .map((line, key) => (\n            <span key={key}>\n              {line}\n              <br />\n            </span>\n          ))}\n      </h3>\n    </div>\n  )\n}\n\nexport default ConfirmTransaction\n","import \"./DeadlineField.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport {\n  updateTransactionDeadlineCustom,\n  updateTransactionDeadlineSelected,\n} from \"../state/user\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state/index\"\nimport { Deadlines } from \"../state/user\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport classNames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function DeadlineField(): ReactElement {\n  const { t } = useTranslation()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const {\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  } = useSelector((state: AppState) => state.user)\n  return (\n    <div className=\"deadlineField\">\n      <div className=\"options\">\n        <div className=\"label\">{t(\"deadline\")}: </div>\n        <button\n          className={classNames({\n            selected: transactionDeadlineSelected === Deadlines.Ten,\n          })}\n          onClick={(): void => {\n            dispatch(updateTransactionDeadlineSelected(Deadlines.Ten))\n          }}\n        >\n          <span>10 {t(\"minutes\")}</span>\n        </button>\n        <button\n          className={classNames({\n            selected: transactionDeadlineSelected === Deadlines.Thirty,\n          })}\n          onClick={(): void => {\n            dispatch(updateTransactionDeadlineSelected(Deadlines.Thirty))\n          }}\n        >\n          <span>30 {t(\"minutes\")}</span>\n        </button>\n        <input\n          type=\"text\"\n          className={classNames({\n            selected: transactionDeadlineSelected === Deadlines.Custom,\n          })}\n          placeholder=\"10\"\n          onClick={(): PayloadAction<Deadlines> =>\n            dispatch(updateTransactionDeadlineSelected(Deadlines.Custom))\n          }\n          value={transactionDeadlineCustom}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n            const value = e.target.value\n            if (value && !isNaN(+value)) {\n              dispatch(updateTransactionDeadlineCustom(value))\n              if (transactionDeadlineSelected !== Deadlines.Custom) {\n                dispatch(updateTransactionDeadlineSelected(Deadlines.Custom))\n              }\n            } else {\n              dispatch(updateTransactionDeadlineSelected(Deadlines.Ten))\n            }\n          }}\n        />\n        &nbsp;{t(\"minutes\")}\n      </div>\n    </div>\n  )\n}\n","import \"./GasField.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport { updateGasPriceCustom, updateGasPriceSelected } from \"../state/user\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state/index\"\nimport { GasPrices } from \"../state/user\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport classNames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function GasField(): ReactElement {\n  const { t } = useTranslation()\n  const dispatch = useDispatch<AppDispatch>()\n  const { gasCustom, gasPriceSelected } = useSelector(\n    (state: AppState) => state.user,\n  )\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  return (\n    <div className=\"gasField\">\n      <div className=\"options\">\n        <div className=\"label\">{t(\"gas\")}:</div>\n        {[GasPrices.Standard, GasPrices.Fast, GasPrices.Instant].map(\n          (gasPriceConst) => {\n            let priceValue\n            let text\n            if (gasPriceConst === GasPrices.Standard) {\n              priceValue = gasStandard\n              text = t(\"standard\")\n            } else if (gasPriceConst === GasPrices.Fast) {\n              priceValue = gasFast\n              text = t(\"fast\")\n            } else {\n              priceValue = gasInstant\n              text = t(\"instant\")\n            }\n\n            return (\n              <button\n                key={gasPriceConst}\n                className={classNames({\n                  selected: gasPriceSelected === gasPriceConst,\n                })}\n                onClick={(): PayloadAction<GasPrices> =>\n                  dispatch(updateGasPriceSelected(gasPriceConst))\n                }\n              >\n                <div>\n                  <div>{priceValue}</div>\n                  <div>{text}</div>\n                </div>\n              </button>\n            )\n          },\n        )}\n        <input\n          type=\"text\"\n          className={classNames({\n            selected: gasPriceSelected === GasPrices.Custom,\n          })}\n          value={gasCustom?.valueRaw}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n            const value = e.target.value\n            if (value && !isNaN(+value)) {\n              dispatch(updateGasPriceCustom(value))\n              if (gasPriceSelected !== GasPrices.Custom) {\n                dispatch(updateGasPriceSelected(GasPrices.Custom))\n              }\n            } else {\n              dispatch(updateGasPriceSelected(GasPrices.Fast))\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import \"./CheckboxInput.scss\"\n\nimport React, { ReactElement } from \"react\"\n\ninterface Props {\n  checked: boolean\n  onChange: () => void\n}\n\nexport default function CheckboxInput({\n  checked,\n  onChange,\n}: Props): ReactElement {\n  return (\n    <label className=\"checkboxInput\">\n      <input type=\"checkbox\" checked={checked} onChange={onChange} />\n      <div className=\"checkboxControl\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n        >\n          <path\n            fill=\"none\"\n            strokeWidth=\"4\"\n            d=\"M1.73 12.91l6.37 6.37L22.79 4.59\"\n          />\n        </svg>\n      </div>\n    </label>\n  )\n}\n","import \"./ToolTip.scss\"\n\nimport React, { ReactElement } from \"react\"\n\ninterface Props {\n  content: string\n}\nexport default function ToolTip({\n  content,\n  children,\n}: React.PropsWithChildren<Props>): ReactElement {\n  return (\n    <div className=\"toolTip\">\n      {children}\n      <div className=\"tooltipText\">{content}</div>\n    </div>\n  )\n}\n","import \"./InfiniteApprovalField.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state/index\"\nimport CheckboxInput from \"./CheckboxInput\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport ToolTip from \"./ToolTip\"\nimport { updateInfiniteApproval } from \"../state/user\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function InfiniteApprovalField(): ReactElement {\n  const { t } = useTranslation()\n  const dispatch = useDispatch<AppDispatch>()\n  const { infiniteApproval } = useSelector((state: AppState) => state.user)\n  return (\n    <div className=\"infiniteApproval\">\n      <CheckboxInput\n        checked={infiniteApproval}\n        onChange={(): PayloadAction<boolean> =>\n          dispatch(updateInfiniteApproval(!infiniteApproval))\n        }\n      />\n      <ToolTip content={t(\"infiniteApprovalTooltip\")}>\n        <span className=\"label\">{t(\"infiniteApproval\")}</span>\n      </ToolTip>\n    </div>\n  )\n}\n","import \"./LPStakingBanner.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport { useTranslation } from \"react-i18next\"\n\nfunction LPStakingBanner(): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"lpStakingBanner\">\n      <p>\n        {t(\"lpMustStakeForRewards\")} &lt;\n        <a\n          href=\"https://dashboard.keep.network/liquidity\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t(\"stakeHere\")}\n        </a>\n        &gt;\n      </p>\n    </div>\n  )\n}\n\nexport default LPStakingBanner\n","import \"./Modal.scss\"\n\nimport React, { ReactElement, ReactNode } from \"react\"\n\ninterface Props {\n  isOpen: boolean\n  onClose: () => void\n  children: ReactNode\n  height?: string\n}\n\nfunction Modal({ isOpen, onClose, children }: Props): ReactElement | null {\n  if (!isOpen) return null\n  else\n    return (\n      // Modal container, provide the dark background\n      <div\n        className=\"modal\"\n        onClick={(e: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\n          if (e.target === e.currentTarget) {\n            onClose()\n          }\n        }}\n      >\n        {/* Modal content */}\n        <div className=\"modalContent\">\n          <span\n            className=\"close\"\n            onClick={(\n              e: React.MouseEvent<HTMLSpanElement, MouseEvent>,\n            ): void => {\n              e.stopPropagation()\n              onClose()\n            }}\n          >\n            &times;\n          </span>\n          {children}\n        </div>\n      </div>\n    )\n}\n\nexport default Modal\n","import \"./MyActivityCard.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport { HistoricalPoolDataType } from \"../hooks/useHistoricalPoolData\"\nimport { commify } from \"@ethersproject/units\"\nimport { formatBNToString } from \"../utils\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  historicalPoolData: HistoricalPoolDataType | null\n}\n\nfunction MyActivityCard({ historicalPoolData }: Props): ReactElement | null {\n  const { t } = useTranslation()\n\n  if (!historicalPoolData) return null\n\n  const historicalFormattedData = historicalPoolData\n    ? {\n        totalDepositsBTC: commify(\n          formatBNToString(historicalPoolData.totalDepositsBTC, 36, 6),\n        ),\n        totalWithdrawalsBTC: commify(\n          formatBNToString(historicalPoolData.totalWithdrawalsBTC, 36, 6),\n        ),\n        totalProfitBTC: commify(\n          formatBNToString(historicalPoolData.totalProfitBTC, 36, 6),\n        ),\n        totalDepositsUSD: commify(\n          formatBNToString(historicalPoolData.totalDepositsUSD, 36, 2),\n        ),\n        totalWithdrawalsUSD: commify(\n          formatBNToString(historicalPoolData.totalWithdrawalsUSD, 36, 2),\n        ),\n        totalProfitUSD: commify(\n          formatBNToString(historicalPoolData.totalProfitUSD, 36, 2),\n        ),\n      }\n    : null\n\n  return (\n    <div className=\"myActivityCard\">\n      <h4>{t(\"myActivity\")}</h4>\n      {historicalFormattedData ? (\n        <div className=\"activityTable\">\n          <div key=\"deposits-btc\">\n            <span className=\"label\">BTC {t(\"deposit\")}</span>\n            <span>{historicalFormattedData.totalDepositsBTC}</span>\n          </div>\n          <div key=\"deposits-usd\">\n            <span className=\"label\">USD {t(\"deposit\")}</span>\n            <span>{`$${historicalFormattedData.totalDepositsUSD}`}</span>\n          </div>\n          <div key=\"withdrawals-btc\">\n            <span className=\"label\">BTC {t(\"withdrawal\")}</span>\n            <span>{historicalFormattedData.totalWithdrawalsBTC}</span>\n          </div>\n          <div key=\"withdrawals-usd\">\n            <span className=\"label\">USD {t(\"withdrawal\")}</span>\n            <span>{`$${historicalFormattedData.totalWithdrawalsUSD}`}</span>\n          </div>\n          <div key=\"profit-btc\">\n            <span className=\"label\">BTC {t(\"profit\")}</span>\n            <span>{historicalFormattedData.totalProfitBTC}</span>\n          </div>\n          <div key=\"profit-usd\">\n            <span className=\"label\">USD {t(\"profit\")}</span>\n            <span>{`$${historicalFormattedData.totalProfitUSD}`}</span>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default MyActivityCard\n","import \"./MyShareCard.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport { formatBNToPercentString, formatBNToString } from \"../utils\"\n\nimport { TOKENS_MAP } from \"../constants\"\nimport { UserShareType } from \"../hooks/usePoolData\"\nimport { commify } from \"@ethersproject/units\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  data: UserShareType | null\n}\n\nfunction MyShareCard({ data }: Props): ReactElement | null {\n  const { t } = useTranslation()\n\n  if (!data) return null\n\n  const formattedData = {\n    share: formatBNToPercentString(data.share, 18),\n    usdBalance: commify(formatBNToString(data.usdBalance, 18, 2)),\n    value: commify(formatBNToString(data.value, 18, 6)),\n    tokens: data.tokens.map((coin) => {\n      const token = TOKENS_MAP[coin.symbol]\n      return {\n        symbol: token.symbol,\n        name: token.name,\n        value: commify(formatBNToString(coin.value, 18, 6)),\n      }\n    }),\n  }\n\n  return (\n    <div className=\"myShareCard\">\n      <h4>{t(\"myShare\")}</h4>\n      <div className=\"info\">\n        <div className=\"poolShare\">\n          <span>\n            {formattedData.share} {t(\"ofPool\")}\n          </span>\n        </div>\n        <div className=\"infoItem\">\n          <span className=\"label bold\">{`${t(\"usdBalance\")}: `}</span>\n          <span className=\"value\">{`$${formattedData.usdBalance}`}</span>\n        </div>\n        <div className=\"infoItem\">\n          <span className=\"label bold\">{`${t(\"totalAmount\")}: `}</span>\n          <span className=\"value\">{formattedData.value}</span>\n        </div>\n      </div>\n      <div className=\"currency\">\n        {formattedData.tokens.map((coin) => (\n          <div key={coin.symbol}>\n            <span className=\"tokenName\">{coin.name}</span>\n            <span>{coin.value}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default MyShareCard\n","import \"./PoolInfoCard.scss\"\n\nimport { POOL_FEE_PRECISION, TOKENS_MAP } from \"../constants\"\nimport React, { ReactElement } from \"react\"\nimport { formatBNToPercentString, formatBNToString } from \"../utils\"\n\nimport { PoolDataType } from \"../hooks/usePoolData\"\nimport { commify } from \"@ethersproject/units\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  data: PoolDataType | null\n}\n\nfunction PoolInfoCard({ data }: Props): ReactElement {\n  const { t } = useTranslation()\n  const swapFee = data?.swapFee\n    ? formatBNToPercentString(data.swapFee, POOL_FEE_PRECISION)\n    : null\n  const adminFee = data?.adminFee\n    ? formatBNToPercentString(data.adminFee, POOL_FEE_PRECISION)\n    : null\n  const formattedData = {\n    name: data?.name,\n    swapFee,\n    virtualPrice: data?.virtualPrice\n      ? commify(formatBNToString(data.virtualPrice, 18, 5))\n      : null,\n    reserve: data?.reserve\n      ? commify(formatBNToString(data.reserve, 18, 2))\n      : \"0\",\n    adminFee: swapFee && adminFee ? `${adminFee} of ${swapFee}` : null,\n    poolAPY: data?.poolAPY\n      ? `${commify(formatBNToString(data.poolAPY, 18, 2))}%`\n      : \"0%\",\n    rewardAPY: data?.rewardAPY\n      ? `${commify(formatBNToString(data.rewardAPY, 18, 2))}%`\n      : \"0%\",\n    volume: data?.volume,\n    tokens:\n      data?.tokens.map((coin) => {\n        const token = TOKENS_MAP[coin.symbol]\n        return {\n          symbol: token.symbol,\n          name: token.name,\n          icon: token.icon,\n          percent: coin.percent,\n          value: commify(formatBNToString(coin.value, 18, 6)),\n        }\n      }) || [],\n  }\n\n  return (\n    <div className=\"poolInfoCard\">\n      <h4>{formattedData.name}</h4>\n      <div className=\"info\">\n        <div className=\"infoItem\">\n          <span className=\"label bold\">{`${t(\"fee\")}: `}</span>\n          <span className=\"value\">{formattedData.swapFee}</span>\n        </div>\n        <div className=\"infoItem\">\n          <span className=\"label bold\">{`${t(\"virtualPrice\")}: `}</span>\n          <span className=\"value\">{formattedData.virtualPrice}</span>\n        </div>\n        <div className=\"infoItem\">\n          <span className=\"label bold\">{`${t(\"totalLocked\")}: `}</span>\n          <span className=\"value\">{`$${formattedData.reserve}`}</span>\n        </div>\n        <div className=\"\">\n          <div className=\"infoItem\">\n            <span className=\"label bold\">{`${t(\"totalAPY\")}: `}</span>\n            <span className=\"value\">{formattedData.poolAPY}</span>\n          </div>\n          <div className=\"infoItem\">\n            <span className=\"label bold\">{`${t(\"poolAPY\")}: `}</span>\n            <span className=\"value\">{formattedData.rewardAPY}</span>\n          </div>\n          <div className=\"infoItem\">\n            <span className=\"label bold\">{`${t(\"rewardAPY\")}: `}</span>\n            <span className=\"value\">{formattedData.poolAPY}</span>\n          </div>\n          {/* <div className=\"infoItem\">\n            <span className=\"label bold\">{t(\"dailyVolume\") + \": \"}</span>\n            <span className=\"value\">{formattedData.volume}</span>\n          </div> */}\n        </div>\n      </div>\n      <div className=\"divider\" />\n      <div className=\"bottom\">\n        <h4>{t(\"currencyReserves\")}</h4>\n        <span>{`$${formattedData.reserve} ${t(\"inTotal\")}`}</span>\n        <div className=\"tokenList\">\n          {formattedData.tokens.map((token, index) => (\n            <div className=\"token\" key={index}>\n              <img alt=\"icon\" src={token.icon} />\n              <span className=\"bold\">{`${token.name} ${token.percent}`}</span>\n              <span className=\"tokenValue\">{token.value}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PoolInfoCard\n","import \"./Button.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport classNames from \"classnames\"\n\ntype Props = {\n  disabled?: boolean\n  kind?: \"primary\" | \"secondary\" | \"ternary\"\n  size?: \"large\" | \"small\" | \"full\"\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void\n}\nexport default function Button(\n  props: React.PropsWithChildren<Props>,\n): ReactElement {\n  const { kind = \"primary\", size = \"large\", ...buttonProps } = props\n  return (\n    <button className={classNames(\"button\", kind, size)} {...buttonProps} />\n  )\n}\n","import \"./HighPriceImpactConfirmation.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport CheckboxInput from \"./CheckboxInput\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  checked: boolean\n  onCheck: () => void\n}\nexport default function HighPriceImpactConfirmation({\n  checked,\n  onCheck,\n}: Props): ReactElement {\n  const { t } = useTranslation()\n  return (\n    <div className=\"highPriceImpactConfirmation\">\n      {t(\"highPriceImpactConfirmation\")}\n      <div className=\"confirmationBox\">\n        <span>{t(\"iConfirm\")}</span>{\" \"}\n        <CheckboxInput checked={checked} onChange={onCheck} />\n      </div>\n    </div>\n  )\n}\n","import { GasPrices } from \"../state/user\"\nimport { NumberInputState } from \"./numberInputState\"\n\nexport function formatGasToString(\n  gasPricesGwei: {\n    gasStandard?: number\n    gasFast?: number\n    gasInstant?: number\n  },\n  gasSelected: GasPrices,\n  gasCustom?: NumberInputState,\n): string {\n  const { gasStandard = 0, gasFast = 0, gasInstant = 0 } = gasPricesGwei\n  let gasPrice\n  if (gasSelected === GasPrices.Custom) {\n    gasPrice = gasCustom?.valueSafe\n  } else if (gasSelected === GasPrices.Fast) {\n    gasPrice = gasFast\n  } else if (gasSelected === GasPrices.Instant) {\n    gasPrice = gasInstant\n  } else {\n    gasPrice = gasStandard\n  }\n  return String(gasPrice)\n}\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { NumberInputState } from \"./numberInputState\"\nimport { Slippages } from \"../state/user\"\nimport { formatUnits } from \"@ethersproject/units\"\n\n/**\n * Given an input value and slippage redux state values, do the math.\n * @param {BigNumber} inputValue\n * @param {Slippages} slippageSelected\n * @param {NumberInputState} slippageCustom\n * @param {boolean} add\n * @return {BigNumber}\n */\nexport function _applySlippage(\n  inputValue: BigNumber,\n  slippageSelected: Slippages,\n  slippageCustom?: NumberInputState,\n  add = false,\n): BigNumber {\n  let numerator\n  let denominator\n  if (slippageSelected === Slippages.Custom && !!slippageCustom) {\n    denominator = BigNumber.from(10).pow(slippageCustom.precision + 2)\n    numerator = add\n      ? denominator.add(slippageCustom.valueSafe)\n      : denominator.sub(slippageCustom.valueSafe)\n  } else if (slippageSelected === Slippages.OneTenth) {\n    denominator = 1000\n    numerator = denominator + (add ? 1 : -1)\n  } else {\n    // default to 1%\n    denominator = 100\n    numerator = denominator + (add ? 1 : -1)\n  }\n  return inputValue.mul(numerator).div(denominator)\n}\n\nexport function addSlippage(\n  inputValue: BigNumber,\n  slippageSelected: Slippages,\n  slippageCustom?: NumberInputState,\n): BigNumber {\n  return _applySlippage(inputValue, slippageSelected, slippageCustom, true)\n}\n\nexport function subtractSlippage(\n  inputValue: BigNumber,\n  slippageSelected: Slippages,\n  slippageCustom?: NumberInputState,\n): BigNumber {\n  return _applySlippage(inputValue, slippageSelected, slippageCustom, false)\n}\n\nexport function formatSlippageToString(\n  slippageSelected: Slippages,\n  slippageCustom?: NumberInputState,\n): string {\n  if (slippageSelected === Slippages.Custom && !!slippageCustom) {\n    return formatUnits(slippageCustom.valueSafe, slippageCustom?.precision)\n  } else if (slippageSelected === Slippages.OneTenth) {\n    return formatUnits(BigNumber.from(100), 3)\n  } else if (slippageSelected === Slippages.One) {\n    return formatUnits(BigNumber.from(100), 2)\n  } else {\n    return \"N/A\"\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\"\n\nexport function isHighPriceImpact(priceImpact: BigNumber): boolean {\n  // assumes that priceImpact has 18d precision\n  const negOne = BigNumber.from(10)\n    .pow(18 - 2)\n    .mul(-1)\n  return priceImpact.lte(negOne)\n}\n\nexport function calculatePriceImpact(\n  tokenInputAmount: BigNumber, // assumed to be 18d precision\n  tokenOutputAmount: BigNumber,\n  virtualPrice: BigNumber,\n): BigNumber {\n  return tokenInputAmount.gt(0)\n    ? virtualPrice\n        .mul(tokenOutputAmount)\n        .div(tokenInputAmount)\n        .sub(BigNumber.from(10).pow(18))\n    : BigNumber.from(0)\n}\n","import \"./ReviewDeposit.scss\"\n\nimport React, { ReactElement, useState } from \"react\"\nimport {\n  formatBNToPercentString,\n  formatBNToString,\n  formatDeadlineToNumber,\n} from \"../utils\"\n\nimport { AppState } from \"../state/index\"\nimport Button from \"./Button\"\nimport { DepositTransaction } from \"../interfaces/transactions\"\nimport HighPriceImpactConfirmation from \"./HighPriceImpactConfirmation\"\nimport { commify } from \"@ethersproject/units\"\nimport { formatGasToString } from \"../utils/gas\"\nimport { formatSlippageToString } from \"../utils/slippage\"\nimport { isHighPriceImpact } from \"../utils/priceImpact\"\nimport { useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  onClose: () => void\n  onConfirm: () => void\n  transactionData: DepositTransaction\n}\n\nfunction ReviewDeposit({\n  onClose,\n  onConfirm,\n  transactionData,\n}: Props): ReactElement {\n  const { t } = useTranslation()\n  const {\n    slippageCustom,\n    slippageSelected,\n    gasPriceSelected,\n    gasCustom,\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  } = useSelector((state: AppState) => state.user)\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const [\n    hasConfirmedHighPriceImpact,\n    setHasConfirmedHighPriceImpact,\n  ] = useState(false)\n  const isHighPriceImpactTxn = isHighPriceImpact(transactionData.priceImpact)\n  const deadline = formatDeadlineToNumber(\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  )\n  return (\n    <div className=\"reviewDeposit\">\n      <h3>{t(\"reviewDeposit\")}</h3>\n      <div className=\"table\">\n        <h4>{t(\"depositing\")}</h4>\n        <div className=\"tokenList\">\n          {transactionData.from.items.map(({ token, amount }) => (\n            <div className=\"eachToken\" key={token.symbol}>\n              <div className=\"token\">\n                <img src={token.icon} alt=\"icon\" />\n                <span>{token.symbol}</span>\n              </div>\n              <div className=\"value\">\n                <span className=\"value\">\n                  {commify(formatBNToString(amount, token.decimals))}\n                </span>\n              </div>\n            </div>\n          ))}\n          <div className=\"eachToken\">\n            <div className=\"token\">\n              <b>{t(\"total\")}</b>\n            </div>\n            <div className=\"value\">\n              <b className=\"value\">\n                {commify(\n                  formatBNToString(transactionData.from.totalAmount, 18),\n                )}\n              </b>\n            </div>\n          </div>\n        </div>\n        <div className=\"divider\" style={{ height: \"1px\", width: \"100%\" }}></div>\n        <h4>{t(\"receiving\")}</h4>\n        <div className=\"tokenList\">\n          <div className=\"eachToken\" key={transactionData.to.item.token.symbol}>\n            <div className=\"token\">\n              <img src={transactionData.to.item.token.icon} alt=\"icon\" />\n              <span>{transactionData.to.item.token.symbol}</span>\n            </div>\n            <div className=\"value\">\n              <span className=\"value\">\n                {commify(\n                  formatBNToString(\n                    transactionData.to.item.amount,\n                    transactionData.to.item.token.decimals,\n                  ),\n                )}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"divider\" style={{ height: \"1px\", width: \"100%\" }}></div>\n        <div className=\"depositInfoItem\">\n          <span className=\"label\">{t(\"shareOfPool\")}</span>\n          <span className=\"value\">\n            {formatBNToPercentString(transactionData.shareOfPool, 18)}\n          </span>\n        </div>\n        <div className=\"depositInfoItem\">\n          <span className=\"label\">{t(\"gas\")}</span>\n          <span className=\"value\">\n            {formatGasToString(\n              { gasStandard, gasFast, gasInstant },\n              gasPriceSelected,\n              gasCustom,\n            )}{\" \"}\n            GWEI\n          </span>\n        </div>\n        <div className=\"depositInfoItem\">\n          <span className=\"label\">{t(\"maxSlippage\")}</span>\n          <span className=\"value\">\n            {formatSlippageToString(slippageSelected, slippageCustom)}%\n          </span>\n        </div>\n        <div className=\"depositInfoItem\">\n          <span className=\"label\">{t(\"deadline\")}</span>\n          <span className=\"value\">\n            {deadline} {t(\"minutes\")}\n          </span>\n        </div>\n        <div className=\"depositInfoItem\">\n          <span className=\"label\">{t(\"rates\")}</span>\n          <div className=\"rates value\">\n            {transactionData.from.items.map(\n              ({ token, singleTokenPriceUSD }) => (\n                <span key={token.symbol}>\n                  1 {token.symbol} = $\n                  {commify(formatBNToString(singleTokenPriceUSD, 18, 2))}\n                </span>\n              ),\n            )}\n            {[transactionData.to.item].map(({ token, singleTokenPriceUSD }) => (\n              <span key={token.symbol}>\n                1 {token.symbol} = $\n                {commify(formatBNToString(singleTokenPriceUSD, 18, 2))}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n      {isHighPriceImpactTxn && (\n        <HighPriceImpactConfirmation\n          checked={hasConfirmedHighPriceImpact}\n          onCheck={(): void =>\n            setHasConfirmedHighPriceImpact((prevState) => !prevState)\n          }\n        />\n      )}\n      <div className=\"bottom\">\n        <p>{t(\"estimatedOutput\")}</p>\n        <div className=\"buttonWrapper\">\n          <Button\n            onClick={onConfirm}\n            kind=\"primary\"\n            size=\"large\"\n            disabled={isHighPriceImpactTxn && !hasConfirmedHighPriceImpact}\n          >\n            {t(\"confirmDeposit\")}\n          </Button>\n          <Button onClick={onClose} kind=\"secondary\" size=\"large\">\n            {t(\"cancel\")}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ReviewDeposit\n","import \"./SlippageField.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport {\n  Slippages,\n  updateSlippageCustom,\n  updateSlippageSelected,\n} from \"../state/user\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state/index\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport classNames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function SlippageField(): ReactElement {\n  const { t } = useTranslation()\n  const dispatch = useDispatch<AppDispatch>()\n  const { slippageCustom, slippageSelected } = useSelector(\n    (state: AppState) => state.user,\n  )\n  return (\n    <div className=\"slippageField\">\n      <div className=\"options\">\n        <div className=\"label\">{t(\"maxSlippage\")}: </div>\n        <button\n          className={classNames({\n            selected: slippageSelected === Slippages.OneTenth,\n          })}\n          onClick={(): PayloadAction<Slippages> =>\n            dispatch(updateSlippageSelected(Slippages.OneTenth))\n          }\n        >\n          <span>0.1%</span>\n        </button>\n        <button\n          className={classNames({\n            selected: slippageSelected === Slippages.One,\n          })}\n          onClick={(): PayloadAction<Slippages> =>\n            dispatch(updateSlippageSelected(Slippages.One))\n          }\n        >\n          <span>1%</span>\n        </button>\n        <input\n          value={slippageCustom?.valueRaw}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n            const value = e.target.value\n            if (value && !isNaN(+value)) {\n              dispatch(updateSlippageCustom(value))\n              if (slippageSelected !== Slippages.Custom) {\n                dispatch(updateSlippageSelected(Slippages.Custom))\n              }\n            } else {\n              dispatch(updateSlippageSelected(Slippages.OneTenth))\n            }\n          }}\n        />\n        &nbsp;%\n      </div>\n    </div>\n  )\n}\n","import \"./TokenInput.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport Button from \"./Button\"\nimport { TOKENS_MAP } from \"../constants\"\nimport classNames from \"classnames\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  symbol: string\n  icon: string\n  max?: string\n  inputValue: string\n  onChange: (value: string) => void\n  disabled?: boolean\n  disableSymbol?: boolean\n}\n\nfunction TokenInput({\n  symbol,\n  icon,\n  max,\n  inputValue,\n  onChange,\n  disabled,\n  disableSymbol,\n}: Props): ReactElement {\n  const { t } = useTranslation()\n  function onClickMax(e: React.MouseEvent<HTMLButtonElement>): void {\n    e.preventDefault()\n    onChange(String(max))\n  }\n  function onChangeInput(e: React.ChangeEvent<HTMLInputElement>): void {\n    const { decimals } = TOKENS_MAP[symbol]\n    const parsedValue = parseFloat(\"0\" + e.target.value)\n    const periodIndex = e.target.value.indexOf(\".\")\n    const isValidInput = e.target.value === \"\" || !isNaN(parsedValue)\n    const isValidPrecision =\n      periodIndex === -1 || e.target.value.length - 1 - periodIndex <= decimals\n    if (isValidInput && isValidPrecision) {\n      // don't allow input longer than the token allows\n      onChange(e.target.value)\n    }\n  }\n\n  return (\n    <div className=\"tokenInput\">\n      {icon ? <img alt=\"icon\" src={icon} /> : null}\n      {disableSymbol ? null : <span>{symbol}</span>}\n      <input\n        disabled={disabled ? true : false}\n        className={classNames({ hasMaxButton: max })}\n        value={inputValue}\n        onChange={onChangeInput}\n        placeholder={max || \"0\"}\n        onFocus={(e: React.ChangeEvent<HTMLInputElement>): void =>\n          e.target.select()\n        }\n      />\n      {max != null && (\n        <Button\n          onClick={onClickMax}\n          size=\"small\"\n          kind=\"ternary\"\n          disabled={disabled}\n        >\n          {t(\"max\")}\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default TokenInput\n","import \"./ThemeChanger.scss\"\n\nimport { AppDispatch, AppState } from \"../state\"\nimport React, { ReactElement, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { updateDarkMode } from \"../state/user\"\nimport { useColorMode } from \"@chakra-ui/react\"\n\nconst ThemeChanger = (): ReactElement => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { colorMode, toggleColorMode } = useColorMode()\n  const { userDarkMode } = useSelector((state: AppState) => state.user)\n\n  useEffect(() => {\n    if (userDarkMode) {\n      document.body.classList.add(\"dark\")\n    } else {\n      document.body.classList.remove(\"dark\")\n    }\n  }, [userDarkMode])\n\n  return (\n    <div className=\"themeChanger\">\n      <button\n        onClick={(): void => {\n          dispatch(updateDarkMode(!userDarkMode))\n          if (\n            (userDarkMode && colorMode === \"dark\") ||\n            (!userDarkMode && colorMode === \"light\")\n          ) {\n            toggleColorMode()\n          }\n        }}\n      >\n        {userDarkMode ? \"☾\" : \"☀\"}\n      </button>\n    </div>\n  )\n}\n\nexport default ThemeChanger\n","export default __webpack_public_path__ + \"static/media/coinbasewallet.a3a7d7fd.svg\";","export default __webpack_public_path__ + \"static/media/metamask.45038d58.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect.dfa25e47.svg\";","import \"./ConnectWallet.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\"\nimport { injected, walletconnect, walletlink } from \"../connectors\"\n\nimport coinbasewalletIcon from \"../assets/icons/coinbasewallet.svg\"\nimport { logEvent } from \"../utils/googleAnalytics\"\nimport metamaskIcon from \"../assets/icons/metamask.svg\"\nimport { useTranslation } from \"react-i18next\"\nimport walletconnectIcon from \"../assets/icons/walletconnect.svg\"\n\nconst wallets = [\n  {\n    name: \"MetaMask\",\n    icon: metamaskIcon,\n    connector: injected,\n  },\n  {\n    name: \"Wallet Connect\",\n    icon: walletconnectIcon,\n    connector: walletconnect,\n  },\n  {\n    name: \"Coinbase Wallet\",\n    icon: coinbasewalletIcon,\n    connector: walletlink,\n  },\n]\n\ninterface Props {\n  onClose: () => void\n}\n\nfunction ConnectWallet({ onClose }: Props): ReactElement {\n  const { t } = useTranslation()\n  const { activate } = useWeb3React()\n\n  return (\n    <div className=\"connectWallet\">\n      <h3>{t(\"connectWallet\")}</h3>\n      <div className=\"walletList\">\n        {wallets.map((wallet, index) => (\n          <button\n            key={index}\n            onClick={(): void => {\n              activate(wallet.connector, undefined, true).catch((error) => {\n                if (error instanceof UnsupportedChainIdError) {\n                  void activate(wallet.connector) // a little janky...can't use setError because the connector isn't set\n                } else {\n                  // TODO: handle error\n                }\n              })\n              logEvent(\"change_wallet\", { name: wallet.name })\n              onClose()\n            }}\n          >\n            <span>{wallet.name}</span>\n            <img src={wallet.icon} alt=\"icon\" className=\"icon\" />\n          </button>\n        ))}\n      </div>\n      <p>\n        {t(\"dontHaveWallet\") + \" \"}\n        <a href=\"https://ethereum.org/en/wallets/\" target=\"blank\">\n          {t(\"getWallet\")}\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default ConnectWallet\n","export default __webpack_public_path__ + \"static/media/profile.d80cbaf8.svg\";","import \"./Web3Status.scss\"\n\nimport React, { ReactElement, useState } from \"react\"\n\nimport ConnectWallet from \"./ConnectWallet\"\nimport Modal from \"./Modal\"\nimport profile from \"../assets/icons/profile.svg\"\nimport { useTranslation } from \"react-i18next\"\nimport { useWeb3React } from \"@web3-react/core\"\n\n// Todo: Link profile image to real account image\n\nconst Web3Status = (): ReactElement => {\n  const { account } = useWeb3React()\n  const [modalOpen, setModalOpen] = useState(false)\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"walletStatus\">\n      <button type=\"button\" onClick={(): void => setModalOpen(true)}>\n        {account ? (\n          <div className=\"hasAccount\">\n            <span>\n              {account.substring(0, 6)}...\n              {account.substring(account.length - 4, account.length)}\n            </span>\n\n            {/* Link real profile image here */}\n            <img alt=\"profile\" src={profile} />\n          </div>\n        ) : (\n          <div className=\"noAccount\">{t(\"connectWallet\")}</div>\n        )}\n      </button>\n      <Modal isOpen={modalOpen} onClose={(): void => setModalOpen(false)}>\n        <ConnectWallet onClose={(): void => setModalOpen(false)} />\n      </Modal>\n    </div>\n  )\n}\n\nexport default Web3Status\n","import \"./TopMenu.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport { Link } from \"react-router-dom\"\nimport ThemeChanger from \"./ThemeChanger\"\nimport Web3Status from \"./Web3Status\"\nimport classNames from \"classnames\"\nimport logo from \"../assets/icons/logo.svg\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  activeTab: string\n}\n\nfunction TopMenu({ activeTab }: Props): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <header className=\"top\">\n      <h1>\n        <Link to=\"/\">\n          <img className=\"logo\" alt=\"logo\" src={logo} />\n        </Link>\n      </h1>\n\n      <ul className=\"nav\">\n        <li>\n          <Link to=\"/\" className={classNames({ active: activeTab === \"swap\" })}>\n            {t(\"swap\")}\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/deposit\"\n            className={classNames({ active: activeTab === \"deposit\" })}\n          >\n            {t(\"deposit\")}\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/withdraw\"\n            className={classNames({ active: activeTab === \"withdraw\" })}\n          >\n            {t(\"withdraw\")}\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/stake\"\n            className={classNames({ active: activeTab === t(\"stake\") })}\n          >\n            {t(\"stake\")}\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/risk\"\n            className={classNames({ active: activeTab === t(\"risk\") })}\n          >\n            {t(\"risk\")}\n          </Link>\n        </li>\n      </ul>\n      <Web3Status />\n      <ThemeChanger />\n    </header>\n  )\n}\n\nexport default TopMenu\n","import \"./DepositPage.scss\"\n\nimport { Button, Center } from \"@chakra-ui/react\"\nimport { PoolDataType, UserShareType } from \"../hooks/usePoolData\"\nimport React, { ReactElement, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport ConfirmTransaction from \"./ConfirmTransaction\"\nimport DeadlineField from \"./DeadlineField\"\nimport { DepositTransaction } from \"../interfaces/transactions\"\nimport GasField from \"./GasField\"\nimport { HistoricalPoolDataType } from \"../hooks/useHistoricalPoolData\"\nimport InfiniteApprovalField from \"./InfiniteApprovalField\"\nimport LPStakingBanner from \"./LPStakingBanner\"\nimport Modal from \"./Modal\"\nimport MyActivityCard from \"./MyActivityCard\"\nimport MyShareCard from \"./MyShareCard\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport PoolInfoCard from \"./PoolInfoCard\"\nimport { REFS } from \"../constants\"\nimport ReviewDeposit from \"./ReviewDeposit\"\nimport SlippageField from \"./SlippageField\"\nimport TokenInput from \"./TokenInput\"\nimport TopMenu from \"./TopMenu\"\nimport classNames from \"classnames\"\nimport { formatBNToPercentString } from \"../utils\"\nimport { logEvent } from \"../utils/googleAnalytics\"\nimport { updatePoolAdvancedMode } from \"../state/user\"\nimport { useTranslation } from \"react-i18next\"\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ninterface Props {\n  title: string\n  onConfirmTransaction: () => Promise<void>\n  onChangeTokenInputValue: (tokenSymbol: string, value: string) => void\n  tokens: Array<{\n    symbol: string\n    name: string\n    icon: string\n    max: string\n    inputValue: string\n  }>\n  exceedsWallet: boolean\n  selected?: { [key: string]: any }\n  poolData: PoolDataType | null\n  historicalPoolData: HistoricalPoolDataType | null\n  myShareData: UserShareType | null\n  transactionData: DepositTransaction\n}\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\nconst DepositPage = (props: Props): ReactElement => {\n  const { t } = useTranslation()\n  const {\n    tokens,\n    exceedsWallet,\n    poolData,\n    historicalPoolData,\n    myShareData,\n    transactionData,\n    onChangeTokenInputValue,\n    onConfirmTransaction,\n  } = props\n\n  const [currentModal, setCurrentModal] = useState<string | null>(null)\n\n  const dispatch = useDispatch<AppDispatch>()\n  const { userPoolAdvancedMode: advanced } = useSelector(\n    (state: AppState) => state.user,\n  )\n  const validDepositAmount = transactionData.to.totalAmount.gt(0)\n\n  return (\n    <div className=\"deposit\">\n      <TopMenu activeTab={\"deposit\"} />\n      {myShareData?.lpTokenBalance.gt(0) && <LPStakingBanner />}\n\n      <div className=\"content\">\n        <div className=\"left\">\n          <div className=\"form\">\n            <h3>{t(\"addLiquidity\")}</h3>\n            {exceedsWallet ? (\n              <div className=\"error\">{t(\"depositBalanceExceeded\")}</div>\n            ) : null}\n            {tokens.map((token, index) => (\n              <div key={index}>\n                <TokenInput\n                  {...token}\n                  onChange={(value): void =>\n                    onChangeTokenInputValue(token.symbol, value)\n                  }\n                />\n                {index === tokens.length - 1 ? (\n                  \"\"\n                ) : (\n                  <div className=\"divider\"></div>\n                )}\n              </div>\n            ))}\n            <div className={classNames(\"transactionInfoContainer\", \"show\")}>\n              <div className=\"transactionInfo\">\n                {poolData?.keepApr && (\n                  <div className=\"transactionInfoItem\">\n                    <a\n                      href={REFS.TRANSACTION_INFO}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <span>{t(\"totalAPY\")}: </span>\n                    </a>{\" \"}\n                    <span className=\"value\">\n                      {formatBNToPercentString(\n                        poolData.totalAPY\n                          ? poolData.totalAPY\n                          : BigNumber.from(0),\n                        18,\n                      )}\n                    </span>\n                  </div>\n                )}\n                <div className=\"transactionInfoItem\">\n                  {transactionData.priceImpact.gte(0) ? (\n                    <span className=\"bonus\">{`${t(\"bonus\")}: `}</span>\n                  ) : (\n                    <span className=\"slippage\">{t(\"priceImpact\")}</span>\n                  )}\n                  <span\n                    className={\n                      \"value \" +\n                      (transactionData.priceImpact.gte(0)\n                        ? \"bonus\"\n                        : \"slippage\")\n                    }\n                  >\n                    {\" \"}\n                    {formatBNToPercentString(\n                      transactionData.priceImpact,\n                      18,\n                      4,\n                    )}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"advancedOptions\">\n            <span\n              className=\"title\"\n              onClick={(): PayloadAction<boolean> =>\n                dispatch(updatePoolAdvancedMode(!advanced))\n              }\n            >\n              {t(\"advancedOptions\")}\n              <svg\n                className={classNames(\"triangle\", { upsideDown: advanced })}\n                width=\"16\"\n                height=\"10\"\n                viewBox=\"0 0 16 10\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M14.8252 0C16.077 0 16.3783 0.827943 15.487 1.86207L8.80565 9.61494C8.35999 10.1321 7.63098 10.1246 7.19174 9.61494L0.510262 1.86207C-0.376016 0.833678 -0.0777447 0 1.17205 0L14.8252 0Z\"\n                  fill=\"#000000\"\n                />\n              </svg>\n            </span>\n            <div className=\"divider\"></div>\n            <div className={\"tableContainer\" + classNames({ show: advanced })}>\n              <div className=\"parameter\">\n                <InfiniteApprovalField />\n              </div>\n              <div className=\"parameter\">\n                <SlippageField />\n              </div>\n              <div className=\"parameter\">\n                <DeadlineField />\n              </div>\n              <div className=\"parameter\">\n                <GasField />\n              </div>\n            </div>\n          </div>\n          <Center width=\"100%\" py={6}>\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              width=\"240px\"\n              onClick={(): void => {\n                setCurrentModal(\"review\")\n              }}\n              disabled={!validDepositAmount}\n            >\n              {t(\"deposit\")}\n            </Button>\n          </Center>\n        </div>\n        <div className=\"infoPanels\">\n          <MyShareCard data={myShareData} />\n          <div\n            style={{\n              display: myShareData ? \"block\" : \"none\",\n            }}\n            className=\"divider\"\n          ></div>{\" \"}\n          <MyActivityCard historicalPoolData={historicalPoolData} />\n          <div\n            style={{\n              display: historicalPoolData ? \"block\" : \"none\",\n            }}\n            className=\"divider\"\n          ></div>{\" \"}\n          <PoolInfoCard data={poolData} />\n        </div>\n        <Modal\n          isOpen={!!currentModal}\n          onClose={(): void => setCurrentModal(null)}\n        >\n          {currentModal === \"review\" ? (\n            <ReviewDeposit\n              transactionData={transactionData}\n              onConfirm={async (): Promise<void> => {\n                setCurrentModal(\"confirm\")\n                logEvent(\n                  \"deposit\",\n                  (poolData && { pool: poolData?.name }) || {},\n                )\n                await onConfirmTransaction?.()\n                setCurrentModal(null)\n              }}\n              onClose={(): void => setCurrentModal(null)}\n            />\n          ) : null}\n          {currentModal === \"confirm\" ? <ConfirmTransaction /> : null}\n        </Modal>\n      </div>\n    </div>\n  )\n}\n\nexport default DepositPage\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { ContractReceipt } from \"ethers\"\nimport { ContractTransaction } from \"@ethersproject/contracts\"\nimport { Erc20 } from \"../../types/ethers-contracts/Erc20\"\nimport { LpToken } from \"../../types/ethers-contracts/LpToken\"\nimport { MaxUint256 } from \"@ethersproject/constants\"\n\n/**\n * Checks if a spender is allowed to spend some amount of a token.\n * Approves them to spend if they're not already allowed.\n * Won't make requests if spendingValue eq 0\n * @param {Contract} srcTokenContract\n * @param {string} swapAddress\n * @param {string} spenderAddress\n * @param {BigNumber} spendingValue\n * @param {boolean} infiniteApproval\n * @param {{}} callbacks\n * @return {Promise<void>}\n */\nexport default async function checkAndApproveTokenForTrade(\n  srcTokenContract: Erc20 | LpToken,\n  swapAddress: string,\n  spenderAddress: string,\n  spendingValue: BigNumber, // max is MaxUint256\n  infiniteApproval = false,\n  callbacks: {\n    onTransactionStart?: (\n      transaction?: ContractTransaction,\n    ) => (() => void) | undefined\n    onTransactionSuccess?: (transaction: ContractReceipt) => () => void\n    onTransactionError?: (error: Error | string) => () => void\n  } = {},\n): Promise<void> {\n  if (srcTokenContract == null) return\n  if (spendingValue.eq(0)) return\n  const tokenName = await srcTokenContract.name()\n  const existingAllowance = await srcTokenContract.allowance(\n    spenderAddress,\n    swapAddress,\n  )\n  console.debug(\n    `Existing ${tokenName} Allowance: ${existingAllowance.toString()}`,\n  )\n  if (existingAllowance.gte(spendingValue)) return\n  async function approve(amount: BigNumber): Promise<void> {\n    try {\n      const cleanupOnStart = callbacks.onTransactionStart?.()\n      const approvalTransaction = await srcTokenContract.approve(\n        swapAddress,\n        amount,\n      )\n      const confirmedTransaction = await approvalTransaction.wait()\n      cleanupOnStart?.()\n      callbacks.onTransactionSuccess?.(confirmedTransaction)\n    } catch (error) {\n      callbacks.onTransactionError?.(error)\n      throw error\n    }\n  }\n  if (existingAllowance.gt(\"0\")) {\n    // Reset to 0 before updating approval\n    await approve(BigNumber.from(0))\n  }\n  await approve(infiniteApproval ? MaxUint256 : spendingValue)\n  console.debug(`Approving ${tokenName} spend of ${spendingValue.toString()}`)\n}\n","export function getFormattedTimeString(): string {\n  const now = new Date()\n  return now.toLocaleTimeString()\n}\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\"\n\ninterface GasPrices {\n  gasStandard?: number\n  gasFast?: number\n  gasInstant?: number\n}\nexport interface TokenPricesUSD {\n  [tokenSymbol: string]: number\n}\ninterface LastTransactionTimes {\n  [transactionType: string]: number\n}\n\ntype ApplicationState = GasPrices & { tokenPricesUSD?: TokenPricesUSD } & {\n  lastTransactionTimes: LastTransactionTimes\n}\n\nconst initialState: ApplicationState = {\n  lastTransactionTimes: {},\n}\n\nconst applicationSlice = createSlice({\n  name: \"application\",\n  initialState,\n  reducers: {\n    updateGasPrices(state, action: PayloadAction<GasPrices>): void {\n      const { gasStandard, gasFast, gasInstant } = action.payload\n      state.gasStandard = gasStandard\n      state.gasFast = gasFast\n      state.gasInstant = gasInstant\n    },\n    updateTokensPricesUSD(state, action: PayloadAction<TokenPricesUSD>): void {\n      state.tokenPricesUSD = action.payload\n    },\n    updateLastTransactionTimes(\n      state,\n      action: PayloadAction<LastTransactionTimes>,\n    ): void {\n      state.lastTransactionTimes = {\n        ...state.lastTransactionTimes,\n        ...action.payload,\n      }\n    },\n  },\n})\n\nexport const {\n  updateGasPrices,\n  updateTokensPricesUSD,\n  updateLastTransactionTimes,\n} = applicationSlice.actions\n\nexport default applicationSlice.reducer\n","export default __webpack_public_path__ + \"static/media/iconCancelCircle.dc4259d5.svg\";","export default __webpack_public_path__ + \"static/media/iconCheckCircle.fb9493fa.svg\";","export default __webpack_public_path__ + \"static/media/iconWaitingCircle.d9604968.svg\";","import \"./Toast.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport classNames from \"classnames\"\nimport iconCancelCircle from \"../assets/icons/iconCancelCircle.svg\"\nimport iconCheckCircle from \"../assets/icons/iconCheckCircle.svg\"\nimport iconWaitingCircle from \"../assets/icons/iconWaitingCircle.svg\"\n\ntype ToastType = \"error\" | \"success\" | \"pending\"\nfunction getIconForType(type: ToastType): string {\n  switch (type) {\n    case \"error\":\n      return iconCancelCircle\n    case \"success\":\n      return iconCheckCircle\n    case \"pending\":\n      return iconWaitingCircle\n  }\n}\nexport interface ToastProps {\n  type: ToastType\n  title: string\n  onClick: () => void\n}\nexport default function Toast({\n  title,\n  type,\n  onClick,\n}: ToastProps): ReactElement {\n  return (\n    <div className={classNames(\"toast\", `toast-${type}`)} onClick={onClick}>\n      <div className=\"title\">\n        <img src={getIconForType(type)} alt=\"A notification icon\" />\n        <span>{title}</span>\n      </div>\n    </div>\n  )\n}\n","import \"./ToastsContainer.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nexport default function ToastsContainer({\n  children,\n}: React.PropsWithChildren<unknown>): ReactElement {\n  return <div className={\"toast-container\"}>{children}</div>\n}\n","import React, { ReactElement, useCallback, useMemo, useState } from \"react\"\n\nimport Toast from \"../components/Toast\"\nimport ToastsContainer from \"../components/ToastsContainer\"\nimport { createPortal } from \"react-dom\"\nimport { nanoid } from \"@reduxjs/toolkit\"\n\nconst autoDismissAfterMs = 10 * 1000\n\nexport const ToastsContext = React.createContext<{\n  addToast: AddToast\n  clearToasts: ClearToasts\n}>({\n  addToast: () => {\n    throw new Error(\"To add a toast, wrap the app in a ToastsProvider.\")\n  },\n  clearToasts: () => {\n    throw new Error(\"To remove toasts, wrap the app in a ToastsProvider.\")\n  },\n})\nexport type AddToast = (\n  content: ToastContent,\n  options?: Record<string, unknown>,\n) => () => void\nexport type ClearToasts = () => void\nexport interface ToastObject {\n  id: string\n  content: ToastContent\n  autoDismiss: boolean\n  remove: () => void\n}\ninterface ToastContent {\n  type: \"success\" | \"error\" | \"pending\"\n  title: string\n}\nexport default function ToastsProvider({\n  children,\n}: React.PropsWithChildren<unknown>): ReactElement {\n  const [toasts, setToasts] = useState<ToastObject[]>([])\n  const addToast = useCallback(\n    (content: ToastContent, options = {}): (() => void) => {\n      const { autoDismiss = true } = options as Record<string, boolean>\n      const toastId = nanoid()\n      const removeToast = (): void => {\n        // O(n) is the best we can do here and is fine given the use case\n        setToasts((prevToasts) => prevToasts.filter(({ id }) => id !== toastId))\n      }\n      let timeoutHandle: ReturnType<typeof setTimeout>\n      if (autoDismiss) {\n        timeoutHandle = setTimeout(removeToast, autoDismissAfterMs)\n      }\n\n      // create toast object\n      const toast = {\n        id: toastId,\n        content,\n        autoDismiss,\n        remove: (): void => {\n          removeToast()\n          timeoutHandle && clearTimeout(timeoutHandle)\n        },\n      }\n      // add toast to list\n      setToasts((prevToasts) => [...prevToasts, toast])\n      // return callback to kill toast\n      return removeToast\n    },\n    [],\n  )\n  const clearToasts = useCallback(() => {\n    setToasts([])\n  }, [])\n\n  const contextValue = useMemo(\n    () => ({\n      addToast,\n      clearToasts,\n    }),\n    [addToast, clearToasts],\n  )\n\n  return (\n    <ToastsContext.Provider value={contextValue}>\n      {children}\n\n      {createPortal(\n        <ToastsContainer>\n          {toasts.map(({ id, remove, content: { type, title } }) => (\n            <Toast key={id} type={type} title={title} onClick={remove} />\n          ))}\n        </ToastsContainer>,\n        document.body,\n      )}\n    </ToastsContext.Provider>\n  )\n}\n","import {\n  AddToast,\n  ClearToasts,\n  ToastsContext,\n} from \"../providers/ToastsProvider\"\n\nimport { useContext } from \"react\"\n\nexport const useToast = (): {\n  addToast: AddToast\n  clearToasts: ClearToasts\n} => {\n  return useContext(ToastsContext)\n}\n","import { useEffect, useRef } from \"react\"\n\n// Source: https://github.com/austintgriffith/eth-hooks/blob/master/src/Poller.ts\n\nconst usePoller = (fn: () => void, delay: number): void => {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest fn.\n  useEffect((): void => {\n    savedCallback.current = fn\n  }, [fn])\n\n  // Set up the interval.\n  useEffect((): void | (() => void) => {\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    function tick() {\n      if (savedCallback.current) savedCallback.current()\n    }\n\n    if (delay !== null) {\n      const id = setInterval(tick, delay)\n      // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n      return () => clearInterval(id)\n    }\n  }, [delay])\n\n  // run at start too\n  useEffect(() => {\n    fn()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n}\n\nexport default usePoller\n","import { BLOCK_TIME, Token } from \"../../constants\"\nimport {\n  BSC_DAI,\n  BSC_USDC,\n  PoolName,\n  STABLECOIN_POOL_NAME,\n  USDC,\n  WXDAI,\n} from \"../../constants\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Erc20 } from \"../../../types/ethers-contracts/Erc20\"\nimport { useActiveWeb3React } from \"../../hooks\"\nimport { useMemo } from \"react\"\nimport usePoller from \"../../hooks/usePoller\"\nimport { useState } from \"react\"\nimport { useTokenContract } from \"../../hooks/useContract\"\n\nexport function useTokenBalance(t: Token): BigNumber {\n  const { account, chainId } = useActiveWeb3React()\n  const [balance, setBalance] = useState<BigNumber>(BigNumber.from(0))\n\n  const tokenContract = useTokenContract(t) as Erc20\n\n  usePoller((): void => {\n    async function pollBalance(): Promise<void> {\n      const newBalance = account\n        ? await tokenContract?.balanceOf(account)\n        : BigNumber.from(0)\n      if (newBalance !== balance) {\n        setBalance(newBalance)\n      }\n    }\n    if (account && chainId) {\n      void pollBalance()\n    }\n  }, BLOCK_TIME)\n\n  return balance\n}\n\nexport function usePoolTokenBalances(\n  poolName: PoolName,\n): { [token: string]: BigNumber } | null {\n  const tbtcTokenBalance = useTokenBalance(WXDAI)\n  const wtcTokenBalance = useTokenBalance(USDC)\n  const renbtcTokenBalance = useTokenBalance(BSC_DAI)\n  const sbtcTokenBalance = useTokenBalance(BSC_USDC)\n  const btcPoolTokenBalances = useMemo(\n    () => ({\n      [WXDAI.symbol]: tbtcTokenBalance,\n      [USDC.symbol]: wtcTokenBalance,\n      [BSC_DAI.symbol]: renbtcTokenBalance,\n      [BSC_USDC.symbol]: sbtcTokenBalance,\n    }),\n    [tbtcTokenBalance, wtcTokenBalance, renbtcTokenBalance, sbtcTokenBalance],\n  )\n\n  if (poolName === STABLECOIN_POOL_NAME) {\n    return btcPoolTokenBalances\n  }\n  return null\n}\n","import {\n  BSC_DAI,\n  BSC_USDC,\n  STABLECOIN_POOL_NAME,\n  STABLECOIN_POOL_TOKENS,\n  STABLECOIN_SWAP_TOKEN,\n  USDC,\n  WXDAI,\n} from \"../constants\"\nimport { DepositTransaction, TransactionItem } from \"../interfaces/transactions\"\nimport React, { ReactElement, useEffect, useState } from \"react\"\nimport { TokensStateType, useTokenFormState } from \"../hooks/useTokenFormState\"\nimport { formatBNToString, shiftBNDecimals } from \"../utils\"\nimport usePoolData, { PoolDataType } from \"../hooks/usePoolData\"\n\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport DepositPage from \"../components/DepositPage\"\nimport { TokenPricesUSD } from \"../state/application\"\nimport { Zero } from \"@ethersproject/constants\"\nimport { calculatePriceImpact } from \"../utils/priceImpact\"\nimport { parseUnits } from \"@ethersproject/units\"\nimport { useActiveWeb3React } from \"../hooks\"\nimport { useApproveAndDeposit } from \"../hooks/useApproveAndDeposit\"\nimport { useSelector } from \"react-redux\"\nimport { useSwapContract } from \"../hooks/useContract\"\nimport { useTokenBalance } from \"../state/wallet/hooks\"\n\nfunction DepositStable(): ReactElement | null {\n  const { account } = useActiveWeb3React()\n  const approveAndDeposit = useApproveAndDeposit(STABLECOIN_POOL_NAME)\n  const [poolData, userShareData] = usePoolData(STABLECOIN_POOL_NAME)\n  const swapContract = useSwapContract(STABLECOIN_POOL_NAME)\n  const [tokenFormState, updateTokenFormState] = useTokenFormState(\n    STABLECOIN_POOL_TOKENS,\n  )\n  const { tokenPricesUSD } = useSelector((state: AppState) => state.application)\n  const [estDepositLPTokenAmount, setEstDepositLPTokenAmount] = useState(Zero)\n  const [priceImpact, setPriceImpact] = useState(Zero)\n\n  useEffect(() => {\n    // evaluate if a new deposit will exceed the pool's per-user limit\n    async function calculateMaxDeposits(): Promise<void> {\n      if (\n        swapContract == null ||\n        userShareData == null ||\n        poolData == null ||\n        account == null\n      ) {\n        setEstDepositLPTokenAmount(Zero)\n        return\n      }\n      const tokenInputSum = parseUnits(\n        STABLECOIN_POOL_TOKENS.reduce(\n          (sum, { symbol }) => sum + (+tokenFormState[symbol].valueRaw || 0),\n          0,\n        ).toFixed(18),\n        18,\n      )\n      let depositLPTokenAmount\n      if (poolData.totalLocked.gt(0) && tokenInputSum.gt(0)) {\n        depositLPTokenAmount = await swapContract.calculateTokenAmount(\n          account,\n          STABLECOIN_POOL_TOKENS.map(\n            ({ symbol }) => tokenFormState[symbol].valueSafe,\n          ),\n          true, // deposit boolean\n        )\n      } else {\n        // when pool is empty, estimate the lptokens by just summing the input instead of calling contract\n        depositLPTokenAmount = tokenInputSum\n      }\n      setEstDepositLPTokenAmount(depositLPTokenAmount)\n\n      setPriceImpact(\n        calculatePriceImpact(\n          tokenInputSum,\n          depositLPTokenAmount,\n          poolData.virtualPrice,\n        ),\n      )\n    }\n    void calculateMaxDeposits()\n  }, [poolData, tokenFormState, swapContract, userShareData, account])\n  // Account Token balances\n  const tokenBalances = {\n    [WXDAI.symbol]: useTokenBalance(WXDAI),\n    [USDC.symbol]: useTokenBalance(USDC),\n    [BSC_DAI.symbol]: useTokenBalance(BSC_DAI),\n    [BSC_USDC.symbol]: useTokenBalance(BSC_USDC),\n  }\n  // A represention of tokens used for UI\n  const tokens = STABLECOIN_POOL_TOKENS.map(\n    ({ symbol, name, icon, decimals }) => ({\n      symbol,\n      name,\n      icon,\n      max: formatBNToString(tokenBalances[symbol], decimals),\n      inputValue: tokenFormState[symbol].valueRaw,\n    }),\n  )\n\n  const exceedsWallet = STABLECOIN_POOL_TOKENS.some(({ symbol }) => {\n    const exceedsBoolean = tokenBalances[symbol].lt(\n      BigNumber.from(tokenFormState[symbol].valueSafe),\n    )\n    return exceedsBoolean\n  })\n\n  async function onConfirmTransaction(): Promise<void> {\n    await approveAndDeposit(tokenFormState)\n    // Clear input after deposit\n    updateTokenFormState(\n      STABLECOIN_POOL_TOKENS.reduce(\n        (acc, t) => ({\n          ...acc,\n          [t.symbol]: \"\",\n        }),\n        {},\n      ),\n    )\n  }\n  function updateTokenFormValue(symbol: string, value: string): void {\n    updateTokenFormState({ [symbol]: value })\n  }\n  const depositTransaction = buildTransactionData(\n    tokenFormState,\n    poolData,\n    priceImpact,\n    estDepositLPTokenAmount,\n    tokenPricesUSD,\n  )\n\n  return (\n    <DepositPage\n      onConfirmTransaction={onConfirmTransaction}\n      onChangeTokenInputValue={updateTokenFormValue}\n      title=\"BTC Pool\"\n      tokens={tokens}\n      exceedsWallet={exceedsWallet}\n      poolData={poolData}\n      historicalPoolData={null}\n      myShareData={userShareData}\n      transactionData={depositTransaction}\n    />\n  )\n}\n\nfunction buildTransactionData(\n  tokenFormState: TokensStateType,\n  poolData: PoolDataType | null,\n  priceImpact: BigNumber,\n  estDepositLPTokenAmount: BigNumber,\n  tokenPricesUSD?: TokenPricesUSD,\n): DepositTransaction {\n  const from = {\n    items: [] as TransactionItem[],\n    totalAmount: Zero,\n    totalValueUSD: Zero,\n  }\n  const TOTAL_AMOUNT_DECIMALS = 18\n  STABLECOIN_POOL_TOKENS.forEach((token) => {\n    const { symbol, decimals } = token\n    const amount = BigNumber.from(tokenFormState[symbol].valueSafe)\n    const usdPriceBN = parseUnits(\n      (tokenPricesUSD?.[symbol] || 0).toFixed(2),\n      18,\n    )\n    if (amount.lte(\"0\")) return\n    const item = {\n      token,\n      amount,\n      singleTokenPriceUSD: usdPriceBN,\n      valueUSD: amount.mul(usdPriceBN).div(BigNumber.from(10).pow(decimals)),\n    }\n    from.items.push(item)\n    from.totalAmount = from.totalAmount.add(\n      shiftBNDecimals(amount, TOTAL_AMOUNT_DECIMALS - decimals),\n    )\n    from.totalValueUSD = from.totalValueUSD.add(usdPriceBN)\n  })\n\n  const lpTokenPriceUSD = poolData?.lpTokenPriceUSD || Zero\n  const toTotalValueUSD = estDepositLPTokenAmount\n    .mul(lpTokenPriceUSD)\n    ?.div(BigNumber.from(10).pow(STABLECOIN_SWAP_TOKEN.decimals))\n  const to = {\n    item: {\n      token: STABLECOIN_SWAP_TOKEN,\n      amount: estDepositLPTokenAmount,\n      singleTokenPriceUSD: lpTokenPriceUSD,\n      valueUSD: toTotalValueUSD,\n    },\n    totalAmount: estDepositLPTokenAmount,\n    totalValueUSD: toTotalValueUSD,\n  }\n  const shareOfPool = poolData?.totalLocked.gt(0)\n    ? estDepositLPTokenAmount\n        .mul(BigNumber.from(10).pow(18))\n        .div(estDepositLPTokenAmount.add(poolData?.totalLocked))\n    : BigNumber.from(10).pow(18)\n  return {\n    from,\n    to,\n    priceImpact,\n    shareOfPool,\n  }\n}\n\nexport default DepositStable\n","import { POOLS_MAP, PoolName, TRANSACTION_TYPES, Token } from \"../constants\"\nimport { useAllContracts, useSwapContract } from \"./useContract\"\n\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Erc20 } from \"../../types/ethers-contracts/Erc20\"\nimport { GasPrices } from \"../state/user\"\nimport { NumberInputState } from \"../utils/numberInputState\"\nimport checkAndApproveTokenForTrade from \"../utils/checkAndApproveTokenForTrade\"\nimport { formatDeadlineToNumber } from \"../utils\"\nimport { getFormattedTimeString } from \"../utils/dateTime\"\nimport { parseUnits } from \"@ethersproject/units\"\nimport { subtractSlippage } from \"../utils/slippage\"\nimport { updateLastTransactionTimes } from \"../state/application\"\nimport { useActiveWeb3React } from \".\"\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from \"react-redux\"\nimport { useToast } from \"./useToast\"\n\ninterface ApproveAndDepositStateArgument {\n  [tokenSymbol: string]: NumberInputState\n}\n\nexport function useApproveAndDeposit(\n  poolName: PoolName,\n): (state: ApproveAndDepositStateArgument) => Promise<void> {\n  const dispatch = useDispatch()\n  const swapContract = useSwapContract(poolName)\n  const tokenContracts = useAllContracts()\n  const { account } = useActiveWeb3React()\n  const { addToast, clearToasts } = useToast()\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const {\n    slippageCustom,\n    slippageSelected,\n    gasPriceSelected,\n    gasCustom,\n    transactionDeadlineCustom,\n    transactionDeadlineSelected,\n    infiniteApproval,\n  } = useSelector((state: AppState) => state.user)\n  const POOL_TOKENS = POOLS_MAP[poolName]\n  if (!POOL_TOKENS)\n    throw new Error(\"useApproveAndDeposit requires a valid pool name\")\n\n  return async function approveAndDeposit(\n    state: ApproveAndDepositStateArgument,\n  ): Promise<void> {\n    if (!account) throw new Error(\"Wallet must be connected\")\n    if (!swapContract) throw new Error(\"Swap contract is not loaded\")\n\n    const approveSingleToken = async (token: Token): Promise<void> => {\n      const spendingValue = BigNumber.from(state[token.symbol].valueSafe)\n      if (spendingValue.isZero()) return\n      const tokenContract = tokenContracts?.[token.symbol] as Erc20\n      if (tokenContract == null) return\n      await checkAndApproveTokenForTrade(\n        tokenContract,\n        swapContract.address,\n        account,\n        spendingValue,\n        infiniteApproval,\n        {\n          onTransactionStart: () => {\n            return addToast(\n              {\n                type: \"pending\",\n                title: `${getFormattedTimeString()} Approving spend for ${\n                  token.name\n                }`,\n              },\n              {\n                autoDismiss: false, // TODO: be careful of orphan toasts on error\n              },\n            )\n          },\n          onTransactionSuccess: () => {\n            return addToast({\n              type: \"success\",\n              title: `${getFormattedTimeString()} Successfully approved spend for ${\n                token.name\n              }`,\n            })\n          },\n          onTransactionError: () => {\n            throw new Error(\"Your transaction could not be completed\")\n          },\n        },\n      )\n    }\n    try {\n      // For each token being deposited, check the allowance and approve it if necessary\n      // await Promise.all(POOL_TOKENS.map((token) => approveSingleToken(token)))\n      for (const token of POOL_TOKENS) {\n        await approveSingleToken(token)\n      }\n\n      // \"isFirstTransaction\" check can be removed after launch\n      const poolTokenBalances: BigNumber[] = await Promise.all(\n        POOL_TOKENS.map(async (token, i) => {\n          return await swapContract.getTokenBalance(i)\n        }),\n      )\n      const isFirstTransaction = poolTokenBalances.every((bal) => bal.isZero())\n      let minToMint: BigNumber\n      if (isFirstTransaction) {\n        minToMint = BigNumber.from(\"0\")\n      } else {\n        minToMint = await swapContract.calculateTokenAmount(\n          account,\n          POOL_TOKENS.map(({ symbol }) => state[symbol].valueSafe),\n          true, // deposit boolean\n        )\n      }\n\n      minToMint = subtractSlippage(minToMint, slippageSelected, slippageCustom)\n      const clearMessage = addToast({\n        type: \"pending\",\n        title: `${getFormattedTimeString()} Starting your deposit...`,\n      })\n      let gasPrice\n      if (gasPriceSelected === GasPrices.Custom) {\n        gasPrice = gasCustom?.valueSafe\n      } else if (gasPriceSelected === GasPrices.Fast) {\n        gasPrice = gasFast\n      } else if (gasPriceSelected === GasPrices.Instant) {\n        gasPrice = gasInstant\n      } else {\n        gasPrice = gasStandard\n      }\n      gasPrice = parseUnits(String(gasPrice) || \"45\", 9)\n      const deadline = formatDeadlineToNumber(\n        transactionDeadlineSelected,\n        transactionDeadlineCustom,\n      )\n\n      const spendTransaction = await swapContract.addLiquidity(\n        POOL_TOKENS.map(({ symbol }) => state[symbol].valueSafe),\n        minToMint,\n        Math.round(new Date().getTime() / 1000 + 60 * deadline),\n        [],\n        {\n          gasPrice,\n        },\n      )\n      await spendTransaction.wait()\n      dispatch(\n        updateLastTransactionTimes({\n          [TRANSACTION_TYPES.DEPOSIT]: Date.now(),\n        }),\n      )\n      clearMessage()\n      addToast({\n        type: \"success\",\n        title: `${getFormattedTimeString()} Liquidity added, giddyup! 🤠`,\n      })\n      return Promise.resolve()\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n    }\n  }\n}\n","import {\n  NumberInputState,\n  numberInputStateCreator,\n} from \"../utils/numberInputState\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport React from \"react\"\nimport { Token } from \"../constants\"\n\nexport interface TokensStateType {\n  [token: string]: NumberInputState\n}\ntype UpdateTokensStateType = (newState: {\n  [token: string]: string | BigNumber\n}) => void\ntype UseTokenFormStateReturnType = [TokensStateType, UpdateTokensStateType]\n\nexport function useTokenFormState(\n  tokens: Token[],\n): UseTokenFormStateReturnType {\n  // Token input state handlers\n  const tokenInputStateCreators: {\n    [tokenSymbol: string]: ReturnType<typeof numberInputStateCreator>\n  } = tokens.reduce(\n    (acc, token) => ({\n      ...acc,\n      [token.symbol]: numberInputStateCreator(\n        token.decimals,\n        BigNumber.from(\"0\"),\n      ),\n    }),\n    {},\n  )\n\n  // Token input values, both \"raw\" and formatted \"safe\" BigNumbers\n  const [tokenFormState, setTokenFormState] = React.useState<TokensStateType>(\n    tokens.reduce(\n      (acc, token) => ({\n        ...acc,\n        [token.symbol]: tokenInputStateCreators[token.symbol](\"\"),\n      }),\n      {},\n    ),\n  )\n\n  // function updateTokenFormValue(tokenSymbol: string, value: string): void {\n  //   setTokenFormState((prevState) => ({\n  //     ...prevState,\n  //     [tokenSymbol]: tokenInputStateCreators[tokenSymbol](value),\n  //   }))\n  // }\n  function updateTokenFormState(newState: {\n    [symbol: string]: string | BigNumber\n  }): void {\n    const convertedNewState = Object.keys(newState).reduce(\n      (acc, symbol) => ({\n        ...acc,\n        [symbol]: tokenInputStateCreators[symbol](newState[symbol]),\n      }),\n      {},\n    )\n    setTokenFormState((prevState) => ({\n      ...prevState,\n      ...convertedNewState,\n    }))\n  }\n\n  return [tokenFormState, updateTokenFormState]\n}\n","import \"./Risk.scss\"\n\nimport React, { ReactElement } from \"react\"\nimport { REFS } from \"../constants\"\n\nimport TopMenu from \"../components/TopMenu\"\nimport { useTranslation } from \"react-i18next\"\n\nfunction Risk(): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"riskpage\">\n      <TopMenu activeTab={t(\"risk\")} />\n      <div className=\"content\">\n        <p>\n          {t(\"riskIntro\")} <a href={REFS.CONTRACT_INFO}>{t(\"riskIntro2\")}</a>{\" \"}\n          {t(\"riskIntro3\")}\n        </p>\n        <h3>{t(\"audits\")}</h3>\n        <p>\n          {t(\"riskAudits\")} <a href={REFS.AUDITS_INFO}>{t(\"riskAudits2\")}</a>\n          {\".\"}\n          <br />\n          <br />\n          {t(\"riskAudits3\")}\n          <br />\n          <br />\n          {t(\"riskAudits4\")}\n        </p>\n        <h3>{t(\"adminKeys\")}</h3>\n        <p>{t(\"riskAdminKeys\")}</p>\n        <h3>{t(\"lossOfPeg\")}</h3>\n        <p>{t(\"riskLossOfPeg\")}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Risk\n","import \"./StakePoolCard.scss\"\nimport React, { ReactElement, useState } from \"react\"\nimport Button from \"./Button\"\nimport TokenInput from \"./TokenInput\"\nimport { useTranslation } from \"react-i18next\"\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ninterface Props {\n  title: string\n  onHarvest: () => void\n  onDeposit: (amount: string) => void\n  onWithdraw: (amount: string) => void\n  token: {\n    symbol: string\n    name: string\n    icon: string\n    max: string\n  }\n}\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\nconst StakePool = (props: Props): ReactElement => {\n  const { t } = useTranslation()\n  const [depositAmount, setDepositAmount] = useState(\"0\")\n  const [withdrawAmount, setWithdrawAmount] = useState(\"0\")\n\n  return (\n    <div className=\"stakePoolCard\">\n      <div className=\"form\">\n        <div className=\"harvest\">\n          <Button onClick={props.onHarvest} size=\"small\" kind=\"ternary\">\n            {t(\"harvest\")}\n          </Button>\n        </div>\n        <img className=\"icon\" alt=\"icon\" src={props.token.icon} />\n        <h3 className=\"bold\">{props.title}</h3>\n        <div className=\"transactionInfoItem\">\n          <span className=\"label bold\">{t(\"apy\")}: </span>\n          <span className=\"value\">12.32%</span>\n        </div>\n        <div className=\"transactionInfoItem\">\n          <span className=\"label bold\">{t(\"totalStake\")}: </span>\n          <span className=\"value\">8,000,234 {props.token.symbol}</span>\n        </div>\n        <div className=\"transactionInfoItem\">\n          <span className=\"label bold\">{t(\"yourStake\")}: </span>\n          <span className=\"value\">100 {props.token.symbol} ($24.52)</span>\n        </div>\n\n        <div className=\"transactionInfoItem\">\n          <span className=\"label bold\">{t(\"pendingRewards\")}: </span>\n          <span className=\"value\">0.003 ROCKY ($1.52)</span>\n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"actions\">\n          <div className=\"transactionInfoItem\">\n            <TokenInput\n              {...props.token}\n              icon=\"\"\n              inputValue={depositAmount}\n              disableSymbol={true}\n              max=\"100\"\n              onChange={setDepositAmount}\n            />\n            <div className=\"actionButton\">\n              <Button\n                onClick={() => props.onDeposit(depositAmount)}\n                size=\"full\"\n                kind=\"secondary\"\n                disabled={depositAmount == \"0\"}\n              >\n                {t(\"deposit\")}\n              </Button>\n            </div>\n          </div>\n          <div className=\"transactionInfoItem\">\n            <TokenInput\n              {...props.token}\n              icon=\"\"\n              inputValue={withdrawAmount}\n              disableSymbol={true}\n              max=\"100\"\n              onChange={setWithdrawAmount}\n            />\n            <div className=\"actionButton\">\n              <Button\n                onClick={() => props.onWithdraw(withdrawAmount)}\n                size=\"full\"\n                kind=\"secondary\"\n                disabled={withdrawAmount == \"0\"}\n              >\n                {t(\"withdraw\")}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StakePool\n","import \"./DepositPage.scss\"\nimport { ROCKY_TOKEN, STABLECOIN_SWAP_TOKEN } from \"../constants\"\nimport React, { ReactElement } from \"react\"\nimport StakePool from \"./StakePoolCard\"\nimport { logEvent } from \"../utils/googleAnalytics\"\nimport { useApproveAndStake } from \"../hooks/useApproveAndStake\"\nimport { useHarvest } from \"../hooks/useHarvest\"\nimport { useUnstake } from \"../hooks/useUnstake\"\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// interface Props {\n//   title: string\n// }\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst pools = [\n  {\n    title: \"USD LP\",\n    token: {\n      symbol: STABLECOIN_SWAP_TOKEN.symbol,\n      name: STABLECOIN_SWAP_TOKEN.name,\n      icon: STABLECOIN_SWAP_TOKEN.icon,\n      max: \"0\",\n    },\n  },\n  {\n    title: \"ROCKY\",\n    token: {\n      symbol: ROCKY_TOKEN.symbol,\n      name: ROCKY_TOKEN.name,\n      icon: ROCKY_TOKEN.icon,\n      max: \"0\",\n    },\n  },\n]\n\nconst StakePage = (): ReactElement => {\n  const harvest = useHarvest()\n  const approveAndStake = useApproveAndStake()\n  const unstake = useUnstake()\n\n  async function onHarvest(pid: number) {\n    logEvent(\"harvest\", { pid: pid } || {})\n\n    await harvest(pid)\n\n    console.log(\"harvest\", pid)\n  }\n\n  async function onDeposit(pid: number, amount: string) {\n    if (!amount) return\n    logEvent(\"stake\", { pid: pid } || {})\n\n    await approveAndStake({ pid: pid, amount: amount })\n    console.log(pid, \"stake\", amount)\n  }\n\n  async function onWithdraw(pid: number, amount: string) {\n    if (!amount) return\n    logEvent(\"unstake\", { pid: pid } || {})\n\n    await unstake({ pid: pid, amount: amount })\n    console.log(pid, \"unstake\", amount)\n  }\n  return (\n    <div className=\"deposit\">\n      <div className=\"content\">\n        {pools.map((pool, index) => (\n          <div className={index % 2 == 0 ? \"left\" : \"right\"} key={index}>\n            <StakePool\n              title={pool.title}\n              token={pool.token}\n              onHarvest={() => onHarvest(index)}\n              onWithdraw={(amount) => onWithdraw(index, amount)}\n              onDeposit={(amount) => onDeposit(index, amount)}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default StakePage\n","import { MASTERCHEF_POOLS, TRANSACTION_TYPES } from \"../constants\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { getFormattedTimeString } from \"../utils/dateTime\"\nimport { updateLastTransactionTimes } from \"../state/application\"\nimport { useActiveWeb3React } from \".\"\nimport { useDispatch } from \"react-redux\"\nimport { useRockyMasterChefContract } from \"./useContract\"\nimport { useToast } from \"./useToast\"\n\nexport function useHarvest(): (pid: number) => Promise<void> {\n  const dispatch = useDispatch()\n  const masterChefContract = useRockyMasterChefContract()\n  const { account } = useActiveWeb3React()\n  const { addToast, clearToasts } = useToast()\n\n  return async function useHarvest(pid: number): Promise<void> {\n    if (!account) throw new Error(\"Wallet must be connected\")\n    if (!masterChefContract)\n      throw new Error(\"Masterchef contract is not loaded\")\n    const contract_pid = MASTERCHEF_POOLS[pid].contract_pid\n    const POOL_TOKEN = MASTERCHEF_POOLS[pid].token\n    if (!POOL_TOKEN) throw new Error(\"useHarvest requires a valid pool id\")\n\n    try {\n      // \"isFirstTransaction\" check can be removed after launch\n      const pending: BigNumber = await masterChefContract.pendingRocky(\n        contract_pid,\n        account,\n      )\n      if (pending.eq(0)) {\n        addToast({\n          type: \"error\",\n          title: `${getFormattedTimeString()} No ROCKY pending`,\n        })\n        return\n      }\n\n      const clearMessage = addToast({\n        type: \"pending\",\n        title: `${getFormattedTimeString()} Starting your harvest...`,\n      })\n\n      const spendTransaction = await masterChefContract.withdraw(\n        contract_pid,\n        0,\n      )\n\n      await spendTransaction.wait()\n      dispatch(\n        updateLastTransactionTimes({\n          [TRANSACTION_TYPES.DEPOSIT]: Date.now(),\n        }),\n      )\n      clearMessage()\n      addToast({\n        type: \"success\",\n        title: `${getFormattedTimeString()} Liquidity staked, you rock!`,\n      })\n      return Promise.resolve()\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n    }\n  }\n}\n","import { MASTERCHEF_POOLS, TRANSACTION_TYPES } from \"../constants\"\nimport { useAllContracts, useRockyMasterChefContract } from \"./useContract\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Erc20 } from \"../../types/ethers-contracts/Erc20\"\nimport checkAndApproveTokenForTrade from \"../utils/checkAndApproveTokenForTrade\"\nimport { getFormattedTimeString } from \"../utils/dateTime\"\nimport { updateLastTransactionTimes } from \"../state/application\"\nimport { useActiveWeb3React } from \".\"\nimport { useDispatch } from \"react-redux\"\nimport { useToast } from \"./useToast\"\n\ninterface ApproveAndStakeStateArgument {\n  pid: number\n  amount: string\n}\n\nexport function useApproveAndStake(): (\n  args: ApproveAndStakeStateArgument,\n) => Promise<void> {\n  const dispatch = useDispatch()\n  const masterChefContract = useRockyMasterChefContract()\n  const tokenContracts = useAllContracts()\n  const { account } = useActiveWeb3React()\n  const { addToast, clearToasts } = useToast()\n\n  return async function useApproveAndStake(\n    args: ApproveAndStakeStateArgument,\n  ): Promise<void> {\n    if (!account) throw new Error(\"Wallet must be connected\")\n    if (!masterChefContract)\n      throw new Error(\"Masterchef contract is not loaded\")\n    const contract_pid = MASTERCHEF_POOLS[args.pid].contract_pid\n    const POOL_TOKEN = MASTERCHEF_POOLS[args.pid].token\n    if (!POOL_TOKEN)\n      throw new Error(\"useApproveAndStake requires a valid pool id\")\n\n    const stakingValue = BigNumber.from(args.amount)\n    if (stakingValue.isZero()) return\n\n    let balance: BigNumber\n\n    const tokenContract = tokenContracts?.[POOL_TOKEN.symbol] as Erc20\n    if (tokenContract == null) return\n    try {\n      balance = await tokenContract.balanceOf(account)\n      if (balance.lt(stakingValue)) {\n        addToast({\n          type: \"error\",\n          title: `${getFormattedTimeString()} You don't have enough tokens`,\n        })\n        return\n      }\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n      return\n    }\n\n    const approveSingleToken = async (): Promise<void> => {\n      await checkAndApproveTokenForTrade(\n        tokenContract,\n        masterChefContract.address,\n        account,\n        stakingValue,\n        true, // Set infinite approval to true as the chef is not upgradeable.\n        {\n          onTransactionStart: () => {\n            return addToast(\n              {\n                type: \"pending\",\n                title: `${getFormattedTimeString()} Approving spend for ${\n                  POOL_TOKEN.name\n                }`,\n              },\n              {\n                autoDismiss: false, // TODO: be careful of orphan toasts on error\n              },\n            )\n          },\n          onTransactionSuccess: () => {\n            return addToast({\n              type: \"success\",\n              title: `${getFormattedTimeString()} Successfully approved spend for ${\n                POOL_TOKEN.name\n              }`,\n            })\n          },\n          onTransactionError: () => {\n            throw new Error(\"Your transaction could not be completed\")\n          },\n        },\n      )\n    }\n    try {\n      await approveSingleToken()\n\n      const clearMessage = addToast({\n        type: \"pending\",\n        title: `${getFormattedTimeString()} Starting your stake...`,\n      })\n\n      const spendTransaction = await masterChefContract.deposit(\n        contract_pid,\n        stakingValue,\n      )\n\n      await spendTransaction.wait()\n      dispatch(\n        updateLastTransactionTimes({\n          [TRANSACTION_TYPES.DEPOSIT]: Date.now(),\n        }),\n      )\n      clearMessage()\n      addToast({\n        type: \"success\",\n        title: `${getFormattedTimeString()} Liquidity staked, you rock!`,\n      })\n      return Promise.resolve()\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n    }\n  }\n}\n","import { MASTERCHEF_POOLS, TRANSACTION_TYPES } from \"../constants\"\nimport { useAllContracts, useRockyMasterChefContract } from \"./useContract\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Erc20 } from \"../../types/ethers-contracts/Erc20\"\nimport { getFormattedTimeString } from \"../utils/dateTime\"\nimport { updateLastTransactionTimes } from \"../state/application\"\nimport { useActiveWeb3React } from \".\"\nimport { useDispatch } from \"react-redux\"\nimport { useToast } from \"./useToast\"\n\ninterface UnstaketateArgument {\n  pid: number\n  amount: string\n}\n\nexport function useUnstake(): (args: UnstaketateArgument) => Promise<void> {\n  const dispatch = useDispatch()\n  const masterChefContract = useRockyMasterChefContract()\n  const tokenContracts = useAllContracts()\n  const { account } = useActiveWeb3React()\n  const { addToast, clearToasts } = useToast()\n\n  return async function useApproveAndStake(\n    args: UnstaketateArgument,\n  ): Promise<void> {\n    if (!account) throw new Error(\"Wallet must be connected\")\n    if (!masterChefContract)\n      throw new Error(\"Masterchef contract is not loaded\")\n\n    const contract_pid = MASTERCHEF_POOLS[args.pid].contract_pid\n    const POOL_TOKEN = MASTERCHEF_POOLS[args.pid].token\n    if (!POOL_TOKEN) throw new Error(\"useUnstake requires a valid pool id\")\n\n    const unstakingValue = BigNumber.from(args.amount)\n    if (unstakingValue.isZero()) return\n\n    let stakedBalance: BigNumber\n\n    const tokenContract = tokenContracts?.[POOL_TOKEN.symbol] as Erc20\n    if (tokenContract == null) return\n    try {\n      const userinfo = await masterChefContract.userInfo(contract_pid, account)\n      stakedBalance = userinfo.amount\n      if (stakedBalance.lt(unstakingValue)) {\n        addToast({\n          type: \"error\",\n          title: `${getFormattedTimeString()} You don't have enough tokens staked`,\n        })\n        return\n      }\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n      return\n    }\n\n    try {\n      const clearMessage = addToast({\n        type: \"pending\",\n        title: `${getFormattedTimeString()} Starting your unstake...`,\n      })\n\n      const spendTransaction = await masterChefContract.withdraw(\n        contract_pid,\n        unstakingValue,\n      )\n\n      await spendTransaction.wait()\n      dispatch(\n        updateLastTransactionTimes({\n          [TRANSACTION_TYPES.DEPOSIT]: Date.now(),\n        }),\n      )\n      clearMessage()\n      addToast({\n        type: \"success\",\n        title: `${getFormattedTimeString()} Liquidity unstaked, goodbye!`,\n      })\n      return Promise.resolve()\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n    }\n  }\n}\n","import React, { ReactElement } from \"react\"\nimport StakePage from \"../components/StakePage\"\n\nimport TopMenu from \"../components/TopMenu\"\nimport { useTranslation } from \"react-i18next\"\n\nfunction Stake(): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"stakepage\">\n      <TopMenu activeTab={t(\"stake\")} />\n      <StakePage />\n    </div>\n  )\n}\n\nexport default Stake\n","export default __webpack_public_path__ + \"static/media/icon_down.f3e4d5ed.svg\";","import \"./ReviewSwap.scss\"\n\nimport React, { ReactElement, useState } from \"react\"\nimport { formatBNToString, formatDeadlineToNumber } from \"../utils\"\n\nimport { AppState } from \"../state/index\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport Button from \"./Button\"\nimport HighPriceImpactConfirmation from \"./HighPriceImpactConfirmation\"\nimport { TOKENS_MAP } from \"../constants\"\nimport { formatGasToString } from \"../utils/gas\"\nimport { formatSlippageToString } from \"../utils/slippage\"\nimport iconDown from \"../assets/icons/icon_down.svg\"\nimport { isHighPriceImpact } from \"../utils/priceImpact\"\nimport { useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  onClose: () => void\n  onConfirm: () => void\n  data: {\n    from: { symbol: string; value: string }\n    to: { symbol: string; value: string }\n    exchangeRateInfo: {\n      pair: string\n      priceImpact: BigNumber\n      exchangeRate: BigNumber\n    }\n  }\n}\n\nfunction ReviewSwap({ onClose, onConfirm, data }: Props): ReactElement {\n  const { t } = useTranslation()\n  const {\n    slippageCustom,\n    slippageSelected,\n    gasPriceSelected,\n    gasCustom,\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  } = useSelector((state: AppState) => state.user)\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const [\n    hasConfirmedHighPriceImpact,\n    setHasConfirmedHighPriceImpact,\n  ] = useState(false)\n  const fromToken = TOKENS_MAP[data.from.symbol]\n  const toToken = TOKENS_MAP[data.to.symbol]\n  const isHighPriceImpactTxn = isHighPriceImpact(\n    data.exchangeRateInfo.priceImpact,\n  )\n  const deadline = formatDeadlineToNumber(\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  )\n\n  return (\n    <div className=\"reviewSwap\">\n      <h3>{t(\"reviewSwap\")}</h3>\n      <div className=\"swapTable\">\n        <div className=\"from\">\n          <img className=\"tokenIcon\" src={fromToken.icon} alt=\"icon\" />\n          <span className=\"tokenName\">{data.from.symbol}</span>\n          <div className=\"floatRight\">\n            <span>{data.from.value}</span>\n          </div>\n        </div>\n        <img src={iconDown} alt=\"to\" className=\"arrowDown\" />\n        <div className=\"to\">\n          <img className=\"tokenIcon\" src={toToken.icon} alt=\"icon\" />\n          <span className=\"tokenName\">{data.to.symbol}</span>\n          <div className=\"floatRight\">\n            <span>{data.to.value}</span>\n          </div>\n        </div>\n        <div className=\"divider\" style={{ height: \"1px\", width: \"100%\" }} />\n        <div className=\"swapInfo\">\n          <div className=\"priceTable\">\n            <span className=\"title\">{t(\"price\")}</span>\n            <span className=\"pair\">{data.exchangeRateInfo.pair}</span>\n            <button className=\"exchange\">\n              <svg\n                width=\"24\"\n                height=\"20\"\n                viewBox=\"0 0 24 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M17.4011 12.4196C17.4011 13.7551 16.5999 13.8505 16.4472 13.8505H6.62679L9.14986 11.3274L8.47736 10.6501L5.13869 13.9888C5.04986 14.0782 5 14.1991 5 14.3251C5 14.4511 5.04986 14.572 5.13869 14.6613L8.47736 18L9.14986 17.3275L6.62679 14.8044H16.4472C17.1054 14.8044 18.355 14.3274 18.355 12.4196V10.9888H17.4011V12.4196Z\"\n                  fill=\"#D67A0A\"\n                />\n                <path\n                  d=\"M5.9539 7.58511C5.9539 6.24965 6.75519 6.15426 6.90781 6.15426H16.7283L14.2052 8.67733L14.8777 9.34984L18.2164 6.01117C18.3052 5.92181 18.355 5.80092 18.355 5.67492C18.355 5.54891 18.3052 5.42803 18.2164 5.33867L14.8777 2L14.2004 2.67727L16.7283 5.20035H6.90781C6.24962 5.20035 5 5.6773 5 7.58511V9.01597H5.9539V7.58511Z\"\n                  fill=\"#D67A0A\"\n                />\n              </svg>\n            </button>\n            <span className=\"value floatRight\">\n              {formatBNToString(data.exchangeRateInfo.exchangeRate, 18, 4)}\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"title\">{t(\"gas\")}</span>\n            <span className=\"value floatRight\">\n              {formatGasToString(\n                { gasStandard, gasFast, gasInstant },\n                gasPriceSelected,\n                gasCustom,\n              )}{\" \"}\n              GWEI\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"title\">{t(\"maxSlippage\")}</span>\n            <span className=\"value floatRight\">\n              {formatSlippageToString(slippageSelected, slippageCustom)}%\n            </span>\n          </div>\n          <div className=\"row\">\n            <span className=\"title\">{t(\"deadline\")}</span>\n            <span className=\"value floatRight\">\n              {deadline} {t(\"minutes\")}\n            </span>\n          </div>\n          {isHighPriceImpactTxn && (\n            <div className=\"row\">\n              <HighPriceImpactConfirmation\n                checked={hasConfirmedHighPriceImpact}\n                onCheck={(): void =>\n                  setHasConfirmedHighPriceImpact((prevState) => !prevState)\n                }\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"bottom\">\n        <p>{t(\"estimatedOutput\")}</p>\n        <div className=\"buttonWrapper\">\n          <Button\n            onClick={onConfirm}\n            kind=\"primary\"\n            disabled={isHighPriceImpactTxn && !hasConfirmedHighPriceImpact}\n          >\n            {t(\"confirmSwap\")}\n          </Button>\n          <Button onClick={onClose} kind=\"secondary\">\n            {t(\"cancel\")}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ReviewSwap\n","import \"./SwapForm.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport Button from \"./Button\"\nimport ToolTip from \"./ToolTip\"\nimport classNames from \"classnames\"\nimport { formatBNToString } from \"../utils\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  isSwapFrom: boolean\n  tokens: Array<{\n    name: string\n    value: BigNumber\n    icon: string\n    symbol: string\n    decimals: number\n  }>\n  selected: string\n  inputValue: string\n  onChangeSelected: (tokenSymbol: string) => void\n  onChangeAmount?: (value: string) => void\n}\n\nfunction SwapForm({\n  tokens,\n  selected,\n  inputValue,\n  isSwapFrom,\n  onChangeSelected,\n  onChangeAmount,\n}: Props): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"swapForm\">\n      <div className=\"head\">\n        <h4 className=\"title\">{isSwapFrom ? t(\"from\") : t(\"to\")}</h4>\n        <div className=\"inputField\">\n          <input\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            type=\"text\"\n            className={classNames({ hasMaxButton: isSwapFrom })}\n            value={inputValue}\n            placeholder=\"0.0\"\n            spellCheck=\"false\"\n            onChange={(e): void => onChangeAmount?.(e.target.value)}\n            onFocus={(e: React.ChangeEvent<HTMLInputElement>): void => {\n              if (isSwapFrom) {\n                e.target.select()\n              }\n            }}\n            readOnly={!isSwapFrom}\n          />\n          {isSwapFrom ? (\n            <div className=\"buttonWrapper\">\n              <Button\n                size=\"small\"\n                kind=\"ternary\"\n                onClick={(): void => {\n                  const token = tokens.find((t) => t.symbol === selected)\n                  if (token && onChangeAmount) {\n                    onChangeAmount(formatUnits(token.value, token.decimals))\n                  }\n                }}\n              >\n                {t(\"max\")}\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <ul className=\"tokenList\">\n        {tokens.map(({ symbol, value, icon, name, decimals }, i) => {\n          const formattedShortBalance = formatBNToString(value, decimals, 6)\n          const formattedLongBalance = formatBNToString(value, decimals)\n          return (\n            <div\n              className={classNames(\"tokenListItem\", {\n                active: selected === symbol,\n              })}\n              key={symbol}\n              onClick={(): void => onChangeSelected(symbol)}\n            >\n              <img className=\"tokenIcon\" src={icon} alt=\"icon\" />\n              <span className=\"tokenName\">{name}</span>\n              {isSwapFrom ? (\n                <span className=\"tokenValue\">\n                  <ToolTip content={formattedLongBalance}>\n                    {formattedShortBalance}\n                  </ToolTip>\n                </span>\n              ) : null}\n              {i === tokens.length - 1 ? \"\" : <div className=\"divider\"></div>}\n            </div>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default SwapForm\n","import \"./SwapPage.scss\"\n\nimport { Button, Center } from \"@chakra-ui/react\"\nimport React, { ReactElement, useState } from \"react\"\nimport { formatBNToPercentString, formatBNToString } from \"../utils\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state/index\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport ConfirmTransaction from \"./ConfirmTransaction\"\nimport DeadlineField from \"./DeadlineField\"\nimport GasField from \"./GasField\"\nimport InfiniteApprovalField from \"./InfiniteApprovalField\"\nimport Modal from \"./Modal\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport ReviewSwap from \"./ReviewSwap\"\nimport SlippageField from \"./SlippageField\"\nimport SwapForm from \"./SwapForm\"\nimport TopMenu from \"./TopMenu\"\nimport classNames from \"classnames\"\nimport { isHighPriceImpact } from \"../utils/priceImpact\"\nimport { logEvent } from \"../utils/googleAnalytics\"\nimport { updateSwapAdvancedMode } from \"../state/user\"\nimport { useActiveWeb3React } from \"../hooks\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  tokens: Array<{\n    symbol: string\n    name: string\n    value: BigNumber\n    icon: string\n    decimals: number\n  }>\n  exchangeRateInfo: {\n    pair: string\n    exchangeRate: BigNumber\n    priceImpact: BigNumber\n  }\n  error: string | null\n  fromState: { symbol: string; value: string }\n  toState: { symbol: string; value: string }\n  onChangeFromToken: (tokenSymbol: string) => void\n  onChangeFromAmount: (amount: string) => void\n  onChangeToToken: (tokenSymbol: string) => void\n  onConfirmTransaction: () => Promise<void>\n  onClickReverseExchangeDirection: () => void\n}\n\nconst SwapPage = (props: Props): ReactElement => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const {\n    tokens,\n    exchangeRateInfo,\n    error,\n    fromState,\n    toState,\n    onChangeFromToken,\n    onChangeFromAmount,\n    onChangeToToken,\n    onConfirmTransaction,\n    onClickReverseExchangeDirection,\n  } = props\n\n  const [currentModal, setCurrentModal] = useState<string | null>(null)\n\n  const dispatch = useDispatch<AppDispatch>()\n  const { userSwapAdvancedMode: advanced } = useSelector(\n    (state: AppState) => state.user,\n  )\n  const formattedPriceImpact = formatBNToPercentString(\n    exchangeRateInfo.priceImpact,\n    18,\n  )\n  const formattedExchangeRate = formatBNToString(\n    exchangeRateInfo.exchangeRate,\n    18,\n    4,\n  )\n\n  return (\n    <div className=\"swapPage\">\n      <TopMenu activeTab={\"swap\"} />\n      <div className=\"content\">\n        <SwapForm\n          isSwapFrom={true}\n          tokens={tokens}\n          onChangeSelected={onChangeFromToken}\n          onChangeAmount={onChangeFromAmount}\n          selected={fromState.symbol}\n          inputValue={fromState.value}\n        />\n        <div className=\"spacer\" />\n        <SwapForm\n          isSwapFrom={false}\n          tokens={tokens}\n          onChangeSelected={onChangeToToken}\n          selected={toState.symbol}\n          inputValue={toState.value}\n        />\n        {account && isHighPriceImpact(exchangeRateInfo.priceImpact) ? (\n          <div className=\"exchangeWarning\">\n            {t(\"highPriceImpact\", {\n              rate: formattedPriceImpact,\n            })}\n          </div>\n        ) : null}\n        <div className=\"infoSection\">\n          <div className=\"priceTable\">\n            <span className=\"title\">{t(\"price\")}</span>\n            <span className=\"pair\">{exchangeRateInfo.pair}</span>\n            <button\n              className=\"exchange\"\n              onClick={onClickReverseExchangeDirection}\n            >\n              <svg\n                width=\"24\"\n                height=\"20\"\n                viewBox=\"0 0 24 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  id=\"arrow\"\n                  d=\"M17.4011 12.4196C17.4011 13.7551 16.5999 13.8505 16.4472 13.8505H6.62679L9.14986 11.3274L8.47736 10.6501L5.13869 13.9888C5.04986 14.0782 5 14.1991 5 14.3251C5 14.4511 5.04986 14.572 5.13869 14.6613L8.47736 18L9.14986 17.3275L6.62679 14.8044H16.4472C17.1054 14.8044 18.355 14.3274 18.355 12.4196V10.9888H17.4011V12.4196Z\"\n                />\n                <path\n                  id=\"arrow\"\n                  d=\"M5.9539 7.58511C5.9539 6.24965 6.75519 6.15426 6.90781 6.15426H16.7283L14.2052 8.67733L14.8777 9.34984L18.2164 6.01117C18.3052 5.92181 18.355 5.80092 18.355 5.67492C18.355 5.54891 18.3052 5.42803 18.2164 5.33867L14.8777 2L14.2004 2.67727L16.7283 5.20035H6.90781C6.24962 5.20035 5 5.6773 5 7.58511V9.01597H5.9539V7.58511Z\"\n                />\n              </svg>\n            </button>\n            <span className=\"value\">{formattedExchangeRate}</span>\n          </div>\n          <div className=\"cost\">{\"...\"}</div>\n          <div\n            className=\"title\"\n            onClick={(): PayloadAction<boolean> =>\n              dispatch(updateSwapAdvancedMode(!advanced))\n            }\n          >\n            {t(\"advancedOptions\")}\n            {/* When advanced = true, icon will be upside down */}\n            <svg\n              className={classNames({ upsideDown: advanced })}\n              width=\"16\"\n              height=\"10\"\n              viewBox=\"0 0 16 10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                id=\"triangle\"\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M14.8252 0C16.077 0 16.3783 0.827943 15.487 1.86207L8.80565 9.61494C8.35999 10.1321 7.63098 10.1246 7.19174 9.61494L0.510262 1.86207C-0.376016 0.833678 -0.0777447 0 1.17205 0L14.8252 0Z\"\n              />\n            </svg>\n          </div>\n        </div>\n        <div className=\"advancedOptions\">\n          <div className=\"divider\"></div>\n          <div className={\"tableContainer \" + classNames({ show: advanced })}>\n            <div className=\"table\">\n              <div className=\"parameter\">\n                <InfiniteApprovalField />\n              </div>\n              <div className=\"parameter\">\n                <SlippageField />\n              </div>\n              <div className=\"parameter\">\n                <DeadlineField />\n              </div>\n              <div className=\"parameter\">\n                <GasField />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Center width=\"100%\" py={6}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            width=\"240px\"\n            onClick={(): void => {\n              setCurrentModal(\"review\")\n            }}\n            disabled={!!error || +toState.value <= 0}\n          >\n            {t(\"swap\")}\n          </Button>\n        </Center>\n        <div className={\"error \" + classNames({ showError: !!error })}>\n          {error}\n        </div>\n        <Modal\n          isOpen={!!currentModal}\n          onClose={(): void => setCurrentModal(null)}\n        >\n          {currentModal === \"review\" ? (\n            <ReviewSwap\n              onClose={(): void => setCurrentModal(null)}\n              onConfirm={async (): Promise<void> => {\n                setCurrentModal(\"confirm\")\n                logEvent(\"swap\", {\n                  from: fromState.symbol,\n                  to: toState.symbol,\n                })\n                await onConfirmTransaction?.()\n                setCurrentModal(null)\n              }}\n              data={{\n                from: fromState,\n                to: toState,\n                exchangeRateInfo,\n              }}\n            />\n          ) : null}\n          {currentModal === \"confirm\" ? <ConfirmTransaction /> : null}\n        </Modal>\n      </div>\n    </div>\n  )\n}\nexport default SwapPage\n","import React, { ReactElement, useCallback, useState } from \"react\"\nimport {\n  STABLECOIN_POOL_NAME,\n  STABLECOIN_POOL_TOKENS,\n  TOKENS_MAP,\n} from \"../constants\"\n\nimport { formatUnits, parseUnits } from \"@ethersproject/units\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport SwapPage from \"../components/SwapPage\"\nimport { calculateExchangeRate } from \"../utils\"\nimport { calculatePriceImpact } from \"../utils/priceImpact\"\nimport { debounce } from \"lodash\"\nimport { useApproveAndSwap } from \"../hooks/useApproveAndSwap\"\nimport usePoolData from \"../hooks/usePoolData\"\nimport { usePoolTokenBalances } from \"../state/wallet/hooks\"\n\nimport { useSwapContract } from \"../hooks/useContract\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface FormState {\n  error: null | string\n  from: {\n    symbol: string\n    value: string\n  }\n  to: {\n    symbol: string\n    value: BigNumber\n  }\n  priceImpact: BigNumber\n  exchangeRate: BigNumber\n}\nfunction SwapStable(): ReactElement {\n  const { t } = useTranslation()\n  const [poolData] = usePoolData(STABLECOIN_POOL_NAME)\n  const approveAndSwap = useApproveAndSwap(STABLECOIN_POOL_NAME)\n  const tokenBalances = usePoolTokenBalances(STABLECOIN_POOL_NAME)\n  const swapContract = useSwapContract(STABLECOIN_POOL_NAME)\n  const [formState, setFormState] = useState<FormState>({\n    error: null,\n    from: {\n      symbol: STABLECOIN_POOL_TOKENS[0].symbol,\n      value: \"0.0\",\n    },\n    to: {\n      symbol: STABLECOIN_POOL_TOKENS[1].symbol,\n      value: BigNumber.from(\"0\"),\n    },\n    priceImpact: BigNumber.from(\"0\"),\n    exchangeRate: BigNumber.from(\"0\"),\n  })\n  // build a representation of pool tokens for the UI\n  const tokens = STABLECOIN_POOL_TOKENS.map(\n    ({ symbol, name, icon, decimals }) => ({\n      name,\n      icon,\n      symbol,\n      decimals,\n      value: tokenBalances ? tokenBalances[symbol] : BigNumber.from(\"0\"),\n    }),\n  )\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const calculateSwapAmount = useCallback(\n    debounce(async (formStateArg: FormState) => {\n      if (swapContract == null || tokenBalances === null || poolData == null)\n        return\n      const cleanedFormFromValue = formStateArg.from.value.replace(/[$,]/g, \"\") // remove common copy/pasted financial characters\n      if (cleanedFormFromValue === \"\" || isNaN(+cleanedFormFromValue)) {\n        setFormState((prevState) => ({\n          ...prevState,\n          to: {\n            ...prevState.to,\n            value: BigNumber.from(\"0\"),\n          },\n          priceImpact: BigNumber.from(\"0\"),\n        }))\n        return\n      }\n      // TODO: improve the relationship between token / index\n      const tokenIndexFrom = STABLECOIN_POOL_TOKENS.findIndex(\n        ({ symbol }) => symbol === formStateArg.from.symbol,\n      )\n      const tokenIndexTo = STABLECOIN_POOL_TOKENS.findIndex(\n        ({ symbol }) => symbol === formStateArg.to.symbol,\n      )\n      const amountToGive = parseUnits(\n        cleanedFormFromValue,\n        TOKENS_MAP[formStateArg.from.symbol].decimals,\n      )\n      let error: string | null = null\n      let amountToReceive: BigNumber\n      if (amountToGive.gt(tokenBalances[formStateArg.from.symbol])) {\n        error = t(\"insufficientBalance\")\n      }\n      if (amountToGive.isZero()) {\n        amountToReceive = BigNumber.from(\"0\")\n      } else {\n        amountToReceive = await swapContract.calculateSwap(\n          tokenIndexFrom,\n          tokenIndexTo,\n          amountToGive,\n        )\n      }\n      const tokenTo = TOKENS_MAP[formStateArg.to.symbol]\n      const tokenFrom = TOKENS_MAP[formStateArg.from.symbol]\n      setFormState((prevState) => ({\n        ...prevState,\n        error,\n        to: {\n          ...prevState.to,\n          value: amountToReceive,\n        },\n        priceImpact: calculatePriceImpact(\n          amountToGive.mul(BigNumber.from(10).pow(18 - tokenFrom.decimals)),\n          amountToReceive.mul(BigNumber.from(10).pow(18 - tokenTo.decimals)),\n          poolData?.virtualPrice,\n        ),\n        exchangeRate: calculateExchangeRate(\n          amountToGive,\n          tokenFrom.decimals,\n          amountToReceive,\n          tokenTo.decimals,\n        ),\n      }))\n    }, 250),\n    [setFormState, swapContract, tokenBalances, poolData],\n  )\n\n  function handleUpdateAmountFrom(value: string): void {\n    setFormState((prevState) => {\n      const nextState = {\n        ...prevState,\n        from: {\n          ...prevState.from,\n          value,\n        },\n        priceImpact: BigNumber.from(\"0\"),\n        exchangeRate: BigNumber.from(\"0\"),\n      }\n      void calculateSwapAmount(nextState)\n      return nextState\n    })\n  }\n  function handleReverseExchangeDirection(): void {\n    setFormState((prevState) => {\n      const nextState = {\n        error: null,\n        from: {\n          symbol: prevState.to.symbol,\n          value: prevState.from.value,\n        },\n        to: {\n          symbol: prevState.from.symbol,\n          value: BigNumber.from(\"0\"),\n        },\n        priceImpact: BigNumber.from(\"0\"),\n        exchangeRate: BigNumber.from(\"0\"),\n      }\n      void calculateSwapAmount(nextState)\n      return nextState\n    })\n  }\n  function handleUpdateTokenFrom(symbol: string): void {\n    if (symbol === formState.to.symbol) return handleReverseExchangeDirection()\n    setFormState((prevState) => {\n      const nextState = {\n        ...prevState,\n        error: null,\n        from: {\n          ...prevState.from,\n          symbol,\n        },\n        to: {\n          ...prevState.to,\n          value: BigNumber.from(\"0\"),\n        },\n        priceImpact: BigNumber.from(\"0\"),\n        exchangeRate: BigNumber.from(\"0\"),\n      }\n      void calculateSwapAmount(nextState)\n      return nextState\n    })\n  }\n\n  function handleUpdateTokenTo(symbol: string): void {\n    if (symbol === formState.from.symbol)\n      return handleReverseExchangeDirection()\n    setFormState((prevState) => {\n      const nextState = {\n        ...prevState,\n        error: null,\n        to: {\n          ...prevState.to,\n          value: BigNumber.from(\"0\"),\n          symbol,\n        },\n        priceImpact: BigNumber.from(\"0\"),\n        exchangeRate: BigNumber.from(\"0\"),\n      }\n      void calculateSwapAmount(nextState)\n      return nextState\n    })\n  }\n\n  async function handleConfirmTransaction(): Promise<void> {\n    const fromToken = TOKENS_MAP[formState.from.symbol]\n    await approveAndSwap({\n      fromAmount: parseUnits(formState.from.value, fromToken.decimals),\n      fromTokenSymbol: formState.from.symbol,\n      toAmount: formState.to.value,\n      toTokenSymbol: formState.to.symbol,\n    })\n    // Clear input after deposit\n    setFormState((prevState) => ({\n      error: null,\n      from: {\n        ...prevState.from,\n        value: \"0.0\",\n      },\n      to: {\n        ...prevState.to,\n        value: BigNumber.from(\"0\"),\n      },\n      priceImpact: BigNumber.from(\"0\"),\n      exchangeRate: BigNumber.from(\"0\"),\n    }))\n  }\n\n  return (\n    <SwapPage\n      tokens={tokens}\n      exchangeRateInfo={{\n        pair: `${formState.from.symbol}/${formState.to.symbol}`,\n        exchangeRate: formState.exchangeRate,\n        priceImpact: formState.priceImpact,\n      }}\n      fromState={formState.from}\n      toState={{\n        ...formState.to,\n        value: formatUnits(\n          formState.to.value,\n          TOKENS_MAP[formState.to.symbol].decimals,\n        ),\n      }}\n      onChangeFromAmount={handleUpdateAmountFrom}\n      onChangeFromToken={handleUpdateTokenFrom}\n      onChangeToToken={handleUpdateTokenTo}\n      error={formState.error}\n      onConfirmTransaction={handleConfirmTransaction}\n      onClickReverseExchangeDirection={handleReverseExchangeDirection}\n    />\n  )\n}\n\nexport default SwapStable\n","import {\n  PoolName,\n  STABLECOIN_POOL_NAME,\n  STABLECOIN_POOL_TOKENS,\n  TOKENS_MAP,\n  TRANSACTION_TYPES,\n  Token,\n} from \"../constants\"\nimport { useAllContracts, useSwapContract } from \"./useContract\"\n\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Erc20 } from \"../../types/ethers-contracts/Erc20\"\nimport { GasPrices } from \"../state/user\"\nimport checkAndApproveTokenForTrade from \"../utils/checkAndApproveTokenForTrade\"\nimport { formatDeadlineToNumber } from \"../utils\"\nimport { getFormattedTimeString } from \"../utils/dateTime\"\nimport { parseUnits } from \"@ethersproject/units\"\nimport { subtractSlippage } from \"../utils/slippage\"\nimport { updateLastTransactionTimes } from \"../state/application\"\nimport { useActiveWeb3React } from \".\"\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from \"react-redux\"\nimport { useToast } from \"./useToast\"\n\ninterface ApproveAndSwapStateArgument {\n  fromTokenSymbol: string\n  toTokenSymbol: string\n  fromAmount: BigNumber\n  toAmount: BigNumber\n}\n\nexport function useApproveAndSwap(\n  poolName: PoolName,\n): (state: ApproveAndSwapStateArgument) => Promise<void> {\n  const dispatch = useDispatch()\n  const swapContract = useSwapContract(poolName)\n  const tokenContracts = useAllContracts()\n  const { account } = useActiveWeb3React()\n  const { addToast, clearToasts } = useToast()\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const {\n    slippageCustom,\n    slippageSelected,\n    gasPriceSelected,\n    gasCustom,\n    transactionDeadlineCustom,\n    transactionDeadlineSelected,\n    infiniteApproval,\n  } = useSelector((state: AppState) => state.user)\n  let POOL_TOKENS: Token[]\n  if (poolName === STABLECOIN_POOL_NAME) {\n    POOL_TOKENS = STABLECOIN_POOL_TOKENS\n  } else {\n    throw new Error(\"useApproveAndSwap requires a valid pool name\")\n  }\n\n  return async function approveAndSwap(\n    state: ApproveAndSwapStateArgument,\n  ): Promise<void> {\n    try {\n      if (!account) throw new Error(\"Wallet must be connected\")\n      if (!swapContract) throw new Error(\"Swap contract is not loaded\")\n\n      // For each token being deposited, check the allowance and approve it if necessary\n      const tokenContract = tokenContracts?.[state.fromTokenSymbol] as Erc20\n      if (tokenContract == null) return\n      const fromToken = TOKENS_MAP[state.fromTokenSymbol]\n      await checkAndApproveTokenForTrade(\n        tokenContract,\n        swapContract.address,\n        account,\n        state.fromAmount,\n        infiniteApproval,\n        {\n          onTransactionStart: () => {\n            return addToast(\n              {\n                type: \"pending\",\n                title: `${getFormattedTimeString()} Approving spend for ${\n                  fromToken.name\n                }`,\n              },\n              {\n                autoDismiss: false, // TODO: be careful of orphan toasts on error\n              },\n            )\n          },\n          onTransactionSuccess: () => {\n            return addToast({\n              type: \"success\",\n              title: `${getFormattedTimeString()} Successfully approved spend for ${\n                fromToken.name\n              }`,\n            })\n          },\n          onTransactionError: () => {\n            throw new Error(\"Your transaction could not be completed\")\n          },\n        },\n      )\n\n      let minToMint = state.toAmount\n      console.debug(`MinToMint 1: ${minToMint.toString()}`)\n\n      minToMint = subtractSlippage(minToMint, slippageSelected, slippageCustom)\n      console.debug(`MinToMint 2: ${minToMint.toString()}`)\n      const clearMessage = addToast({\n        type: \"pending\",\n        title: `${getFormattedTimeString()} Starting your Swap...`,\n      })\n      let gasPrice\n      if (gasPriceSelected === GasPrices.Custom) {\n        gasPrice = gasCustom?.valueSafe\n      } else if (gasPriceSelected === GasPrices.Fast) {\n        gasPrice = gasFast\n      } else if (gasPriceSelected === GasPrices.Instant) {\n        gasPrice = gasInstant\n      } else {\n        gasPrice = gasStandard\n      }\n      gasPrice = parseUnits(String(gasPrice) || \"45\", 9)\n      const indexFrom = POOL_TOKENS.findIndex(\n        ({ symbol }) => symbol === state.fromTokenSymbol,\n      )\n      const indexTo = POOL_TOKENS.findIndex(\n        ({ symbol }) => symbol === state.toTokenSymbol,\n      )\n      const deadline = formatDeadlineToNumber(\n        transactionDeadlineSelected,\n        transactionDeadlineCustom,\n      )\n      const swapTransaction = await swapContract.swap(\n        indexFrom,\n        indexTo,\n        state.fromAmount,\n        minToMint,\n        Math.round(new Date().getTime() / 1000 + 60 * deadline),\n        {\n          gasPrice,\n        },\n      )\n      await swapTransaction.wait()\n      dispatch(\n        updateLastTransactionTimes({\n          [TRANSACTION_TYPES.SWAP]: Date.now(),\n        }),\n      )\n      clearMessage()\n      addToast({\n        type: \"success\",\n        title: `${getFormattedTimeString()} Swap completed, giddyup! 🤠`,\n      })\n      return Promise.resolve()\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n    }\n  }\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useEagerConnect, useInactiveListener } from \"../../hooks\"\n\nimport { NetworkContextName } from \"../../constants\"\nimport { network } from \"../../connectors\"\nimport { useWeb3React } from \"@web3-react/core\"\n\nexport default function Web3ReactManager({\n  children,\n}: {\n  children: JSX.Element\n}): JSX.Element | null {\n  const { active } = useWeb3React()\n  const {\n    active: networkActive,\n    error: networkError,\n    activate: activateNetwork,\n  } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate it\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      void activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager)\n\n  // handle delayed loader state\n  const [showLoader, setShowLoader] = useState(false)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowLoader(true)\n    }, 600)\n\n    return (): void => {\n      clearTimeout(timeout)\n    }\n  }, [])\n\n  // on page load, do nothing until we've tried to connect to the injected connector\n  if (!triedEager) {\n    return null\n  }\n\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (!active && networkError) {\n    return (\n      // TODO: style\n      <h1>Unknown error</h1>\n    )\n  }\n\n  // if neither context is active, spin\n  if (!active && !networkActive) {\n    // TODO: style and/or add proper loader\n    return showLoader ? <h1>Loading...</h1> : null\n  }\n\n  return children\n}\n","export default __webpack_public_path__ + \"static/media/deposit_graph.f4a9ca41.svg\";","import \"./NoShareContent.scss\"\n\nimport React, { ReactElement } from \"react\"\n\nimport depositGraph from \"../assets/deposit_graph.svg\"\nimport { useTranslation } from \"react-i18next\"\n\nfunction NoShareContent(): ReactElement {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"no-share\">\n      <img src={depositGraph} alt=\"put tokens in pool\" />\n      <h2>\n        {t(\"noDepositTitle\")}\n        <br />\n        {t(\"noDepositTitle2\")}\n      </h2>\n      <p>{t(\"noDeposit2\")}</p>\n      <a href=\"/#/deposit\">\n        <button className=\"actionBtn\">{t(\"deposit\")}</button>\n      </a>\n    </div>\n  )\n}\n\nexport default NoShareContent\n","import \"./RadioButton.scss\"\n\nimport React, { ReactElement } from \"react\"\n\ninterface Props {\n  checked: boolean\n  onChange: () => void\n  label: string\n}\n\nexport default function RadioButton({\n  checked,\n  onChange,\n  label,\n}: Props): ReactElement {\n  return (\n    <div className=\"radio\">\n      <label className=\"radio_wrapper\">\n        <span className=\"radio_input\">\n          <input type=\"radio\" checked={checked} onChange={onChange} />\n          <span className=\"radio_control\"></span>\n        </span>\n        <span className=\"label\">{label}</span>\n      </label>\n    </div>\n  )\n}\n","import \"./ReviewWithdraw.scss\"\n\nimport React, { ReactElement, useState } from \"react\"\n\nimport { AppState } from \"../state/index\"\nimport Button from \"./Button\"\nimport { GasPrices } from \"../state/user\"\nimport HighPriceImpactConfirmation from \"./HighPriceImpactConfirmation\"\nimport { ReviewWithdrawData } from \"./WithdrawPage\"\nimport { formatDeadlineToNumber } from \"../utils\"\nimport { formatGasToString } from \"../utils/gas\"\nimport { formatSlippageToString } from \"../utils/slippage\"\nimport { isHighPriceImpact } from \"../utils/priceImpact\"\nimport { useSelector } from \"react-redux\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface Props {\n  onClose: () => void\n  onConfirm: () => void\n  data: ReviewWithdrawData\n  gas: GasPrices\n}\n\nfunction ReviewWithdraw({ onClose, onConfirm, data }: Props): ReactElement {\n  const { t } = useTranslation()\n  const {\n    slippageCustom,\n    slippageSelected,\n    gasPriceSelected,\n    gasCustom,\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  } = useSelector((state: AppState) => state.user)\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const [\n    hasConfirmedHighPriceImpact,\n    setHasConfirmedHighPriceImpact,\n  ] = useState(false)\n  const isHighSlippageTxn = isHighPriceImpact(data.priceImpact)\n  const deadline = formatDeadlineToNumber(\n    transactionDeadlineSelected,\n    transactionDeadlineCustom,\n  )\n  return (\n    <div className=\"reviewWithdraw\">\n      <h3>{t(\"youWillReceive\")}</h3>\n      <div className=\"table\">\n        <div className=\"tokenList\">\n          {data.withdraw.map((token, index) => (\n            <div className=\"eachToken\" key={index}>\n              <div className=\"value\">\n                <span className=\"value\">{token.value}</span>\n              </div>\n              <div className=\"token\">\n                <img src={token.icon} alt=\"icon\" />\n                <span>{token.name}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"withdrawInfoItem\">\n          <span className=\"label\">{t(\"gas\")}</span>\n          <span className=\"value\">\n            {formatGasToString(\n              { gasStandard, gasFast, gasInstant },\n              gasPriceSelected,\n              gasCustom,\n            )}{\" \"}\n            GWEI\n          </span>\n        </div>\n        <div className=\"withdrawInfoItem\">\n          <span className=\"label\">{t(\"maxSlippage\")}</span>\n          <span className=\"value\">\n            {formatSlippageToString(slippageSelected, slippageCustom)}%\n          </span>\n        </div>\n        <div className=\"withdrawInfoItem\">\n          <span className=\"label\">{t(\"deadline\")}</span>\n          <span className=\"value\">\n            {deadline} {t(\"minutes\")}\n          </span>\n        </div>\n        <div className=\"withdrawInfoItem\">\n          <span className=\"label\">{`${t(\"rates\")}:`}</span>\n          <div className=\"rates value\">\n            {data.rates.map((rate, index) => (\n              <span key={index}>\n                1 {rate.name} = ${rate.rate}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n      {isHighSlippageTxn && (\n        <div className=\"withdrawInfoItem\">\n          <HighPriceImpactConfirmation\n            checked={hasConfirmedHighPriceImpact}\n            onCheck={(): void =>\n              setHasConfirmedHighPriceImpact((prevState) => !prevState)\n            }\n          />\n        </div>\n      )}\n      <div className=\"bottom\">\n        <p>{t(\"estimatedOutput\")}</p>\n        <div className=\"buttonWrapper\">\n          <Button\n            onClick={onConfirm}\n            kind=\"primary\"\n            disabled={isHighSlippageTxn && !hasConfirmedHighPriceImpact}\n          >\n            {t(\"confirmWithdraw\")}\n          </Button>\n          <Button onClick={onClose} kind=\"secondary\">\n            {t(\"cancel\")}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ReviewWithdraw\n","import \"./WithdrawPage.scss\"\n\nimport { Button, Center } from \"@chakra-ui/react\"\nimport { PoolDataType, UserShareType } from \"../hooks/usePoolData\"\nimport React, { ReactElement, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport { AppDispatch } from \"../state\"\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport ConfirmTransaction from \"./ConfirmTransaction\"\nimport DeadlineField from \"./DeadlineField\"\nimport GasField from \"./GasField\"\nimport { HistoricalPoolDataType } from \"../hooks/useHistoricalPoolData\"\nimport InfiniteApprovalField from \"./InfiniteApprovalField\"\nimport Modal from \"./Modal\"\nimport MyActivityCard from \"./MyActivityCard\"\nimport MyShareCard from \"./MyShareCard\"\nimport NoShareContent from \"./NoShareContent\"\nimport { PayloadAction } from \"@reduxjs/toolkit\"\nimport PoolInfoCard from \"./PoolInfoCard\"\nimport RadioButton from \"./RadioButton\"\nimport ReviewWithdraw from \"./ReviewWithdraw\"\nimport SlippageField from \"./SlippageField\"\nimport TokenInput from \"./TokenInput\"\nimport TopMenu from \"./TopMenu\"\nimport { WithdrawFormState } from \"../hooks/useWithdrawFormState\"\nimport classNames from \"classnames\"\nimport { formatBNToPercentString } from \"../utils\"\nimport { logEvent } from \"../utils/googleAnalytics\"\nimport { updatePoolAdvancedMode } from \"../state/user\"\nimport { useTranslation } from \"react-i18next\"\n\nexport interface ReviewWithdrawData {\n  withdraw: {\n    name: string\n    value: string\n    icon: string\n  }[]\n  rates: {\n    name: string\n    value: string\n    rate: string\n  }[]\n  slippage: string\n  priceImpact: BigNumber\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ninterface Props {\n  title: string\n  tokensData: Array<{\n    symbol: string\n    name: string\n    icon: string\n    inputValue: string\n  }>\n  reviewData: ReviewWithdrawData\n  selected?: { [key: string]: any }\n  poolData: PoolDataType | null\n  historicalPoolData: HistoricalPoolDataType | null\n  myShareData: UserShareType | null\n  formStateData: WithdrawFormState\n  onFormChange: (action: any) => void\n  onConfirmTransaction: () => Promise<void>\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst WithdrawPage = (props: Props): ReactElement => {\n  const { t } = useTranslation()\n  const {\n    tokensData,\n    poolData,\n    historicalPoolData,\n    myShareData,\n    onFormChange,\n    formStateData,\n    reviewData,\n    onConfirmTransaction,\n  } = props\n  const dispatch = useDispatch<AppDispatch>()\n  const { userPoolAdvancedMode: advanced } = useSelector(\n    (state: AppState) => state.user,\n  )\n  const { gasPriceSelected } = useSelector((state: AppState) => state.user)\n  const [currentModal, setCurrentModal] = useState<string | null>(null)\n\n  const onSubmit = (): void => {\n    setCurrentModal(\"review\")\n  }\n  const noShare =\n    !myShareData || myShareData.lpTokenBalance.eq(BigNumber.from(0))\n\n  return (\n    <div className={\"withdraw \" + classNames({ noShare: noShare })}>\n      <TopMenu activeTab={\"withdraw\"} />\n      {noShare ? (\n        <NoShareContent />\n      ) : (\n        <div className=\"content\">\n          <div className=\"left\">\n            <div className=\"form\">\n              <h3>{t(\"withdraw\")}</h3>\n              <div className=\"percentage\">\n                <span>{`${t(\"withdrawPercentage\")} (%):`}</span>\n                <input\n                  placeholder=\"100\"\n                  onChange={(e: React.FormEvent<HTMLInputElement>): void =>\n                    onFormChange({\n                      fieldName: \"percentage\",\n                      value: e.currentTarget.value,\n                    })\n                  }\n                  onFocus={(e: React.ChangeEvent<HTMLInputElement>): void =>\n                    e.target.select()\n                  }\n                  value={\n                    formStateData.percentage ? formStateData.percentage : \"\"\n                  }\n                />\n                {formStateData.error && (\n                  <div className=\"error\">{formStateData.error.message}</div>\n                )}\n              </div>\n              <div className=\"horizontalDisplay\">\n                <RadioButton\n                  checked={formStateData.withdrawType === \"ALL\"}\n                  onChange={(): void =>\n                    onFormChange({\n                      fieldName: \"withdrawType\",\n                      value: \"ALL\",\n                    })\n                  }\n                  label=\"Combo\"\n                />\n                {tokensData.map((t) => {\n                  return (\n                    <RadioButton\n                      key={t.symbol}\n                      checked={formStateData.withdrawType === t.symbol}\n                      onChange={(): void =>\n                        onFormChange({\n                          fieldName: \"withdrawType\",\n                          value: t.symbol,\n                        })\n                      }\n                      label={t.name}\n                    />\n                  )\n                })}\n              </div>\n              {tokensData.map((token, index) => (\n                <div key={index}>\n                  <TokenInput\n                    {...token}\n                    // inputValue={parseFloat(token.inputValue).toFixed(5)}\n                    onChange={(value): void =>\n                      onFormChange({\n                        fieldName: \"tokenInputs\",\n                        value: value,\n                        tokenSymbol: token.symbol,\n                      })\n                    }\n                  />\n                  {index === tokensData.length - 1 ? (\n                    \"\"\n                  ) : (\n                    <div className=\"divider\"></div>\n                  )}\n                </div>\n              ))}\n              <div className={classNames(\"transactionInfoContainer\", \"show\")}>\n                <div className=\"transactionInfo\">\n                  <div className=\"transactionInfoItem\">\n                    {reviewData.priceImpact.gte(0) ? (\n                      <span className=\"bonus\">{t(\"bonus\")}: </span>\n                    ) : (\n                      <span className=\"slippage\">{t(\"priceImpact\")}</span>\n                    )}\n                    <span\n                      className={\n                        \"value \" +\n                        (reviewData.priceImpact.gte(0) ? \"bonus\" : \"slippage\")\n                      }\n                    >\n                      {\" \"}\n                      {formatBNToPercentString(reviewData.priceImpact, 18, 4)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"advancedOptions\">\n              <span\n                className=\"title\"\n                onClick={(): PayloadAction<boolean> =>\n                  dispatch(updatePoolAdvancedMode(!advanced))\n                }\n              >\n                {t(\"advancedOptions\")}\n                <svg\n                  className={classNames(\"triangle\", { upsideDown: advanced })}\n                  width=\"16\"\n                  height=\"10\"\n                  viewBox=\"0 0 16 10\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M14.8252 0C16.077 0 16.3783 0.827943 15.487 1.86207L8.80565 9.61494C8.35999 10.1321 7.63098 10.1246 7.19174 9.61494L0.510262 1.86207C-0.376016 0.833678 -0.0777447 0 1.17205 0L14.8252 0Z\"\n                    fill=\"#000000\"\n                  />\n                </svg>\n              </span>\n              <div className=\"divider\"></div>\n              <div\n                className={\"tableContainer\" + classNames({ show: advanced })}\n              >\n                <div className=\"parameter\">\n                  <InfiniteApprovalField />\n                </div>\n                <div className=\"parameter\">\n                  <SlippageField />\n                </div>\n                <div className=\"parameter\">\n                  <DeadlineField />\n                </div>\n                <div className=\"parameter\">\n                  <GasField />\n                </div>\n              </div>\n            </div>\n            <Center width=\"100%\" py={6}>\n              <Button\n                variant=\"primary\"\n                size=\"lg\"\n                width=\"240px\"\n                disabled={\n                  !!formStateData.error ||\n                  formStateData.lpTokenAmountToSpend.isZero()\n                }\n                onClick={onSubmit}\n              >\n                {t(\"withdraw\")}\n              </Button>\n            </Center>\n          </div>\n          <div className=\"infoPanels\">\n            <MyShareCard data={myShareData} />\n            <div\n              style={{\n                display: myShareData ? \"block\" : \"none\",\n              }}\n              className=\"divider\"\n            ></div>{\" \"}\n            <MyActivityCard historicalPoolData={historicalPoolData} />\n            <div\n              style={{\n                display: historicalPoolData ? \"block\" : \"none\",\n              }}\n              className=\"divider\"\n            ></div>{\" \"}\n            <PoolInfoCard data={poolData} />\n          </div>\n          <Modal\n            isOpen={!!currentModal}\n            onClose={(): void => setCurrentModal(null)}\n          >\n            {currentModal === \"review\" ? (\n              <ReviewWithdraw\n                data={reviewData}\n                gas={gasPriceSelected}\n                onConfirm={async (): Promise<void> => {\n                  setCurrentModal(\"confirm\")\n                  logEvent(\n                    \"withdraw\",\n                    (poolData && { pool: poolData?.name }) || {},\n                  )\n                  await onConfirmTransaction?.()\n                  setCurrentModal(null)\n                }}\n                onClose={(): void => setCurrentModal(null)}\n              />\n            ) : null}\n            {currentModal === \"confirm\" ? <ConfirmTransaction /> : null}\n          </Modal>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default WithdrawPage\n","import { POOLS_MAP, PoolName, TRANSACTION_TYPES } from \"../constants\"\nimport { addSlippage, subtractSlippage } from \"../utils/slippage\"\nimport { formatUnits, parseUnits } from \"@ethersproject/units\"\nimport { useLPTokenContract, useSwapContract } from \"./useContract\"\n\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { GasPrices } from \"../state/user\"\nimport { NumberInputState } from \"../utils/numberInputState\"\nimport checkAndApproveTokenForTrade from \"../utils/checkAndApproveTokenForTrade\"\nimport { formatDeadlineToNumber } from \"../utils\"\nimport { getFormattedTimeString } from \"../utils/dateTime\"\nimport { updateLastTransactionTimes } from \"../state/application\"\nimport { useActiveWeb3React } from \".\"\nimport { useDispatch } from \"react-redux\"\nimport { useSelector } from \"react-redux\"\nimport { useToast } from \"./useToast\"\n\ninterface ApproveAndWithdrawStateArgument {\n  tokenFormState: { [symbol: string]: NumberInputState }\n  withdrawType: string\n  lpTokenAmountToSpend: BigNumber\n}\n\nexport function useApproveAndWithdraw(\n  poolName: PoolName,\n): (state: ApproveAndWithdrawStateArgument) => Promise<void> {\n  const dispatch = useDispatch()\n  const swapContract = useSwapContract(poolName)\n  const { account } = useActiveWeb3React()\n  const { addToast, clearToasts } = useToast()\n  const { gasStandard, gasFast, gasInstant } = useSelector(\n    (state: AppState) => state.application,\n  )\n  const {\n    slippageCustom,\n    slippageSelected,\n    gasPriceSelected,\n    gasCustom,\n    transactionDeadlineCustom,\n    transactionDeadlineSelected,\n    infiniteApproval,\n  } = useSelector((state: AppState) => state.user)\n  const lpTokenContract = useLPTokenContract(poolName)\n  const POOL_TOKENS = POOLS_MAP[poolName]\n  if (!POOL_TOKENS)\n    throw new Error(\"useApproveAndWithdraw requires a valid pool name\")\n\n  return async function approveAndWithdraw(\n    state: ApproveAndWithdrawStateArgument,\n  ): Promise<void> {\n    try {\n      if (!account) throw new Error(\"Wallet must be connected\")\n      if (!swapContract) throw new Error(\"Swap contract is not loaded\")\n      if (state.lpTokenAmountToSpend.isZero()) return\n      if (lpTokenContract == null) return\n      const allowanceAmount =\n        state.withdrawType === \"IMBALANCE\"\n          ? addSlippage(\n              state.lpTokenAmountToSpend,\n              slippageSelected,\n              slippageCustom,\n            )\n          : state.lpTokenAmountToSpend\n      await checkAndApproveTokenForTrade(\n        lpTokenContract,\n        swapContract.address,\n        account,\n        allowanceAmount,\n        infiniteApproval,\n        {\n          onTransactionStart: () => {\n            return addToast(\n              {\n                type: \"pending\",\n                title: `${getFormattedTimeString()} Approving spend for lpToken`,\n              },\n              {\n                autoDismiss: false, // TODO: be careful of orphan toasts on error\n              },\n            )\n          },\n          onTransactionSuccess: () => {\n            return addToast({\n              type: \"success\",\n              title: `${getFormattedTimeString()} Successfully approved spend for lpToken`,\n            })\n          },\n          onTransactionError: () => {\n            throw new Error(\"Your transaction could not be completed\")\n          },\n        },\n      )\n\n      const clearMessage = addToast({\n        type: \"pending\",\n        title: `${getFormattedTimeString()} Starting your withdraw...`,\n      })\n      let gasPrice\n      if (gasPriceSelected === GasPrices.Custom && gasCustom?.valueSafe) {\n        gasPrice = gasCustom.valueSafe\n      } else if (gasPriceSelected === GasPrices.Standard) {\n        gasPrice = gasStandard\n      } else if (gasPriceSelected === GasPrices.Instant) {\n        gasPrice = gasInstant\n      } else {\n        gasPrice = gasFast\n      }\n      gasPrice = parseUnits(gasPrice?.toString() || \"45\", \"gwei\")\n      console.debug(\n        `lpTokenAmountToSpend: ${formatUnits(state.lpTokenAmountToSpend, 18)}`,\n      )\n      const deadline = Math.round(\n        new Date().getTime() / 1000 +\n          60 *\n            formatDeadlineToNumber(\n              transactionDeadlineSelected,\n              transactionDeadlineCustom,\n            ),\n      )\n      let spendTransaction\n      if (state.withdrawType === \"ALL\") {\n        spendTransaction = await swapContract.removeLiquidity(\n          state.lpTokenAmountToSpend,\n          POOL_TOKENS.map(({ symbol }) =>\n            subtractSlippage(\n              BigNumber.from(state.tokenFormState[symbol].valueSafe),\n              slippageSelected,\n              slippageCustom,\n            ),\n          ),\n          deadline,\n          {\n            gasPrice,\n          },\n        )\n      } else if (state.withdrawType === \"IMBALANCE\") {\n        spendTransaction = await swapContract.removeLiquidityImbalance(\n          POOL_TOKENS.map(\n            ({ symbol }) => state.tokenFormState[symbol].valueSafe,\n          ),\n          addSlippage(\n            state.lpTokenAmountToSpend,\n            slippageSelected,\n            slippageCustom,\n          ),\n          deadline,\n          {\n            gasPrice,\n          },\n        )\n      } else {\n        // state.withdrawType === [TokenSymbol]\n        spendTransaction = await swapContract.removeLiquidityOneToken(\n          state.lpTokenAmountToSpend,\n          POOL_TOKENS.findIndex(({ symbol }) => symbol === state.withdrawType),\n          subtractSlippage(\n            BigNumber.from(\n              state.tokenFormState[state.withdrawType || \"\"].valueSafe,\n            ),\n            slippageSelected,\n            slippageCustom,\n          ),\n          deadline,\n          {\n            gasPrice,\n          },\n        )\n      }\n\n      await spendTransaction.wait()\n      dispatch(\n        updateLastTransactionTimes({\n          [TRANSACTION_TYPES.WITHDRAW]: Date.now(),\n        }),\n      )\n      clearMessage()\n      addToast({\n        type: \"success\",\n        title: `${getFormattedTimeString()} Liquidity withdrawn`,\n      })\n    } catch (e) {\n      console.error(e)\n      clearToasts()\n      addToast({\n        type: \"error\",\n        title: `${getFormattedTimeString()} Unable to complete your transaction`,\n      })\n    }\n  }\n}\n","import {\n  NumberInputState,\n  numberInputStateCreator,\n} from \"../utils/numberInputState\"\nimport { POOLS_MAP, PoolName } from \"../constants\"\nimport { useCallback, useMemo, useState } from \"react\"\n\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { debounce } from \"lodash\"\nimport { parseUnits } from \"@ethersproject/units\"\nimport { useActiveWeb3React } from \".\"\nimport usePoolData from \"../hooks/usePoolData\"\nimport { useSwapContract } from \"../hooks/useContract\"\n\ninterface ErrorState {\n  field: string\n  message: string\n}\nconst IMBALANCE = \"IMBALANCE\"\nconst ALL = \"ALL\"\n\ninterface TokenInputs {\n  [symbol: string]: NumberInputState\n}\nexport interface WithdrawFormState {\n  percentage: string | null\n  withdrawType: string\n  tokenInputs: TokenInputs\n  lpTokenAmountToSpend: BigNumber\n  error: ErrorState | null\n}\ntype FormFields = Exclude<keyof WithdrawFormState, \"error\">\nexport type WithdrawFormAction = {\n  fieldName: FormFields | \"reset\"\n  tokenSymbol?: string\n  value: string\n}\n\nexport default function useWithdrawFormState(\n  poolName: PoolName,\n): [WithdrawFormState, (action: WithdrawFormAction) => void] {\n  const POOL_TOKENS = POOLS_MAP[poolName]\n  const swapContract = useSwapContract(poolName)\n  const [, userShareData] = usePoolData(poolName)\n  const { account } = useActiveWeb3React()\n  const tokenInputStateCreators: {\n    [tokenSymbol: string]: ReturnType<typeof numberInputStateCreator>\n  } = useMemo(\n    () =>\n      POOL_TOKENS.reduce(\n        (acc, { symbol, decimals }) => ({\n          ...acc,\n          [symbol]: numberInputStateCreator(decimals, BigNumber.from(\"0\")),\n        }),\n        {},\n      ),\n    [POOL_TOKENS],\n  )\n  const tokenInputsEmptyState = useMemo(\n    () =>\n      POOL_TOKENS.reduce(\n        (acc, { symbol }) => ({\n          ...acc,\n          [symbol]: tokenInputStateCreators[symbol](\"0\"),\n        }),\n        {},\n      ),\n    [POOL_TOKENS, tokenInputStateCreators],\n  )\n  const formEmptyState = useMemo(\n    () => ({\n      percentage: \"\",\n      tokenInputs: tokenInputsEmptyState,\n      withdrawType: ALL,\n      error: null,\n      lpTokenAmountToSpend: BigNumber.from(\"0\"),\n    }),\n    [tokenInputsEmptyState],\n  )\n  const [formState, setFormState] = useState<WithdrawFormState>(formEmptyState)\n\n  // TODO: resolve this, it's a little unsafe\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const calculateAndUpdateDynamicFields = useCallback(\n    debounce(async (state: WithdrawFormState) => {\n      if (userShareData == null || swapContract == null || account == null)\n        return\n\n      let percentageRaw\n      if (state.percentage === \"\") {\n        percentageRaw = \"0\"\n      } else if (state.percentage === null) {\n        percentageRaw = \"100\"\n      } else {\n        percentageRaw = state.percentage\n      }\n\n      // LP * % to be withdrawn\n      const effectiveUserLPTokenBalance = userShareData.lpTokenBalance\n        .mul(parseUnits(percentageRaw, 5)) // difference between numerator and denominator because we're going from 100 to 1.00\n        .div(10 ** 7)\n\n      // Use state.withdrawType to figure out which swap functions to use to calcuate next state\n      let nextState: WithdrawFormState | Record<string, unknown>\n      if (state.withdrawType === IMBALANCE) {\n        try {\n          const inputCalculatedLPTokenAmount = await swapContract.calculateTokenAmount(\n            account,\n            POOL_TOKENS.map(\n              ({ symbol }) => state.tokenInputs[symbol].valueSafe,\n            ),\n            false,\n          )\n          nextState = inputCalculatedLPTokenAmount.gt(\n            effectiveUserLPTokenBalance,\n          )\n            ? {\n                error: {\n                  field: \"tokenInputs\",\n                  message: \"Insufficient balance.\",\n                },\n                lpTokenAmountToSpend: BigNumber.from(\"0\"),\n              }\n            : {\n                error: null,\n                lpTokenAmountToSpend: inputCalculatedLPTokenAmount,\n              }\n        } catch (e) {\n          console.error(e)\n          // calculateTokenAmount errors if amount exceeds amount in pool\n          nextState = {\n            error: {\n              field: \"tokenInputs\",\n              message: \"Insufficient balance in pool.\",\n            },\n            lpTokenAmountToSpend: BigNumber.from(\"0\"),\n          }\n        }\n      } else if (state.withdrawType === ALL) {\n        try {\n          const tokenAmounts = await swapContract.calculateRemoveLiquidity(\n            account,\n            effectiveUserLPTokenBalance,\n          )\n          nextState = {\n            lpTokenAmountToSpend: effectiveUserLPTokenBalance,\n            tokenInputs: POOL_TOKENS.reduce(\n              (acc, { symbol }, i) => ({\n                ...acc,\n                [symbol]: tokenInputStateCreators[symbol](tokenAmounts[i]),\n              }),\n              {},\n            ),\n            error: null,\n          }\n        } catch {\n          nextState = {\n            error: {\n              field: \"tokenInputs\",\n              message: \"Insufficient balance in pool.\",\n            },\n          }\n        }\n      } else {\n        try {\n          if (state.percentage) {\n            const tokenIndex = POOL_TOKENS.findIndex(\n              ({ symbol }) => symbol === state.withdrawType,\n            )\n            const tokenAmount = await swapContract.calculateRemoveLiquidityOneToken(\n              account,\n              effectiveUserLPTokenBalance, // lp token to be burnt\n              tokenIndex,\n            ) // actual coin amount to be returned\n            nextState = {\n              lpTokenAmountToSpend: effectiveUserLPTokenBalance,\n              tokenInputs: POOL_TOKENS.reduce(\n                (acc, { symbol }, i) => ({\n                  ...acc,\n                  [symbol]: tokenInputStateCreators[symbol](\n                    i === tokenIndex ? tokenAmount : \"0\",\n                  ),\n                }),\n                {},\n              ),\n              error: null,\n            }\n          } else {\n            // This branch addresses a user manually inputting a value for one token\n            const inputCalculatedLPTokenAmount = await swapContract.calculateTokenAmount(\n              account,\n              POOL_TOKENS.map(\n                ({ symbol }) => state.tokenInputs[symbol].valueSafe,\n              ),\n              false,\n            )\n            nextState = inputCalculatedLPTokenAmount.gt(\n              effectiveUserLPTokenBalance,\n            )\n              ? {\n                  error: {\n                    field: \"tokenInputs\",\n                    message: \"Insufficient balance.\",\n                  },\n                  lpTokenAmountToSpend: BigNumber.from(\"0\"),\n                }\n              : {\n                  lpTokenAmountToSpend: inputCalculatedLPTokenAmount,\n                  error: null,\n                }\n          }\n        } catch {\n          nextState = {\n            error: {\n              field: \"tokenInputs\",\n              message: \"Insufficient balance in pool.\",\n            },\n          }\n        }\n      }\n      setFormState((prevState) => ({\n        ...prevState,\n        ...nextState,\n      }))\n    }, 250),\n    [userShareData, swapContract, POOL_TOKENS, tokenInputStateCreators],\n  )\n\n  const handleUpdateForm = useCallback(\n    (action: WithdrawFormAction): void => {\n      // update the form with user input immediately\n      // then call expensive debounced fn to update other fields\n      setFormState((prevState) => {\n        let nextState: WithdrawFormState | Record<string, unknown> = {}\n        if (action.fieldName === \"tokenInputs\") {\n          const {\n            tokenSymbol: tokenSymbolInput = \"\",\n            value: valueInput,\n          } = action\n          const newTokenInputs = {\n            ...prevState.tokenInputs,\n            [tokenSymbolInput]: tokenInputStateCreators[tokenSymbolInput](\n              valueInput,\n            ),\n          }\n          const activeInputTokens = POOL_TOKENS.filter(\n            ({ symbol }) => +newTokenInputs[symbol].valueRaw !== 0,\n          )\n          let withdrawType\n          if (activeInputTokens.length === 0) {\n            withdrawType = ALL\n          } else if (activeInputTokens.length === 1) {\n            withdrawType = activeInputTokens[0].symbol\n          } else {\n            withdrawType = IMBALANCE\n          }\n          nextState = {\n            withdrawType,\n            lpTokenAmountToSpend: BigNumber.from(\"0\"),\n            percentage: null,\n            tokenInputs: newTokenInputs,\n            error: null,\n          }\n        } else if (action.fieldName === \"percentage\") {\n          const isInputInvalid =\n            isNaN(+action.value) || +action.value < 0 || +action.value > 100\n          nextState = isInputInvalid\n            ? {\n                percentage: action.value,\n                lpTokenAmountToSpend: BigNumber.from(\"0\"),\n                error: { field: \"percentage\", message: \"Invalid input\" },\n                tokenInputs: tokenInputsEmptyState,\n              }\n            : {\n                withdrawType:\n                  prevState.withdrawType === IMBALANCE\n                    ? ALL\n                    : prevState.withdrawType,\n                percentage: action.value,\n                error: null,\n              }\n        } else if (action.fieldName === \"withdrawType\") {\n          nextState = {\n            tokenInputs: tokenInputsEmptyState,\n            percentage: prevState.percentage || \"100\",\n            withdrawType: action.value,\n            error: null,\n          }\n        } else if (action.fieldName === \"reset\") {\n          nextState = formEmptyState\n        }\n        const finalState = {\n          ...prevState,\n          ...nextState,\n        }\n        const pendingTokenInput =\n          action.fieldName === \"tokenInputs\" &&\n          POOL_TOKENS.every(({ symbol }) => {\n            const stateValue = finalState.tokenInputs[symbol].valueRaw\n            return isNaN(+stateValue) || +stateValue === 0\n          })\n        if (!finalState.error && !pendingTokenInput) {\n          void calculateAndUpdateDynamicFields(finalState)\n        }\n        return finalState\n      })\n    },\n    [\n      POOL_TOKENS,\n      calculateAndUpdateDynamicFields,\n      tokenInputStateCreators,\n      tokenInputsEmptyState,\n      formEmptyState,\n    ],\n  )\n\n  return [formState, handleUpdateForm]\n}\n","import React, { ReactElement, useEffect, useState } from \"react\"\nimport { STABLECOIN_POOL_NAME, STABLECOIN_POOL_TOKENS } from \"../constants\"\nimport WithdrawPage, { ReviewWithdrawData } from \"../components/WithdrawPage\"\nimport { commify, formatUnits, parseUnits } from \"@ethersproject/units\"\n\nimport { AppState } from \"../state\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { calculatePriceImpact } from \"../utils/priceImpact\"\nimport { formatSlippageToString } from \"../utils/slippage\"\nimport { useActiveWeb3React } from \"../hooks\"\nimport { useApproveAndWithdraw } from \"../hooks/useApproveAndWithdraw\"\nimport usePoolData from \"../hooks/usePoolData\"\nimport { useSelector } from \"react-redux\"\nimport { useSwapContract } from \"../hooks/useContract\"\nimport useWithdrawFormState from \"../hooks/useWithdrawFormState\"\n\nfunction WithdrawStable(): ReactElement {\n  const [poolData, userShareData] = usePoolData(STABLECOIN_POOL_NAME)\n  const [withdrawFormState, updateWithdrawFormState] = useWithdrawFormState(\n    STABLECOIN_POOL_NAME,\n  )\n  const { slippageCustom, slippageSelected } = useSelector(\n    (state: AppState) => state.user,\n  )\n  const { tokenPricesUSD } = useSelector((state: AppState) => state.application)\n  const approveAndWithdraw = useApproveAndWithdraw(STABLECOIN_POOL_NAME)\n  const swapContract = useSwapContract(STABLECOIN_POOL_NAME)\n  const { account } = useActiveWeb3React()\n\n  const [estWithdrawBonus, setEstWithdrawBonus] = useState(BigNumber.from(0))\n  useEffect(() => {\n    // evaluate if a new withdraw will exceed the pool's per-user limit\n    async function calculateWithdrawBonus(): Promise<void> {\n      if (\n        swapContract == null ||\n        userShareData == null ||\n        poolData == null ||\n        account == null\n      ) {\n        return\n      }\n      const tokenInputSum = parseUnits(\n        STABLECOIN_POOL_TOKENS.reduce(\n          (sum, { symbol }) =>\n            sum + (+withdrawFormState.tokenInputs[symbol].valueRaw || 0),\n          0,\n        ).toFixed(18),\n        18,\n      )\n      let withdrawLPTokenAmount\n      if (poolData.totalLocked.gt(0) && tokenInputSum.gt(0)) {\n        withdrawLPTokenAmount = await swapContract.calculateTokenAmount(\n          account,\n          STABLECOIN_POOL_TOKENS.map(\n            ({ symbol }) => withdrawFormState.tokenInputs[symbol].valueSafe,\n          ),\n          false,\n        )\n      } else {\n        // when pool is empty, estimate the lptokens by just summing the input instead of calling contract\n        withdrawLPTokenAmount = tokenInputSum\n      }\n      setEstWithdrawBonus(\n        calculatePriceImpact(\n          withdrawLPTokenAmount,\n          tokenInputSum,\n          poolData.virtualPrice,\n        ),\n      )\n    }\n    void calculateWithdrawBonus()\n  }, [poolData, withdrawFormState, swapContract, userShareData, account])\n  async function onConfirmTransaction(): Promise<void> {\n    const {\n      withdrawType,\n      tokenInputs,\n      lpTokenAmountToSpend,\n    } = withdrawFormState\n    await approveAndWithdraw({\n      tokenFormState: tokenInputs,\n      withdrawType,\n      lpTokenAmountToSpend,\n    })\n    updateWithdrawFormState({ fieldName: \"reset\", value: \"reset\" })\n  }\n\n  const tokensData = React.useMemo(\n    () =>\n      STABLECOIN_POOL_TOKENS.map(({ name, symbol, icon }) => ({\n        name,\n        symbol,\n        icon,\n        inputValue: withdrawFormState.tokenInputs[symbol].valueRaw,\n      })),\n    [withdrawFormState],\n  )\n\n  const reviewWithdrawData: ReviewWithdrawData = {\n    withdraw: [],\n    rates: [],\n    slippage: formatSlippageToString(slippageSelected, slippageCustom),\n    priceImpact: estWithdrawBonus,\n  }\n  STABLECOIN_POOL_TOKENS.forEach(({ name, decimals, icon, symbol }) => {\n    if (BigNumber.from(withdrawFormState.tokenInputs[symbol].valueSafe).gt(0)) {\n      reviewWithdrawData.withdraw.push({\n        name,\n        value: commify(\n          formatUnits(\n            withdrawFormState.tokenInputs[symbol].valueSafe,\n            decimals,\n          ),\n        ),\n        icon,\n      })\n      if (tokenPricesUSD != null) {\n        reviewWithdrawData.rates.push({\n          name,\n          value: formatUnits(\n            withdrawFormState.tokenInputs[symbol].valueSafe,\n            decimals,\n          ),\n          rate: commify(tokenPricesUSD[symbol]?.toFixed(2)),\n        })\n      }\n    }\n  })\n\n  return (\n    <WithdrawPage\n      title=\"BTC Pool\"\n      reviewData={reviewWithdrawData}\n      tokensData={tokensData}\n      poolData={poolData}\n      historicalPoolData={null}\n      myShareData={userShareData}\n      formStateData={withdrawFormState}\n      onConfirmTransaction={onConfirmTransaction}\n      onFormChange={updateWithdrawFormState}\n    />\n  )\n}\n\nexport default WithdrawStable\n","import { AppDispatch } from \"../state\"\nimport { REFS } from \"../constants\"\nimport retry from \"async-retry\"\nimport { updateGasPrices } from \"../state/application\"\n\ninterface GenericGasReponse {\n  gasStandard: number\n  gasFast: number\n  gasInstant: number\n}\ninterface POAGasResponse {\n  standard: number\n  fast: number\n  instant: number\n  health: boolean\n}\n\ninterface GasNowGasResponse {\n  code: number\n  data: {\n    rapid: number\n    fast: number\n    standard: number\n  }\n}\n// eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\nconst fetchGasPricePOA = (): Promise<GenericGasReponse> =>\n  fetch(\"https://gasprice.poa.network/\")\n    .then((res) => res.json())\n    .then((body: POAGasResponse) => {\n      const { standard, fast, instant, health } = body\n      if (health) {\n        return {\n          gasStandard: Math.round(standard),\n          gasFast: Math.round(fast),\n          gasInstant: Math.round(instant),\n        }\n      }\n      throw new Error(\"Unable to fetch gas price from POA Network\")\n    })\n\nconst fetchGasPriceGasNow = (): Promise<GenericGasReponse> =>\n  fetch(REFS.GAS_FETCH)\n    .then((res) => res.json())\n    .then((body: GasNowGasResponse) => {\n      const {\n        code,\n        data: { rapid, fast, standard },\n      } = body\n      if (code >= 200 && code < 300) {\n        return {\n          gasStandard: Math.round(standard / 1e9),\n          gasFast: Math.round(fast / 1e9),\n          gasInstant: Math.round(rapid / 1e9),\n        }\n      }\n      throw new Error(\"Unable to fetch gas price from GasNow Network\")\n    })\n\nexport default async function fetchGasPrices(\n  dispatch: AppDispatch,\n): Promise<void> {\n  await retry(\n    () =>\n      fetchGasPriceGasNow().then((gasPrices) => {\n        dispatch(updateGasPrices(gasPrices))\n      }),\n    {\n      retries: 3,\n    },\n  )\n}\n","import \"../styles/global.scss\"\n\nimport React, { ReactElement, Suspense, useCallback } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport { AppDispatch } from \"../state\"\nimport { BLOCK_TIME } from \"../constants\"\nimport DepositStable from \"./DepositStable\"\nimport Risk from \"./Risk\"\nimport Stake from \"./Stake\"\nimport SwapStable from \"./SwapStable\"\nimport ToastsProvider from \"../providers/ToastsProvider\"\nimport Web3ReactManager from \"../components/Web3ReactManager\"\nimport WithdrawStable from \"./WithdrawStable\"\nimport fetchGasPrices from \"../utils/updateGasPrices\"\nimport fetchTokenPricesUSD from \"../utils/updateTokenPrices\"\nimport { useDispatch } from \"react-redux\"\nimport usePoller from \"../hooks/usePoller\"\n\nexport default function App(): ReactElement {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const fetchAndUpdateGasPrice = useCallback(() => {\n    void fetchGasPrices(dispatch)\n  }, [dispatch])\n  const fetchAndUpdateTokensPrice = useCallback(() => {\n    fetchTokenPricesUSD(dispatch)\n  }, [dispatch])\n  usePoller(fetchAndUpdateGasPrice, BLOCK_TIME)\n  usePoller(fetchAndUpdateTokensPrice, BLOCK_TIME * 3)\n\n  return (\n    <Suspense fallback={null}>\n      <Web3ReactManager>\n        <ToastsProvider>\n          <Switch>\n            <Route exact path=\"/\" component={SwapStable} />\n            <Route exact path=\"/deposit\" component={DepositStable} />\n            <Route exact path=\"/withdraw\" component={WithdrawStable} />\n            <Route exact path=\"/stake\" component={Stake} />\n            <Route exact path=\"/risk\" component={Risk} />\n          </Switch>\n        </ToastsProvider>\n      </Web3ReactManager>\n    </Suspense>\n  )\n}\n","import { AppDispatch } from \"../state\"\nimport { STABLECOIN_POOL_TOKENS } from \"../constants\"\nimport retry from \"async-retry\"\nimport { updateTokensPricesUSD } from \"../state/application\"\n\nconst coinGeckoAPI = \"https://api.coingecko.com/api/v3/simple/price\"\n\ninterface CoinGeckoReponse {\n  [tokenSymbol: string]: {\n    usd: number\n  }\n}\n\nexport default function fetchTokenPricesUSD(dispatch: AppDispatch): void {\n  const tokens = STABLECOIN_POOL_TOKENS\n  const tokenIds = tokens\n    .map(({ geckoId }) => geckoId)\n    .concat([\"ethereum\", \"bitcoin\", \"keep-network\"])\n  void retry(\n    () =>\n      fetch(`${coinGeckoAPI}?ids=${encodeURIComponent(\n        tokenIds.join(\",\"),\n      )}&vs_currencies=usd\n    `)\n        .then((res) => res.json())\n        .then((body: CoinGeckoReponse) => {\n          const result = tokens.reduce(\n            (acc, token) => {\n              return { ...acc, [token.symbol]: body?.[token.geckoId]?.usd }\n            },\n            {\n              ETH: body?.ethereum?.usd,\n              BTC: body?.bitcoin?.usd,\n              KEEP: body?.[\"keep-network\"].usd,\n            },\n          )\n          dispatch(updateTokensPricesUSD(result))\n        }),\n    { retries: 3 },\n  )\n}\n","import { ThemeConfig, extendTheme } from \"@chakra-ui/react\"\n\nimport components from \"./components/index\"\n\n// import components from \"./components\"\n\nconst config: ThemeConfig = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n}\n\nconst colors = {\n  button: {\n    500: \"#949494\",\n  },\n  red: {\n    50: \"#ffe3e3\",\n    100: \"#ffb2b3\",\n    200: \"#fd8282\",\n    300: \"#fb5151\",\n    400: \"#f92120\",\n    500: \"#df0a06\", // base\n    600: \"#ae0404\",\n    700: \"#7d0102\",\n    800: \"#4d0000\",\n    900: \"#1f0000\",\n  },\n  teal: {\n    50: \"#d7fffe\",\n    100: \"#abfff7\",\n    200: \"#7afff0\",\n    300: \"#48ffea\",\n    400: \"#1affe4\",\n    500: \"#00e6ca\", // base\n    600: \"#00b39d\",\n    700: \"#008170\",\n    800: \"#004e43\",\n    900: \"#001c16\",\n  },\n  purple: {\n    50: \"#f4e3ff\",\n    100: \"#d5b2ff\",\n    200: \"#b87fff\",\n    300: \"#9b4cff\",\n    400: \"#7e1aff\",\n    500: \"#6500e6\", // base\n    600: \"#4e00b4\",\n    700: \"#380082\",\n    800: \"#220050\",\n    900: \"#0d0020\",\n  },\n  gold: {\n    50: \"#fff6e1\",\n    100: \"#fbe5b7\",\n    200: \"#f7d38a\",\n    300: \"#f4c25c\",\n    400: \"#f1b030\",\n    500: \"#d7971b\", // base\n    600: \"#a77513\",\n    700: \"#77540c\",\n    800: \"#483204\",\n    900: \"#1a1100\",\n  },\n}\n\nconst fonts = {\n  body: \"Source Code Pro, monospace, sans-serif\",\n  heading: \"Noe Display, Times, serif\",\n  mono: \"Source Code Pro, monospace, sans-serif\",\n}\n\nconst overrides = { config, colors, fonts, components }\n\nexport default extendTheme(overrides)\n","import Button from \"./button\"\nexport default {\n  Button,\n}\n","import {\n  CSSWithMultiValues,\n  RecursiveCSSObject,\n} from \"@chakra-ui/styled-system\"\n\nimport { Dict } from \"@chakra-ui/utils\"\nimport { transparentize } from \"@chakra-ui/theme-tools\"\n\nconst variantPrimary = (\n  props: Dict,\n): RecursiveCSSObject<CSSWithMultiValues> => {\n  const transparentColor = transparentize(\"gray.500\", 0.4)(props.theme)\n  const disabled = {\n    opacity: \"1\",\n    color: transparentColor,\n    bg: \"button.500\",\n  }\n  return {\n    color: \"black\",\n    bg: \"button.500\",\n    _hover: {\n      color: \"white\",\n      bg: \"purple.500\",\n      _disabled: disabled,\n    },\n    _active: {\n      color: \"white\",\n      bg: \"purple.500\",\n    },\n    _disabled: {\n      color: \"gray.500\",\n      bg: \"button.500\",\n      _disabled: disabled,\n    },\n  }\n}\n\nconst variants = {\n  primary: variantPrimary,\n}\nexport default { variants }\n","import {\n  ExternalProvider,\n  JsonRpcFetchFunc,\n  Web3Provider,\n} from \"@ethersproject/providers\"\n\nexport default function getLibrary(\n  provider: ExternalProvider | JsonRpcFetchFunc,\n): Web3Provider {\n  const library = new Web3Provider(provider, \"any\")\n  library.pollingInterval = 15000\n  return library\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    void import(\"web-vitals\").then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry)\n        getFID(onPerfEntry)\n        getFCP(onPerfEntry)\n        getLCP(onPerfEntry)\n        getTTFB(onPerfEntry)\n      },\n    )\n  }\n}\n\nexport default reportWebVitals\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\nimport { load, save } from \"redux-localstorage-simple\"\nimport user, { initialState as userInitialState } from \"./user\"\n\nimport application from \"./application\"\nimport { merge } from \"lodash\"\n\nconst PERSISTED_KEYS: string[] = [\"user\"]\nconst stateFromStorage = load({\n  states: PERSISTED_KEYS,\n})\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n  },\n  middleware: [\n    ...getDefaultMiddleware({ thunk: false }),\n    save({ states: PERSISTED_KEYS }),\n  ],\n  preloadedState: merge({}, { user: userInitialState }, stateFromStorage),\n})\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import \"./index.css\"\nimport \"./i18n\"\n\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\nimport { Web3ReactProvider, createWeb3ReactRoot } from \"@web3-react/core\"\nimport { logError, sendWebVitalsToGA } from \"./utils/googleAnalytics\"\n\nimport App from \"./pages/App\"\nimport { NetworkContextName } from \"./constants\"\nimport { Provider } from \"react-redux\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { HashRouter as Router } from \"react-router-dom\"\nimport chakraTheme from \"./theme/\"\nimport getLibrary from \"./utils/getLibrary\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport store from \"./state\"\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nif (window && window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false\n}\n\nwindow.addEventListener(\"error\", logError)\n\nReactDOM.render(\n  <>\n    <ColorModeScript initialColorMode={chakraTheme.config.initialColorMode} />\n    <React.StrictMode>\n      <ChakraProvider theme={chakraTheme}>\n        <Web3ReactProvider getLibrary={getLibrary}>\n          <Web3ProviderNetwork getLibrary={getLibrary}>\n            <Provider store={store}>\n              <Router>\n                <App />\n              </Router>\n            </Provider>\n          </Web3ProviderNetwork>\n        </Web3ReactProvider>\n      </ChakraProvider>\n    </React.StrictMode>\n  </>,\n  document.getElementById(\"root\"),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(sendWebVitalsToGA)\n"],"sourceRoot":""}